ARM GAS  C:\Users\LAIR\AppData\Local\Temp\ccpuF2ic.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"ADC.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.ADC_Init,"ax",%progbits
  18              		.align	2
  19              		.global	ADC_Init
  20              		.code	16
  21              		.thumb_func
  22              		.type	ADC_Init, %function
  23              	ADC_Init:
  24              	.LFB2:
  25              		.file 1 ".\\Generated_Source\\PSoC4\\ADC.c"
   1:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/ADC.c **** * File Name: ADC.c
   3:.\Generated_Source\PSoC4/ADC.c **** * Version 2.40
   4:.\Generated_Source\PSoC4/ADC.c **** *
   5:.\Generated_Source\PSoC4/ADC.c **** * Description:
   6:.\Generated_Source\PSoC4/ADC.c **** *  This file provides the source code to the API for the Sequencing Successive
   7:.\Generated_Source\PSoC4/ADC.c **** *  Approximation ADC Component Component.
   8:.\Generated_Source\PSoC4/ADC.c **** *
   9:.\Generated_Source\PSoC4/ADC.c **** * Note:
  10:.\Generated_Source\PSoC4/ADC.c **** *
  11:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
  12:.\Generated_Source\PSoC4/ADC.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  13:.\Generated_Source\PSoC4/ADC.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:.\Generated_Source\PSoC4/ADC.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:.\Generated_Source\PSoC4/ADC.c **** * the software package with which this file was provided.
  16:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
  17:.\Generated_Source\PSoC4/ADC.c **** 
  18:.\Generated_Source\PSoC4/ADC.c **** #include "ADC.h"
  19:.\Generated_Source\PSoC4/ADC.c **** 
  20:.\Generated_Source\PSoC4/ADC.c **** 
  21:.\Generated_Source\PSoC4/ADC.c **** /***************************************
  22:.\Generated_Source\PSoC4/ADC.c **** * Global data allocation
  23:.\Generated_Source\PSoC4/ADC.c **** ***************************************/
  24:.\Generated_Source\PSoC4/ADC.c **** uint8 ADC_initVar = 0u;
  25:.\Generated_Source\PSoC4/ADC.c **** volatile int16 ADC_offset[ADC_TOTAL_CHANNELS_NUM];
  26:.\Generated_Source\PSoC4/ADC.c **** volatile int32 ADC_countsPer10Volt[ADC_TOTAL_CHANNELS_NUM];   /* Gain compensation */
  27:.\Generated_Source\PSoC4/ADC.c **** 
  28:.\Generated_Source\PSoC4/ADC.c **** 
  29:.\Generated_Source\PSoC4/ADC.c **** /***************************************
  30:.\Generated_Source\PSoC4/ADC.c **** * Local data allocation
  31:.\Generated_Source\PSoC4/ADC.c **** ***************************************/
  32:.\Generated_Source\PSoC4/ADC.c **** /* Channels configuration generated by customiser */
ARM GAS  C:\Users\LAIR\AppData\Local\Temp\ccpuF2ic.s 			page 2


  33:.\Generated_Source\PSoC4/ADC.c **** static const uint32 CYCODE ADC_channelsConfig[] = { 0x00000400u, 0x00000400u, 0x00000400u, 0x000004
  34:.\Generated_Source\PSoC4/ADC.c **** 
  35:.\Generated_Source\PSoC4/ADC.c **** 
  36:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
  37:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_Start
  38:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
  39:.\Generated_Source\PSoC4/ADC.c **** *
  40:.\Generated_Source\PSoC4/ADC.c **** * Summary:
  41:.\Generated_Source\PSoC4/ADC.c **** *  Performs all required initialization for this component
  42:.\Generated_Source\PSoC4/ADC.c **** *  and enables the power. The power will be set to the appropriate
  43:.\Generated_Source\PSoC4/ADC.c **** *  power based on the clock frequency.
  44:.\Generated_Source\PSoC4/ADC.c **** *
  45:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
  46:.\Generated_Source\PSoC4/ADC.c **** *  None.
  47:.\Generated_Source\PSoC4/ADC.c **** *
  48:.\Generated_Source\PSoC4/ADC.c **** * Return:
  49:.\Generated_Source\PSoC4/ADC.c **** *  None.
  50:.\Generated_Source\PSoC4/ADC.c **** *
  51:.\Generated_Source\PSoC4/ADC.c **** * Global variables:
  52:.\Generated_Source\PSoC4/ADC.c **** *  The ADC_initVar variable is used to indicate when/if initial
  53:.\Generated_Source\PSoC4/ADC.c **** *  configuration of this component has happened. The variable is initialized to
  54:.\Generated_Source\PSoC4/ADC.c **** *  zero and set to 1 the first time ADC_Start() is called. This allows for
  55:.\Generated_Source\PSoC4/ADC.c **** *  component Re-Start without re-initialization in all subsequent calls to the
  56:.\Generated_Source\PSoC4/ADC.c **** *  ADC_Start() routine.
  57:.\Generated_Source\PSoC4/ADC.c **** *  If re-initialization of the component is required the variable should be set
  58:.\Generated_Source\PSoC4/ADC.c **** *  to zero before call of ADC_Start() routine, or the user may call
  59:.\Generated_Source\PSoC4/ADC.c **** *  ADC_Init() and ADC_Enable() as done in the
  60:.\Generated_Source\PSoC4/ADC.c **** *  ADC_Start() routine.
  61:.\Generated_Source\PSoC4/ADC.c **** *
  62:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
  63:.\Generated_Source\PSoC4/ADC.c **** void ADC_Start(void)
  64:.\Generated_Source\PSoC4/ADC.c **** {
  65:.\Generated_Source\PSoC4/ADC.c ****     /* If not Initialized then initialize all required hardware and software */
  66:.\Generated_Source\PSoC4/ADC.c ****     if(ADC_initVar == 0u)
  67:.\Generated_Source\PSoC4/ADC.c ****     {
  68:.\Generated_Source\PSoC4/ADC.c ****         ADC_Init();
  69:.\Generated_Source\PSoC4/ADC.c ****         ADC_initVar = 1u;
  70:.\Generated_Source\PSoC4/ADC.c ****     }
  71:.\Generated_Source\PSoC4/ADC.c ****     ADC_Enable();
  72:.\Generated_Source\PSoC4/ADC.c **** }
  73:.\Generated_Source\PSoC4/ADC.c **** 
  74:.\Generated_Source\PSoC4/ADC.c **** 
  75:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
  76:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_Init
  77:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
  78:.\Generated_Source\PSoC4/ADC.c **** *
  79:.\Generated_Source\PSoC4/ADC.c **** * Summary:
  80:.\Generated_Source\PSoC4/ADC.c **** *  Initialize component's parameters to the parameters set by user in the
  81:.\Generated_Source\PSoC4/ADC.c **** *  customizer of the component placed onto schematic. Usually called in
  82:.\Generated_Source\PSoC4/ADC.c **** *  ADC_Start().
  83:.\Generated_Source\PSoC4/ADC.c **** *
  84:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
  85:.\Generated_Source\PSoC4/ADC.c **** *  None.
  86:.\Generated_Source\PSoC4/ADC.c **** *
  87:.\Generated_Source\PSoC4/ADC.c **** * Return:
  88:.\Generated_Source\PSoC4/ADC.c **** *  None.
  89:.\Generated_Source\PSoC4/ADC.c **** *
ARM GAS  C:\Users\LAIR\AppData\Local\Temp\ccpuF2ic.s 			page 3


  90:.\Generated_Source\PSoC4/ADC.c **** * Global variables:
  91:.\Generated_Source\PSoC4/ADC.c **** *  The ADC_offset variable is initialized.
  92:.\Generated_Source\PSoC4/ADC.c **** *
  93:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
  94:.\Generated_Source\PSoC4/ADC.c **** void ADC_Init(void)
  95:.\Generated_Source\PSoC4/ADC.c **** {
  26              		.loc 1 95 0
  27              		.cfi_startproc
  28 0000 10B5     		push	{r4, lr}
  29              		.cfi_def_cfa_offset 8
  30              		.cfi_offset 4, -8
  31              		.cfi_offset 14, -4
  96:.\Generated_Source\PSoC4/ADC.c ****     uint32 chNum;
  97:.\Generated_Source\PSoC4/ADC.c ****     uint32 tmpRegVal;
  98:.\Generated_Source\PSoC4/ADC.c ****     int32 counts;
  99:.\Generated_Source\PSoC4/ADC.c **** 
 100:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_TOTAL_CHANNELS_NUM > 1u)
 101:.\Generated_Source\PSoC4/ADC.c ****         static const uint8 CYCODE ADC_InputsPlacement[] =
 102:.\Generated_Source\PSoC4/ADC.c ****         {
 103:.\Generated_Source\PSoC4/ADC.c ****             (uint8)(ADC_cy_psoc4_sarmux_8__CH_0_PORT << 4u) |
 104:.\Generated_Source\PSoC4/ADC.c ****             (uint8)ADC_cy_psoc4_sarmux_8__CH_0_PIN
 105:.\Generated_Source\PSoC4/ADC.c ****             ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_1_PORT << 4u) |
 106:.\Generated_Source\PSoC4/ADC.c ****              (uint8)ADC_cy_psoc4_sarmux_8__CH_1_PIN
 107:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 2u)
 108:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_2_PORT << 4u) |
 109:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_2_PIN
 110:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 2u */
 111:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 3u)
 112:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_3_PORT << 4u) |
 113:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_3_PIN
 114:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 3u */
 115:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 4u)
 116:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_4_PORT << 4u) |
 117:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_4_PIN
 118:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 4u */
 119:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 5u)
 120:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_5_PORT << 4u) |
 121:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_5_PIN
 122:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 5u */
 123:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 6u)
 124:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_6_PORT << 4u) |
 125:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_6_PIN
 126:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 6u */
 127:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 7u)
 128:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_7_PORT << 4u) |
 129:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_7_PIN
 130:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 7u */
 131:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 8u)
 132:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_8_PORT << 4u) |
 133:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_8_PIN
 134:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 8u */
 135:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 9u)
 136:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_9_PORT << 4u) |
 137:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_9_PIN
 138:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 9u */
 139:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 10u)
 140:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_10_PORT << 4u) |
ARM GAS  C:\Users\LAIR\AppData\Local\Temp\ccpuF2ic.s 			page 4


 141:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_10_PIN
 142:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 10u */
 143:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 11u)
 144:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_11_PORT << 4u) |
 145:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_11_PIN
 146:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 11u */
 147:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 12u)
 148:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_12_PORT << 4u) |
 149:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_12_PIN
 150:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 12u */
 151:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 13u)
 152:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_13_PORT << 4u) |
 153:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_13_PIN
 154:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 13u */
 155:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 14u)
 156:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_14_PORT << 4u) |
 157:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_14_PIN
 158:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 14u */
 159:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 15u)
 160:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_15_PORT << 4u) |
 161:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_15_PIN
 162:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 15u */
 163:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 16u)
 164:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_16_PORT << 4u) |
 165:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_16_PIN
 166:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 16u */
 167:.\Generated_Source\PSoC4/ADC.c ****         };
 168:.\Generated_Source\PSoC4/ADC.c ****     #endif /* End ADC_TOTAL_CHANNELS_NUM > 1u */
 169:.\Generated_Source\PSoC4/ADC.c **** 
 170:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_IRQ_REMOVE == 0u)
 171:.\Generated_Source\PSoC4/ADC.c ****         /* Start and set interrupt vector */
 172:.\Generated_Source\PSoC4/ADC.c ****         CyIntSetPriority(ADC_INTC_NUMBER, ADC_INTC_PRIOR_NUMBER);
  32              		.loc 1 172 0
  33 0002 1120     		mov	r0, #17
  34 0004 0321     		mov	r1, #3
  35 0006 FFF7FEFF 		bl	CyIntSetPriority
  36              	.LVL0:
 173:.\Generated_Source\PSoC4/ADC.c ****         (void)CyIntSetVector(ADC_INTC_NUMBER, &ADC_ISR);
  37              		.loc 1 173 0
  38 000a 1120     		mov	r0, #17
  39 000c 4349     		ldr	r1, .L12
  40 000e FFF7FEFF 		bl	CyIntSetVector
  41              	.LVL1:
 174:.\Generated_Source\PSoC4/ADC.c ****     #endif   /* End ADC_IRQ_REMOVE */
 175:.\Generated_Source\PSoC4/ADC.c **** 
 176:.\Generated_Source\PSoC4/ADC.c ****     /* Init SAR and MUX registers */
 177:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CHAN_EN_REG = ADC_DEFAULT_EN_CHANNELS;
  42              		.loc 1 177 0
  43 0012 0F22     		mov	r2, #15
  44 0014 424B     		ldr	r3, .L12+4
  45 0016 1A60     		str	r2, [r3]
 178:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG |= ADC_DEFAULT_CTRL_REG_CFG | 
 179:.\Generated_Source\PSoC4/ADC.c ****         /* Enable the SAR internal pump when global pump is enabled */
 180:.\Generated_Source\PSoC4/ADC.c ****         (((ADC_PUMP_CTRL_REG & ADC_PUMP_CTRL_ENABLED) != 0u) ? 
  46              		.loc 1 180 0
  47 0018 424B     		ldr	r3, .L12+8
  48 001a 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\LAIR\AppData\Local\Temp\ccpuF2ic.s 			page 5


 178:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG |= ADC_DEFAULT_CTRL_REG_CFG | 
  49              		.loc 1 178 0
  50 001c 002B     		cmp	r3, #0
  51 001e 01DA     		bge	.L10
  52 0020 4149     		ldr	r1, .L12+12
  53 0022 00E0     		b	.L2
  54              	.L10:
  55 0024 4149     		ldr	r1, .L12+16
  56              	.L2:
 178:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG |= ADC_DEFAULT_CTRL_REG_CFG | 
  57              		.loc 1 178 0 is_stmt 0 discriminator 4
  58 0026 424A     		ldr	r2, .L12+20
  59 0028 1368     		ldr	r3, [r2]
  60 002a 0B43     		orr	r3, r1
  61 002c 1360     		str	r3, [r2]
 181:.\Generated_Source\PSoC4/ADC.c ****         ADC_BOOSTPUMP_EN : 0u);
 182:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SAMPLE_CTRL_REG = ADC_DEFAULT_SAMPLE_CTRL_REG_CFG;
  62              		.loc 1 182 0 is_stmt 1 discriminator 4
  63 002e 414A     		ldr	r2, .L12+24
  64 0030 414B     		ldr	r3, .L12+28
  65 0032 1A60     		str	r2, [r3]
 183:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG = ADC_DEFAULT_RANGE_THRES_REG_CFG;
  66              		.loc 1 183 0 discriminator 4
  67 0034 414A     		ldr	r2, .L12+32
  68 0036 424B     		ldr	r3, .L12+36
  69 0038 1A60     		str	r2, [r3]
 184:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_COND_REG  = ADC_COMPARE_MODE;
  70              		.loc 1 184 0 discriminator 4
  71 003a 0023     		mov	r3, #0
  72 003c 414A     		ldr	r2, .L12+40
  73 003e 1360     		str	r3, [r2]
 185:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SAMPLE_TIME01_REG = ADC_DEFAULT_SAMPLE_TIME01_REG_CFG;
  74              		.loc 1 185 0 discriminator 4
  75 0040 414A     		ldr	r2, .L12+44
  76 0042 4249     		ldr	r1, .L12+48
  77 0044 0A60     		str	r2, [r1]
 186:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SAMPLE_TIME23_REG = ADC_DEFAULT_SAMPLE_TIME23_REG_CFG;
  78              		.loc 1 186 0 discriminator 4
  79 0046 4249     		ldr	r1, .L12+52
  80 0048 0A60     		str	r2, [r1]
 187:.\Generated_Source\PSoC4/ADC.c ****     
 188:.\Generated_Source\PSoC4/ADC.c ****     /* Connect Vm to VSSA when even one channel is single-ended or multiple channels configured */
 189:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_DEFAULT_MUX_SWITCH0 != 0u)
 190:.\Generated_Source\PSoC4/ADC.c ****         ADC_MUX_SWITCH0_REG |= ADC_DEFAULT_MUX_SWITCH0;
  81              		.loc 1 190 0 discriminator 4
  82 004a 424A     		ldr	r2, .L12+56
  83 004c 1168     		ldr	r1, [r2]
  84 004e 8020     		mov	r0, #128
  85 0050 4002     		lsl	r0, r0, #9
  86 0052 0143     		orr	r1, r0
  87 0054 1160     		str	r1, [r2]
 191:.\Generated_Source\PSoC4/ADC.c ****         /* Set MUX_HW_CTRL_VSSA in MUX_SWITCH_HW_CTRL when multiple channels enabled */
 192:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_TOTAL_CHANNELS_NUM > 1u)
 193:.\Generated_Source\PSoC4/ADC.c ****             ADC_MUX_SWITCH_HW_CTRL_REG |= ADC_DEFAULT_MUX_SWITCH0;
  88              		.loc 1 193 0 discriminator 4
  89 0056 4049     		ldr	r1, .L12+60
  90 0058 0A68     		ldr	r2, [r1]
ARM GAS  C:\Users\LAIR\AppData\Local\Temp\ccpuF2ic.s 			page 6


  91 005a 0243     		orr	r2, r0
  92 005c 0A60     		str	r2, [r1]
 194:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_TOTAL_CHANNELS_NUM > 1u */
 195:.\Generated_Source\PSoC4/ADC.c ****     #endif /*ADC_CHANNELS_MODE !=0 */
 196:.\Generated_Source\PSoC4/ADC.c **** 
 197:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SATURATE_INTR_MASK_REG = 0u;
  93              		.loc 1 197 0 discriminator 4
  94 005e 3F4A     		ldr	r2, .L12+64
  95 0060 1360     		str	r3, [r2]
 198:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_INTR_MASK_REG = 0u;
  96              		.loc 1 198 0 discriminator 4
  97 0062 3F4A     		ldr	r2, .L12+68
  98 0064 1360     		str	r3, [r2]
 199:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_INTR_MASK_REG = ADC_SAR_INTR_MASK;
  99              		.loc 1 199 0 discriminator 4
 100 0066 0122     		mov	r2, #1
 101 0068 3E4B     		ldr	r3, .L12+72
 102 006a 1A60     		str	r2, [r3]
 200:.\Generated_Source\PSoC4/ADC.c **** 
 201:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_CY_SAR_IP_VER == ADC_CY_SAR_IP_VER0)
 202:.\Generated_Source\PSoC4/ADC.c ****         ADC_ANA_TRIM_REG = ADC_TRIM_COEF;
 203:.\Generated_Source\PSoC4/ADC.c ****     #endif /* (ADC_CY_SAR_IP_VER == ADC_CY_SAR_IP_VER0) */
 204:.\Generated_Source\PSoC4/ADC.c **** 
 205:.\Generated_Source\PSoC4/ADC.c ****     /* Read and modify default configuration based on characterization */
 206:.\Generated_Source\PSoC4/ADC.c ****     tmpRegVal = ADC_SAR_DFT_CTRL_REG;
 103              		.loc 1 206 0 discriminator 4
 104 006c 3E4A     		ldr	r2, .L12+76
 105 006e 1168     		ldr	r1, [r2]
 106              	.LVL2:
 207:.\Generated_Source\PSoC4/ADC.c ****     tmpRegVal &= (uint32)~ADC_DCEN;
 208:.\Generated_Source\PSoC4/ADC.c ****     
 209:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_CY_SAR_IP_VER == ADC_CY_SAR_IP_VER0)
 210:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_NOMINAL_CLOCK_FREQ > (ADC_MAX_FREQUENCY / 2))
 211:.\Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_SEL_CSEL_DFT_CHAR;
 212:.\Generated_Source\PSoC4/ADC.c ****         #else  /* clock speed < 9 Mhz */
 213:.\Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_DLY_INC;
 214:.\Generated_Source\PSoC4/ADC.c ****         #endif /* clock speed > 9 Mhz */
 215:.\Generated_Source\PSoC4/ADC.c ****     #else
 216:.\Generated_Source\PSoC4/ADC.c ****         #if ((ADC_DEFAULT_VREF_SEL == ADC__INTERNAL1024) || \
 217:.\Generated_Source\PSoC4/ADC.c ****              (ADC_DEFAULT_VREF_SEL == ADC__INTERNALVREF))
 218:.\Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_DLY_INC;
 219:.\Generated_Source\PSoC4/ADC.c ****         #else
 220:.\Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_DCEN;
 221:.\Generated_Source\PSoC4/ADC.c ****             tmpRegVal &= (uint32)~ADC_DLY_INC;
 107              		.loc 1 221 0 discriminator 4
 108 0070 3E4B     		ldr	r3, .L12+80
 109 0072 0B40     		and	r3, r1
 110 0074 8021     		mov	r1, #128
 111              	.LVL3:
 112 0076 8905     		lsl	r1, r1, #22
 113 0078 0B43     		orr	r3, r1
 114              	.LVL4:
 222:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ((ADC_DEFAULT_VREF_SEL == ADC__INTERNAL1024) || \
 223:.\Generated_Source\PSoC4/ADC.c ****                    (ADC_DEFAULT_VREF_SEL == ADC__INTERNALVREF)) */
 224:.\Generated_Source\PSoC4/ADC.c ****     #endif /* (ADC_CY_SAR_IP_VER == ADC_CY_SAR_IP_VER0) */
 225:.\Generated_Source\PSoC4/ADC.c ****     
 226:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_DFT_CTRL_REG = tmpRegVal;
ARM GAS  C:\Users\LAIR\AppData\Local\Temp\ccpuF2ic.s 			page 7


 115              		.loc 1 226 0 discriminator 4
 116 007a 1360     		str	r3, [r2]
 117              	.LVL5:
 227:.\Generated_Source\PSoC4/ADC.c **** 
 228:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_MAX_RESOLUTION != ADC_RESOLUTION_12)
 229:.\Generated_Source\PSoC4/ADC.c ****         ADC_WOUNDING_REG = ADC_ALT_WOUNDING;
 230:.\Generated_Source\PSoC4/ADC.c ****     #endif /* ADC_MAX_RESOLUTION != ADC_RESOLUTION_12 */
 231:.\Generated_Source\PSoC4/ADC.c **** 
 232:.\Generated_Source\PSoC4/ADC.c ****     for(chNum = 0u; chNum < ADC_TOTAL_CHANNELS_NUM; chNum++)
 118              		.loc 1 232 0 discriminator 4
 119 007c 0022     		mov	r2, #0
 120 007e 49E0     		b	.L3
 121              	.LVL6:
 122              	.L9:
 233:.\Generated_Source\PSoC4/ADC.c ****     {
 234:.\Generated_Source\PSoC4/ADC.c ****         tmpRegVal = (ADC_channelsConfig[chNum] & ADC_CHANNEL_CONFIG_MASK);
 123              		.loc 1 234 0
 124 0080 3B48     		ldr	r0, .L12+84
 125 0082 9100     		lsl	r1, r2, #2
 126 0084 0C58     		ldr	r4, [r1, r0]
 127 0086 DC23     		mov	r3, #220
 128 0088 9B01     		lsl	r3, r3, #6
 129 008a 2340     		and	r3, r4
 130              	.LVL7:
 235:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_TOTAL_CHANNELS_NUM > 1u)
 236:.\Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_InputsPlacement[chNum];
 131              		.loc 1 236 0
 132 008c 8018     		add	r0, r0, r2
 133 008e 007C     		ldrb	r0, [r0, #16]
 134 0090 0343     		orr	r3, r0
 135              	.LVL8:
 237:.\Generated_Source\PSoC4/ADC.c ****         #endif /* End ADC_TOTAL_CHANNELS_NUM > 1u */
 238:.\Generated_Source\PSoC4/ADC.c ****         
 239:.\Generated_Source\PSoC4/ADC.c ****         
 240:.\Generated_Source\PSoC4/ADC.c ****         /* When the part is limited to 10-bit then the SUB_RESOLUTION bit
 241:.\Generated_Source\PSoC4/ADC.c ****         *  will be ignored and the RESOLUTION bit selects between 10-bit
 242:.\Generated_Source\PSoC4/ADC.c ****         *  (0) and 8-bit (1) resolution.
 243:.\Generated_Source\PSoC4/ADC.c ****         */
 244:.\Generated_Source\PSoC4/ADC.c ****         #if((ADC_MAX_RESOLUTION != ADC_RESOLUTION_12) && \
 245:.\Generated_Source\PSoC4/ADC.c ****             (ADC_ALT_WOUNDING == ADC_WOUNDING_10BIT))
 246:.\Generated_Source\PSoC4/ADC.c ****             tmpRegVal &= (uint32)(~ADC_ALT_RESOLUTION_ON);
 247:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_MAX_RESOLUTION != ADC_RESOLUTION_12 */
 248:.\Generated_Source\PSoC4/ADC.c **** 
 249:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_INJ_CHANNEL_ENABLED)
 250:.\Generated_Source\PSoC4/ADC.c ****         if(chNum < ADC_SEQUENCED_CHANNELS_NUM)
 251:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_INJ_CHANNEL_ENABLED */
 252:.\Generated_Source\PSoC4/ADC.c ****         {
 253:.\Generated_Source\PSoC4/ADC.c ****             CY_SET_REG32((reg32 *)(ADC_SAR_CHAN_CONFIG_IND + (uint32)(chNum << 2)), tmpRegVal);
 136              		.loc 1 253 0
 137 0092 3848     		ldr	r0, .L12+88
 138 0094 8446     		mov	ip, r0
 139 0096 6144     		add	r1, r1, ip
 140 0098 0B60     		str	r3, [r1]
 254:.\Generated_Source\PSoC4/ADC.c **** 
 255:.\Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chNum] & ADC_IS_SATURATE_EN_MASK) != 0u)
 141              		.loc 1 255 0
 142 009a E307     		lsl	r3, r4, #31
ARM GAS  C:\Users\LAIR\AppData\Local\Temp\ccpuF2ic.s 			page 8


 143 009c 08D5     		bpl	.L4
 144              	.LVL9:
 256:.\Generated_Source\PSoC4/ADC.c ****             {
 257:.\Generated_Source\PSoC4/ADC.c ****                 ADC_SAR_SATURATE_INTR_MASK_REG |= (uint16)((uint16)1 << chNum);
 145              		.loc 1 257 0
 146 009e 2F48     		ldr	r0, .L12+64
 147 00a0 0468     		ldr	r4, [r0]
 148 00a2 8021     		mov	r1, #128
 149              	.LVL10:
 150 00a4 4902     		lsl	r1, r1, #9
 151 00a6 0B1C     		mov	r3, r1
 152 00a8 9340     		lsl	r3, r3, r2
 153 00aa 1B0C     		lsr	r3, r3, #16
 154 00ac 2343     		orr	r3, r4
 155 00ae 0360     		str	r3, [r0]
 156              	.LVL11:
 157              	.L4:
 258:.\Generated_Source\PSoC4/ADC.c ****             }
 259:.\Generated_Source\PSoC4/ADC.c **** 
 260:.\Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chNum] & ADC_IS_RANGE_CTRL_EN_MASK) != 0u)
 158              		.loc 1 260 0
 159 00b0 9300     		lsl	r3, r2, #2
 160 00b2 2F49     		ldr	r1, .L12+84
 161              	.LVL12:
 162 00b4 5B58     		ldr	r3, [r3, r1]
 163 00b6 9B07     		lsl	r3, r3, #30
 164 00b8 08D5     		bpl	.L5
 261:.\Generated_Source\PSoC4/ADC.c ****             {
 262:.\Generated_Source\PSoC4/ADC.c ****                 ADC_SAR_RANGE_INTR_MASK_REG |= (uint16)((uint16)1 << chNum);
 165              		.loc 1 262 0
 166 00ba 2948     		ldr	r0, .L12+68
 167 00bc 0468     		ldr	r4, [r0]
 168 00be 8021     		mov	r1, #128
 169              	.LVL13:
 170 00c0 4902     		lsl	r1, r1, #9
 171 00c2 0B1C     		mov	r3, r1
 172 00c4 9340     		lsl	r3, r3, r2
 173 00c6 1B0C     		lsr	r3, r3, #16
 174 00c8 2343     		orr	r3, r4
 175 00ca 0360     		str	r3, [r0]
 176              	.L5:
 263:.\Generated_Source\PSoC4/ADC.c ****             }
 264:.\Generated_Source\PSoC4/ADC.c ****         }
 265:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_INJ_CHANNEL_ENABLED)
 266:.\Generated_Source\PSoC4/ADC.c ****             else
 267:.\Generated_Source\PSoC4/ADC.c ****             {
 268:.\Generated_Source\PSoC4/ADC.c ****                 CY_SET_REG32(ADC_SAR_INJ_CHAN_CONFIG_PTR, tmpRegVal | ADC_INJ_TAILGATING);
 269:.\Generated_Source\PSoC4/ADC.c **** 
 270:.\Generated_Source\PSoC4/ADC.c ****                 if((ADC_channelsConfig[chNum] & ADC_IS_SATURATE_EN_MASK) != 0u)
 271:.\Generated_Source\PSoC4/ADC.c ****                 {
 272:.\Generated_Source\PSoC4/ADC.c ****                     ADC_SAR_INTR_MASK_REG |= ADC_INJ_SATURATE_MASK;
 273:.\Generated_Source\PSoC4/ADC.c ****                 }
 274:.\Generated_Source\PSoC4/ADC.c **** 
 275:.\Generated_Source\PSoC4/ADC.c ****                 if((ADC_channelsConfig[chNum] & ADC_IS_RANGE_CTRL_EN_MASK) != 0u)
 276:.\Generated_Source\PSoC4/ADC.c ****                 {
 277:.\Generated_Source\PSoC4/ADC.c ****                     ADC_SAR_INTR_MASK_REG |= ADC_INJ_RANGE_MASK;
 278:.\Generated_Source\PSoC4/ADC.c ****                 }
ARM GAS  C:\Users\LAIR\AppData\Local\Temp\ccpuF2ic.s 			page 9


 279:.\Generated_Source\PSoC4/ADC.c ****             }
 280:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_INJ_CHANNEL_ENABLED */
 281:.\Generated_Source\PSoC4/ADC.c **** 
 282:.\Generated_Source\PSoC4/ADC.c ****         if((ADC_channelsConfig[chNum] & ADC_ALT_RESOLUTION_ON) != 0u)
 177              		.loc 1 282 0
 178 00cc 9300     		lsl	r3, r2, #2
 179 00ce 2849     		ldr	r1, .L12+84
 180              	.LVL14:
 181 00d0 5958     		ldr	r1, [r3, r1]
 182              	.LVL15:
 183 00d2 8B05     		lsl	r3, r1, #22
 184 00d4 02D5     		bpl	.L11
 283:.\Generated_Source\PSoC4/ADC.c ****         {
 284:.\Generated_Source\PSoC4/ADC.c ****                counts = (int32)ADC_DEFAULT_MAX_WRK_ALT;
 185              		.loc 1 284 0
 186 00d6 8020     		mov	r0, #128
 187 00d8 C000     		lsl	r0, r0, #3
 188 00da 01E0     		b	.L6
 189              	.L11:
 285:.\Generated_Source\PSoC4/ADC.c ****         }
 286:.\Generated_Source\PSoC4/ADC.c ****         else
 287:.\Generated_Source\PSoC4/ADC.c ****         {
 288:.\Generated_Source\PSoC4/ADC.c ****                counts = (int32)ADC_SAR_WRK_MAX_12BIT;
 190              		.loc 1 288 0
 191 00dc 8020     		mov	r0, #128
 192 00de 4001     		lsl	r0, r0, #5
 193              	.L6:
 194              	.LVL16:
 289:.\Generated_Source\PSoC4/ADC.c ****         }
 290:.\Generated_Source\PSoC4/ADC.c **** 
 291:.\Generated_Source\PSoC4/ADC.c ****         if((ADC_channelsConfig[chNum] & ADC_DIFFERENTIAL_EN) == 0u)
 195              		.loc 1 291 0
 196 00e0 CB05     		lsl	r3, r1, #23
 197 00e2 04D4     		bmi	.L7
 292:.\Generated_Source\PSoC4/ADC.c ****         {
 293:.\Generated_Source\PSoC4/ADC.c ****             #if((ADC_DEFAULT_SE_RESULT_FORMAT_SEL == ADC__FSIGNED) && \
 294:.\Generated_Source\PSoC4/ADC.c ****                 (ADC_DEFAULT_NEG_INPUT_SEL == ADC__VREF))
 295:.\Generated_Source\PSoC4/ADC.c ****                 /* Set offset to the minus half scale to convert results to unsigned format */
 296:.\Generated_Source\PSoC4/ADC.c ****                 ADC_offset[chNum] = (int16)(counts / -2);
 297:.\Generated_Source\PSoC4/ADC.c ****             #else
 298:.\Generated_Source\PSoC4/ADC.c ****                 ADC_offset[chNum] = 0;
 198              		.loc 1 298 0
 199 00e4 5300     		lsl	r3, r2, #1
 200 00e6 0024     		mov	r4, #0
 201 00e8 2349     		ldr	r1, .L12+92
 202 00ea 5C52     		strh	r4, [r3, r1]
 203 00ec 03E0     		b	.L8
 204              	.L7:
 299:.\Generated_Source\PSoC4/ADC.c ****             #endif /* end DEFAULT_SE_RESULT_FORMAT_SEL == ADC__FSIGNED */
 300:.\Generated_Source\PSoC4/ADC.c ****         }
 301:.\Generated_Source\PSoC4/ADC.c ****         else    /* Differential channel */
 302:.\Generated_Source\PSoC4/ADC.c ****         {
 303:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_DEFAULT_DIFF_RESULT_FORMAT_SEL == ADC__FUNSIGNED)
 304:.\Generated_Source\PSoC4/ADC.c ****                 /* Set offset to the half scale to convert results to signed format */
 305:.\Generated_Source\PSoC4/ADC.c ****                 ADC_offset[chNum] = (int16)(counts / 2);
 306:.\Generated_Source\PSoC4/ADC.c ****             #else
 307:.\Generated_Source\PSoC4/ADC.c ****                 ADC_offset[chNum] = 0;
ARM GAS  C:\Users\LAIR\AppData\Local\Temp\ccpuF2ic.s 			page 10


 205              		.loc 1 307 0
 206 00ee 5300     		lsl	r3, r2, #1
 207 00f0 0024     		mov	r4, #0
 208 00f2 2149     		ldr	r1, .L12+92
 209 00f4 5C52     		strh	r4, [r3, r1]
 210              	.L8:
 308:.\Generated_Source\PSoC4/ADC.c ****             #endif /* end ADC_DEFAULT_DIFF_RESULT_FORMAT_SEL == ADC__FUNSIGNED */
 309:.\Generated_Source\PSoC4/ADC.c ****         }
 310:.\Generated_Source\PSoC4/ADC.c ****         /* Calculate gain in counts per 10 volts with rounding */
 311:.\Generated_Source\PSoC4/ADC.c ****         ADC_countsPer10Volt[chNum] = (int16)(((counts * ADC_10MV_COUNTS) +
 211              		.loc 1 311 0 discriminator 2
 212 00f6 214B     		ldr	r3, .L12+96
 213 00f8 4343     		mul	r3, r0
 214 00fa 8021     		mov	r1, #128
 215 00fc C900     		lsl	r1, r1, #3
 216 00fe 8C46     		mov	ip, r1
 217 0100 6344     		add	r3, r3, ip
 312:.\Generated_Source\PSoC4/ADC.c ****                             ADC_DEFAULT_VREF_MV_VALUE) / (ADC_DEFAULT_VREF_MV_VALUE * 2));
 218              		.loc 1 312 0 discriminator 2
 219 0102 D917     		asr	r1, r3, #31
 220 0104 490D     		lsr	r1, r1, #21
 221 0106 CB18     		add	r3, r1, r3
 222 0108 DB12     		asr	r3, r3, #11
 311:.\Generated_Source\PSoC4/ADC.c ****                             ADC_DEFAULT_VREF_MV_VALUE) / (ADC_DEFAULT_VREF_MV_VALUE * 2));
 223              		.loc 1 311 0 discriminator 2
 224 010a 1BB2     		sxth	r3, r3
 225 010c 9000     		lsl	r0, r2, #2
 226              	.LVL17:
 227 010e 1C49     		ldr	r1, .L12+100
 228 0110 4350     		str	r3, [r0, r1]
 232:.\Generated_Source\PSoC4/ADC.c ****     {
 229              		.loc 1 232 0 discriminator 2
 230 0112 0132     		add	r2, r2, #1
 231              	.LVL18:
 232              	.L3:
 232:.\Generated_Source\PSoC4/ADC.c ****     {
 233              		.loc 1 232 0 is_stmt 0 discriminator 1
 234 0114 032A     		cmp	r2, #3
 235 0116 B3D9     		bls	.L9
 313:.\Generated_Source\PSoC4/ADC.c ****     }
 314:.\Generated_Source\PSoC4/ADC.c **** }
 236              		.loc 1 314 0 is_stmt 1
 237              		@ sp needed
 238 0118 10BD     		pop	{r4, pc}
 239              	.L13:
 240 011a C046     		.align	2
 241              	.L12:
 242 011c 00000000 		.word	ADC_ISR
 243 0120 20003A40 		.word	1077542944
 244 0124 80033A40 		.word	1077543808
 245 0128 C0201010 		.word	269492416
 246 012c C0200010 		.word	268443840
 247 0130 00003A40 		.word	1077542912
 248 0134 ED000080 		.word	-2147483411
 249 0138 04003A40 		.word	1077542916
 250 013c 0000FF07 		.word	134152192
 251 0140 18003A40 		.word	1077542936
ARM GAS  C:\Users\LAIR\AppData\Local\Temp\ccpuF2ic.s 			page 11


 252 0144 1C003A40 		.word	1077542940
 253 0148 02000200 		.word	131074
 254 014c 10003A40 		.word	1077542928
 255 0150 14003A40 		.word	1077542932
 256 0154 00033A40 		.word	1077543680
 257 0158 40033A40 		.word	1077543744
 258 015c 28023A40 		.word	1077543464
 259 0160 38023A40 		.word	1077543480
 260 0164 18023A40 		.word	1077543448
 261 0168 30003A40 		.word	1077542960
 262 016c FEFFFFDF 		.word	-536870914
 263 0170 00000000 		.word	.LANCHOR0
 264 0174 80003A40 		.word	1077543040
 265 0178 00000000 		.word	ADC_offset
 266 017c 10270000 		.word	10000
 267 0180 00000000 		.word	ADC_countsPer10Volt
 268              		.cfi_endproc
 269              	.LFE2:
 270              		.size	ADC_Init, .-ADC_Init
 271              		.section	.text.ADC_Enable,"ax",%progbits
 272              		.align	2
 273              		.global	ADC_Enable
 274              		.code	16
 275              		.thumb_func
 276              		.type	ADC_Enable, %function
 277              	ADC_Enable:
 278              	.LFB3:
 315:.\Generated_Source\PSoC4/ADC.c **** 
 316:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 317:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SAR_1_Enable
 318:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 319:.\Generated_Source\PSoC4/ADC.c **** *
 320:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 321:.\Generated_Source\PSoC4/ADC.c **** *  Enables the clock and analog power for SAR ADC.
 322:.\Generated_Source\PSoC4/ADC.c **** *
 323:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 324:.\Generated_Source\PSoC4/ADC.c **** *  None.
 325:.\Generated_Source\PSoC4/ADC.c **** *
 326:.\Generated_Source\PSoC4/ADC.c **** * Return:
 327:.\Generated_Source\PSoC4/ADC.c **** *  None.
 328:.\Generated_Source\PSoC4/ADC.c **** *
 329:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 330:.\Generated_Source\PSoC4/ADC.c **** void ADC_Enable(void)
 331:.\Generated_Source\PSoC4/ADC.c **** {
 279              		.loc 1 331 0
 280              		.cfi_startproc
 281 0000 08B5     		push	{r3, lr}
 282              		.cfi_def_cfa_offset 8
 283              		.cfi_offset 3, -8
 284              		.cfi_offset 14, -4
 332:.\Generated_Source\PSoC4/ADC.c ****     if (0u == (ADC_SAR_CTRL_REG & ADC_ENABLE))
 285              		.loc 1 332 0
 286 0002 094B     		ldr	r3, .L17
 287 0004 1B68     		ldr	r3, [r3]
 288 0006 002B     		cmp	r3, #0
 289 0008 0CDB     		blt	.L14
 290              	.L16:
ARM GAS  C:\Users\LAIR\AppData\Local\Temp\ccpuF2ic.s 			page 12


 333:.\Generated_Source\PSoC4/ADC.c ****     {
 334:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_CY_SAR_IP_VER != ADC_CY_SAR_IP_VER0)
 335:.\Generated_Source\PSoC4/ADC.c **** 
 336:.\Generated_Source\PSoC4/ADC.c ****             while (0u != (ADC_SAR_STATUS_REG & ADC_STATUS_BUSY))
 291              		.loc 1 336 0 discriminator 1
 292 000a 084B     		ldr	r3, .L17+4
 293 000c 1B68     		ldr	r3, [r3]
 294 000e 002B     		cmp	r3, #0
 295 0010 FBDB     		blt	.L16
 337:.\Generated_Source\PSoC4/ADC.c ****             {
 338:.\Generated_Source\PSoC4/ADC.c ****                 /* wait for SAR to go idle to avoid deadlock */
 339:.\Generated_Source\PSoC4/ADC.c ****             }
 340:.\Generated_Source\PSoC4/ADC.c ****         #endif /* (ADC_CY_SAR_IP_VER != ADC_CY_SAR_IP_VER0) */
 341:.\Generated_Source\PSoC4/ADC.c ****         
 342:.\Generated_Source\PSoC4/ADC.c ****         ADC_SAR_CTRL_REG |= ADC_ENABLE;
 296              		.loc 1 342 0
 297 0012 054A     		ldr	r2, .L17
 298 0014 1368     		ldr	r3, [r2]
 299 0016 8021     		mov	r1, #128
 300 0018 0906     		lsl	r1, r1, #24
 301 001a 0B43     		orr	r3, r1
 302 001c 1360     		str	r3, [r2]
 343:.\Generated_Source\PSoC4/ADC.c ****         
 344:.\Generated_Source\PSoC4/ADC.c ****         /* The block is ready to use 10 us after the enable signal is set high. */
 345:.\Generated_Source\PSoC4/ADC.c ****         CyDelayUs(ADC_10US_DELAY);         
 303              		.loc 1 345 0
 304 001e 0A20     		mov	r0, #10
 305 0020 FFF7FEFF 		bl	CyDelayUs
 306              	.LVL19:
 307              	.L14:
 346:.\Generated_Source\PSoC4/ADC.c ****     }
 347:.\Generated_Source\PSoC4/ADC.c **** }
 308              		.loc 1 347 0
 309              		@ sp needed
 310 0024 08BD     		pop	{r3, pc}
 311              	.L18:
 312 0026 C046     		.align	2
 313              	.L17:
 314 0028 00003A40 		.word	1077542912
 315 002c 08023A40 		.word	1077543432
 316              		.cfi_endproc
 317              	.LFE3:
 318              		.size	ADC_Enable, .-ADC_Enable
 319              		.section	.text.ADC_Start,"ax",%progbits
 320              		.align	2
 321              		.global	ADC_Start
 322              		.code	16
 323              		.thumb_func
 324              		.type	ADC_Start, %function
 325              	ADC_Start:
 326              	.LFB1:
  64:.\Generated_Source\PSoC4/ADC.c ****     /* If not Initialized then initialize all required hardware and software */
 327              		.loc 1 64 0
 328              		.cfi_startproc
 329 0000 08B5     		push	{r3, lr}
 330              		.cfi_def_cfa_offset 8
 331              		.cfi_offset 3, -8
ARM GAS  C:\Users\LAIR\AppData\Local\Temp\ccpuF2ic.s 			page 13


 332              		.cfi_offset 14, -4
  66:.\Generated_Source\PSoC4/ADC.c ****     {
 333              		.loc 1 66 0
 334 0002 064B     		ldr	r3, .L21
 335 0004 1B78     		ldrb	r3, [r3]
 336 0006 002B     		cmp	r3, #0
 337 0008 04D1     		bne	.L20
  68:.\Generated_Source\PSoC4/ADC.c ****         ADC_initVar = 1u;
 338              		.loc 1 68 0
 339 000a FFF7FEFF 		bl	ADC_Init
 340              	.LVL20:
  69:.\Generated_Source\PSoC4/ADC.c ****     }
 341              		.loc 1 69 0
 342 000e 0122     		mov	r2, #1
 343 0010 024B     		ldr	r3, .L21
 344 0012 1A70     		strb	r2, [r3]
 345              	.L20:
  71:.\Generated_Source\PSoC4/ADC.c **** }
 346              		.loc 1 71 0
 347 0014 FFF7FEFF 		bl	ADC_Enable
 348              	.LVL21:
  72:.\Generated_Source\PSoC4/ADC.c **** 
 349              		.loc 1 72 0
 350              		@ sp needed
 351 0018 08BD     		pop	{r3, pc}
 352              	.L22:
 353 001a C046     		.align	2
 354              	.L21:
 355 001c 00000000 		.word	.LANCHOR1
 356              		.cfi_endproc
 357              	.LFE1:
 358              		.size	ADC_Start, .-ADC_Start
 359              		.section	.text.ADC_Stop,"ax",%progbits
 360              		.align	2
 361              		.global	ADC_Stop
 362              		.code	16
 363              		.thumb_func
 364              		.type	ADC_Stop, %function
 365              	ADC_Stop:
 366              	.LFB4:
 348:.\Generated_Source\PSoC4/ADC.c **** 
 349:.\Generated_Source\PSoC4/ADC.c **** 
 350:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 351:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_Stop
 352:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 353:.\Generated_Source\PSoC4/ADC.c **** *
 354:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 355:.\Generated_Source\PSoC4/ADC.c **** *  This function stops ADC conversions and puts the ADC into its lowest power
 356:.\Generated_Source\PSoC4/ADC.c **** *  mode.
 357:.\Generated_Source\PSoC4/ADC.c **** *
 358:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 359:.\Generated_Source\PSoC4/ADC.c **** *  None.
 360:.\Generated_Source\PSoC4/ADC.c **** *
 361:.\Generated_Source\PSoC4/ADC.c **** * Return:
 362:.\Generated_Source\PSoC4/ADC.c **** *  None.
 363:.\Generated_Source\PSoC4/ADC.c **** *
 364:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
ARM GAS  C:\Users\LAIR\AppData\Local\Temp\ccpuF2ic.s 			page 14


 365:.\Generated_Source\PSoC4/ADC.c **** void ADC_Stop(void)
 366:.\Generated_Source\PSoC4/ADC.c **** {
 367              		.loc 1 366 0
 368              		.cfi_startproc
 367:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG &= (uint32)~ADC_ENABLE;
 369              		.loc 1 367 0
 370 0000 024A     		ldr	r2, .L24
 371 0002 1368     		ldr	r3, [r2]
 372 0004 5B00     		lsl	r3, r3, #1
 373 0006 5B08     		lsr	r3, r3, #1
 374 0008 1360     		str	r3, [r2]
 368:.\Generated_Source\PSoC4/ADC.c **** }
 375              		.loc 1 368 0
 376              		@ sp needed
 377 000a 7047     		bx	lr
 378              	.L25:
 379              		.align	2
 380              	.L24:
 381 000c 00003A40 		.word	1077542912
 382              		.cfi_endproc
 383              	.LFE4:
 384              		.size	ADC_Stop, .-ADC_Stop
 385              		.section	.text.ADC_StartConvert,"ax",%progbits
 386              		.align	2
 387              		.global	ADC_StartConvert
 388              		.code	16
 389              		.thumb_func
 390              		.type	ADC_StartConvert, %function
 391              	ADC_StartConvert:
 392              	.LFB5:
 369:.\Generated_Source\PSoC4/ADC.c **** 
 370:.\Generated_Source\PSoC4/ADC.c **** 
 371:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 372:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_StartConvert
 373:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 374:.\Generated_Source\PSoC4/ADC.c **** *
 375:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 376:.\Generated_Source\PSoC4/ADC.c **** *  Description:
 377:.\Generated_Source\PSoC4/ADC.c **** *  For free running mode, this API starts the conversion process and it
 378:.\Generated_Source\PSoC4/ADC.c **** *  runs continuously.
 379:.\Generated_Source\PSoC4/ADC.c **** *
 380:.\Generated_Source\PSoC4/ADC.c **** *  In a triggered mode, this routine triggers every conversion by
 381:.\Generated_Source\PSoC4/ADC.c **** *  writing into the FW_TRIGGER bit in SAR_START_CTRL reg. In triggered mode,
 382:.\Generated_Source\PSoC4/ADC.c **** *  every conversion has to start by this API.
 383:.\Generated_Source\PSoC4/ADC.c **** *
 384:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 385:.\Generated_Source\PSoC4/ADC.c **** *  None.
 386:.\Generated_Source\PSoC4/ADC.c **** *
 387:.\Generated_Source\PSoC4/ADC.c **** * Return:
 388:.\Generated_Source\PSoC4/ADC.c **** *  None.
 389:.\Generated_Source\PSoC4/ADC.c **** *
 390:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 391:.\Generated_Source\PSoC4/ADC.c **** void ADC_StartConvert(void)
 392:.\Generated_Source\PSoC4/ADC.c **** {
 393              		.loc 1 392 0
 394              		.cfi_startproc
 393:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_DEFAULT_SAMPLE_MODE_SEL == ADC__FREERUNNING)
ARM GAS  C:\Users\LAIR\AppData\Local\Temp\ccpuF2ic.s 			page 15


 394:.\Generated_Source\PSoC4/ADC.c ****         ADC_SAR_SAMPLE_CTRL_REG |= ADC_CONTINUOUS_EN;
 395              		.loc 1 394 0
 396 0000 034A     		ldr	r2, .L27
 397 0002 1368     		ldr	r3, [r2]
 398 0004 8021     		mov	r1, #128
 399 0006 4902     		lsl	r1, r1, #9
 400 0008 0B43     		orr	r3, r1
 401 000a 1360     		str	r3, [r2]
 395:.\Generated_Source\PSoC4/ADC.c ****     #else /* Firmware trigger */
 396:.\Generated_Source\PSoC4/ADC.c ****         ADC_SAR_START_CTRL_REG = ADC_FW_TRIGGER;
 397:.\Generated_Source\PSoC4/ADC.c ****     #endif /* End ADC_DEFAULT_SAMPLE_MODE == ADC__FREERUNNING */
 398:.\Generated_Source\PSoC4/ADC.c **** 
 399:.\Generated_Source\PSoC4/ADC.c **** }
 402              		.loc 1 399 0
 403              		@ sp needed
 404 000c 7047     		bx	lr
 405              	.L28:
 406 000e C046     		.align	2
 407              	.L27:
 408 0010 04003A40 		.word	1077542916
 409              		.cfi_endproc
 410              	.LFE5:
 411              		.size	ADC_StartConvert, .-ADC_StartConvert
 412              		.section	.text.ADC_StopConvert,"ax",%progbits
 413              		.align	2
 414              		.global	ADC_StopConvert
 415              		.code	16
 416              		.thumb_func
 417              		.type	ADC_StopConvert, %function
 418              	ADC_StopConvert:
 419              	.LFB6:
 400:.\Generated_Source\PSoC4/ADC.c **** 
 401:.\Generated_Source\PSoC4/ADC.c **** 
 402:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 403:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_StopConvert
 404:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 405:.\Generated_Source\PSoC4/ADC.c **** *
 406:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 407:.\Generated_Source\PSoC4/ADC.c **** *  Forces the ADC to stop all conversions.
 408:.\Generated_Source\PSoC4/ADC.c **** *
 409:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 410:.\Generated_Source\PSoC4/ADC.c **** *  None.
 411:.\Generated_Source\PSoC4/ADC.c **** *
 412:.\Generated_Source\PSoC4/ADC.c **** * Return:
 413:.\Generated_Source\PSoC4/ADC.c **** *  None.
 414:.\Generated_Source\PSoC4/ADC.c **** *
 415:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 416:.\Generated_Source\PSoC4/ADC.c **** void ADC_StopConvert(void)
 417:.\Generated_Source\PSoC4/ADC.c **** {
 420              		.loc 1 417 0
 421              		.cfi_startproc
 418:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_DEFAULT_SAMPLE_MODE_SEL == ADC__FREERUNNING)
 419:.\Generated_Source\PSoC4/ADC.c ****         ADC_SAR_SAMPLE_CTRL_REG &= (uint32)(~ADC_CONTINUOUS_EN);
 422              		.loc 1 419 0
 423 0000 024A     		ldr	r2, .L30
 424 0002 1168     		ldr	r1, [r2]
 425 0004 024B     		ldr	r3, .L30+4
ARM GAS  C:\Users\LAIR\AppData\Local\Temp\ccpuF2ic.s 			page 16


 426 0006 0B40     		and	r3, r1
 427 0008 1360     		str	r3, [r2]
 420:.\Generated_Source\PSoC4/ADC.c ****     #endif /* ADC_DEFAULT_SAMPLE_MODE == ADC__FREERUNNING */
 421:.\Generated_Source\PSoC4/ADC.c **** }
 428              		.loc 1 421 0
 429              		@ sp needed
 430 000a 7047     		bx	lr
 431              	.L31:
 432              		.align	2
 433              	.L30:
 434 000c 04003A40 		.word	1077542916
 435 0010 FFFFFEFF 		.word	-65537
 436              		.cfi_endproc
 437              	.LFE6:
 438              		.size	ADC_StopConvert, .-ADC_StopConvert
 439              		.section	.text.ADC_IsEndConversion,"ax",%progbits
 440              		.align	2
 441              		.global	ADC_IsEndConversion
 442              		.code	16
 443              		.thumb_func
 444              		.type	ADC_IsEndConversion, %function
 445              	ADC_IsEndConversion:
 446              	.LFB7:
 422:.\Generated_Source\PSoC4/ADC.c **** 
 423:.\Generated_Source\PSoC4/ADC.c **** 
 424:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 425:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_IsEndConversion
 426:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 427:.\Generated_Source\PSoC4/ADC.c **** *
 428:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 429:.\Generated_Source\PSoC4/ADC.c **** *  Description: Checks for ADC end of conversion for the case one
 430:.\Generated_Source\PSoC4/ADC.c **** *  channel and end of scan for the case of multiple channels. It acts
 431:.\Generated_Source\PSoC4/ADC.c **** *  as a software version of the EOC. This function provides the
 432:.\Generated_Source\PSoC4/ADC.c **** *  programmer with two options. In one mode this function
 433:.\Generated_Source\PSoC4/ADC.c **** *  immediately returns with the conversion status. In the other mode,
 434:.\Generated_Source\PSoC4/ADC.c **** *  the function does not return (blocking) until the conversion has
 435:.\Generated_Source\PSoC4/ADC.c **** *  completed.
 436:.\Generated_Source\PSoC4/ADC.c **** *
 437:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 438:.\Generated_Source\PSoC4/ADC.c **** *  ADC_RETURN_STATUS        -> Immediately returns conversion result status
 439:.\Generated_Source\PSoC4/ADC.c **** *  ADC_WAIT_FOR_RESULT      -> Does not return until ADC complete
 440:.\Generated_Source\PSoC4/ADC.c **** *  ADC_RETURN_STATUS_INJ    -> Immediately returns conversion result status
 441:.\Generated_Source\PSoC4/ADC.c **** *                              for injection channel
 442:.\Generated_Source\PSoC4/ADC.c **** *  ADC_WAIT_FOR_RESULT_INJ  -> Does not return until ADC completes injection
 443:.\Generated_Source\PSoC4/ADC.c **** *                              channel conversion
 444:.\Generated_Source\PSoC4/ADC.c **** *
 445:.\Generated_Source\PSoC4/ADC.c **** * Return:
 446:.\Generated_Source\PSoC4/ADC.c **** *  If a non-zero value is returned, the last conversion or scan has completed.
 447:.\Generated_Source\PSoC4/ADC.c **** *  If the returned value is zero, the ADC is still in the process of a scan.
 448:.\Generated_Source\PSoC4/ADC.c **** *
 449:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 450:.\Generated_Source\PSoC4/ADC.c **** uint32 ADC_IsEndConversion(uint32 retMode)
 451:.\Generated_Source\PSoC4/ADC.c **** {
 447              		.loc 1 451 0
 448              		.cfi_startproc
 449              	.LVL22:
 450 0000 021C     		mov	r2, r0
ARM GAS  C:\Users\LAIR\AppData\Local\Temp\ccpuF2ic.s 			page 17


 451              	.LVL23:
 452:.\Generated_Source\PSoC4/ADC.c ****     uint32 status = 0u;
 453:.\Generated_Source\PSoC4/ADC.c **** 
 454:.\Generated_Source\PSoC4/ADC.c ****     if((retMode & (ADC_RETURN_STATUS | ADC_WAIT_FOR_RESULT)) != 0u)
 452              		.loc 1 454 0
 453 0002 8307     		lsl	r3, r0, #30
 454 0004 0CD0     		beq	.L36
 455              	.LVL24:
 456              	.L35:
 455:.\Generated_Source\PSoC4/ADC.c ****     {
 456:.\Generated_Source\PSoC4/ADC.c ****         do
 457:.\Generated_Source\PSoC4/ADC.c ****         {
 458:.\Generated_Source\PSoC4/ADC.c ****             status = ADC_SAR_INTR_REG & ADC_EOS_MASK;
 457              		.loc 1 458 0 discriminator 2
 458 0006 074B     		ldr	r3, .L37
 459 0008 1B68     		ldr	r3, [r3]
 460 000a 0120     		mov	r0, #1
 461 000c 1840     		and	r0, r3
 462              	.LVL25:
 459:.\Generated_Source\PSoC4/ADC.c ****         }while((status == 0u) && ((retMode & ADC_WAIT_FOR_RESULT) != 0u));
 463              		.loc 1 459 0 discriminator 2
 464 000e 01D1     		bne	.L34
 465              		.loc 1 459 0 is_stmt 0 discriminator 1
 466 0010 9307     		lsl	r3, r2, #30
 467 0012 F8D4     		bmi	.L35
 468              	.L34:
 460:.\Generated_Source\PSoC4/ADC.c **** 
 461:.\Generated_Source\PSoC4/ADC.c ****         if(status != 0u)
 469              		.loc 1 461 0 is_stmt 1
 470 0014 0028     		cmp	r0, #0
 471 0016 04D0     		beq	.L33
 462:.\Generated_Source\PSoC4/ADC.c ****         {
 463:.\Generated_Source\PSoC4/ADC.c ****             /* Clear EOS bit */
 464:.\Generated_Source\PSoC4/ADC.c ****             ADC_SAR_INTR_REG = ADC_EOS_MASK;
 472              		.loc 1 464 0
 473 0018 0122     		mov	r2, #1
 474              	.LVL26:
 475 001a 024B     		ldr	r3, .L37
 476 001c 1A60     		str	r2, [r3]
 477 001e 00E0     		b	.L33
 478              	.LVL27:
 479              	.L36:
 452:.\Generated_Source\PSoC4/ADC.c **** 
 480              		.loc 1 452 0
 481 0020 0020     		mov	r0, #0
 482              	.LVL28:
 483              	.L33:
 465:.\Generated_Source\PSoC4/ADC.c ****         }
 466:.\Generated_Source\PSoC4/ADC.c ****     }
 467:.\Generated_Source\PSoC4/ADC.c **** 
 468:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_INJ_CHANNEL_ENABLED)
 469:.\Generated_Source\PSoC4/ADC.c ****         if((retMode & (ADC_RETURN_STATUS_INJ | ADC_WAIT_FOR_RESULT_INJ)) != 0u)
 470:.\Generated_Source\PSoC4/ADC.c ****         {
 471:.\Generated_Source\PSoC4/ADC.c ****             do
 472:.\Generated_Source\PSoC4/ADC.c ****             {
 473:.\Generated_Source\PSoC4/ADC.c ****                 status |= ADC_SAR_INTR_REG & ADC_INJ_EOC_MASK;
 474:.\Generated_Source\PSoC4/ADC.c ****             }while(((status & ADC_INJ_EOC_MASK) == 0u) &&
ARM GAS  C:\Users\LAIR\AppData\Local\Temp\ccpuF2ic.s 			page 18


 475:.\Generated_Source\PSoC4/ADC.c ****                    ((retMode & ADC_WAIT_FOR_RESULT_INJ) != 0u));
 476:.\Generated_Source\PSoC4/ADC.c **** 
 477:.\Generated_Source\PSoC4/ADC.c ****             if((status & ADC_INJ_EOC_MASK) != 0u)
 478:.\Generated_Source\PSoC4/ADC.c ****             {
 479:.\Generated_Source\PSoC4/ADC.c ****                 /* Clear Injection EOS bit */
 480:.\Generated_Source\PSoC4/ADC.c ****                 ADC_SAR_INTR_REG = ADC_INJ_EOC_MASK;
 481:.\Generated_Source\PSoC4/ADC.c ****             }
 482:.\Generated_Source\PSoC4/ADC.c ****         }
 483:.\Generated_Source\PSoC4/ADC.c ****     #endif /* ADC_INJ_CHANNEL_ENABLED */
 484:.\Generated_Source\PSoC4/ADC.c **** 
 485:.\Generated_Source\PSoC4/ADC.c ****     return (status);
 486:.\Generated_Source\PSoC4/ADC.c **** }
 484              		.loc 1 486 0
 485              		@ sp needed
 486 0022 7047     		bx	lr
 487              	.L38:
 488              		.align	2
 489              	.L37:
 490 0024 10023A40 		.word	1077543440
 491              		.cfi_endproc
 492              	.LFE7:
 493              		.size	ADC_IsEndConversion, .-ADC_IsEndConversion
 494              		.section	.text.ADC_GetResult16,"ax",%progbits
 495              		.align	2
 496              		.global	ADC_GetResult16
 497              		.code	16
 498              		.thumb_func
 499              		.type	ADC_GetResult16, %function
 500              	ADC_GetResult16:
 501              	.LFB8:
 487:.\Generated_Source\PSoC4/ADC.c **** 
 488:.\Generated_Source\PSoC4/ADC.c **** 
 489:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 490:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_GetResult16
 491:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 492:.\Generated_Source\PSoC4/ADC.c **** *
 493:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 494:.\Generated_Source\PSoC4/ADC.c **** *  Gets the data available in the SAR DATA register.
 495:.\Generated_Source\PSoC4/ADC.c **** *
 496:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 497:.\Generated_Source\PSoC4/ADC.c **** *  chan: The ADC channel in which to return the result. The first channel
 498:.\Generated_Source\PSoC4/ADC.c **** *  is 0 and the injection channel if enabled is the number of valid channels.
 499:.\Generated_Source\PSoC4/ADC.c **** *
 500:.\Generated_Source\PSoC4/ADC.c **** * Return:
 501:.\Generated_Source\PSoC4/ADC.c **** *  Returns converted data as a signed 16-bit integer
 502:.\Generated_Source\PSoC4/ADC.c **** *
 503:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 504:.\Generated_Source\PSoC4/ADC.c **** int16 ADC_GetResult16(uint32 chan)
 505:.\Generated_Source\PSoC4/ADC.c **** {
 502              		.loc 1 505 0
 503              		.cfi_startproc
 504              	.LVL29:
 505 0000 10B5     		push	{r4, lr}
 506              		.cfi_def_cfa_offset 8
 507              		.cfi_offset 4, -8
 508              		.cfi_offset 14, -4
 509 0002 041E     		sub	r4, r0, #0
ARM GAS  C:\Users\LAIR\AppData\Local\Temp\ccpuF2ic.s 			page 19


 506:.\Generated_Source\PSoC4/ADC.c ****     uint32 result;
 507:.\Generated_Source\PSoC4/ADC.c **** 
 508:.\Generated_Source\PSoC4/ADC.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 509:.\Generated_Source\PSoC4/ADC.c ****     CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 510              		.loc 1 509 0
 511 0004 032C     		cmp	r4, #3
 512 0006 02D9     		bls	.L40
 513              		.loc 1 509 0 is_stmt 0 discriminator 1
 514 0008 0020     		mov	r0, #0
 515              	.LVL30:
 516 000a FFF7FEFF 		bl	CyHalt
 517              	.LVL31:
 518              	.L40:
 510:.\Generated_Source\PSoC4/ADC.c **** 
 511:.\Generated_Source\PSoC4/ADC.c ****     if(chan < ADC_SEQUENCED_CHANNELS_NUM)
 519              		.loc 1 511 0 is_stmt 1
 520 000e 032C     		cmp	r4, #3
 521 0010 07D8     		bhi	.L42
 512:.\Generated_Source\PSoC4/ADC.c ****     {
 513:.\Generated_Source\PSoC4/ADC.c ****         result = CY_GET_REG32((reg32 *)(ADC_SAR_CHAN_RESULT_IND + (uint32)(chan << 2u))) &
 522              		.loc 1 513 0
 523 0012 A400     		lsl	r4, r4, #2
 524              	.LVL32:
 525 0014 044B     		ldr	r3, .L43
 526 0016 9C46     		mov	ip, r3
 527 0018 6444     		add	r4, r4, ip
 528 001a 2068     		ldr	r0, [r4]
 529 001c 0004     		lsl	r0, r0, #16
 530 001e 000C     		lsr	r0, r0, #16
 531              	.LVL33:
 532 0020 00E0     		b	.L41
 533              	.LVL34:
 534              	.L42:
 514:.\Generated_Source\PSoC4/ADC.c ****                 ADC_RESULT_MASK;
 515:.\Generated_Source\PSoC4/ADC.c ****     }
 516:.\Generated_Source\PSoC4/ADC.c ****     else
 517:.\Generated_Source\PSoC4/ADC.c ****     {
 518:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_INJ_CHANNEL_ENABLED)
 519:.\Generated_Source\PSoC4/ADC.c ****             result = ADC_SAR_INJ_RESULT_REG & ADC_RESULT_MASK;
 520:.\Generated_Source\PSoC4/ADC.c ****         #else
 521:.\Generated_Source\PSoC4/ADC.c ****             result = 0u;
 535              		.loc 1 521 0
 536 0022 0020     		mov	r0, #0
 537              	.LVL35:
 538              	.L41:
 522:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_INJ_CHANNEL_ENABLED */
 523:.\Generated_Source\PSoC4/ADC.c ****     }
 524:.\Generated_Source\PSoC4/ADC.c **** 
 525:.\Generated_Source\PSoC4/ADC.c ****     return ( (int16)result );
 539              		.loc 1 525 0
 540 0024 00B2     		sxth	r0, r0
 541              	.LVL36:
 526:.\Generated_Source\PSoC4/ADC.c **** }
 542              		.loc 1 526 0
 543              		@ sp needed
 544 0026 10BD     		pop	{r4, pc}
 545              	.L44:
ARM GAS  C:\Users\LAIR\AppData\Local\Temp\ccpuF2ic.s 			page 20


 546              		.align	2
 547              	.L43:
 548 0028 80013A40 		.word	1077543296
 549              		.cfi_endproc
 550              	.LFE8:
 551              		.size	ADC_GetResult16, .-ADC_GetResult16
 552              		.section	.text.ADC_SetChanMask,"ax",%progbits
 553              		.align	2
 554              		.global	ADC_SetChanMask
 555              		.code	16
 556              		.thumb_func
 557              		.type	ADC_SetChanMask, %function
 558              	ADC_SetChanMask:
 559              	.LFB9:
 527:.\Generated_Source\PSoC4/ADC.c **** 
 528:.\Generated_Source\PSoC4/ADC.c **** 
 529:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 530:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetChanMask
 531:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 532:.\Generated_Source\PSoC4/ADC.c **** *
 533:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 534:.\Generated_Source\PSoC4/ADC.c **** *  Sets the channel enable mask.
 535:.\Generated_Source\PSoC4/ADC.c **** *
 536:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 537:.\Generated_Source\PSoC4/ADC.c **** *  mask: Sets which channels that will be
 538:.\Generated_Source\PSoC4/ADC.c **** *  scanned. Setting bits for channels that do not exist will have no
 539:.\Generated_Source\PSoC4/ADC.c **** *  effect. For example, if only 6 channels were enabled, setting a
 540:.\Generated_Source\PSoC4/ADC.c **** *  mask of 0x0103 would only enable the last two channels (0 and 1).
 541:.\Generated_Source\PSoC4/ADC.c **** *  This API will not enable the injection channel.
 542:.\Generated_Source\PSoC4/ADC.c **** *  Examples: If the component is setup to sequence through 8
 543:.\Generated_Source\PSoC4/ADC.c **** *  channels, a mask of 0x000F would enable channels 0, 1, 2, and 3.
 544:.\Generated_Source\PSoC4/ADC.c **** *
 545:.\Generated_Source\PSoC4/ADC.c **** * Return:
 546:.\Generated_Source\PSoC4/ADC.c **** *  None.
 547:.\Generated_Source\PSoC4/ADC.c **** *
 548:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 549:.\Generated_Source\PSoC4/ADC.c **** void ADC_SetChanMask(uint32 mask)
 550:.\Generated_Source\PSoC4/ADC.c **** {
 560              		.loc 1 550 0
 561              		.cfi_startproc
 562              	.LVL37:
 551:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CHAN_EN_REG = mask & ADC_MAX_CHANNELS_EN_MASK;
 563              		.loc 1 551 0
 564 0000 0F23     		mov	r3, #15
 565 0002 1840     		and	r0, r3
 566              	.LVL38:
 567 0004 014B     		ldr	r3, .L46
 568 0006 1860     		str	r0, [r3]
 552:.\Generated_Source\PSoC4/ADC.c **** }
 569              		.loc 1 552 0
 570              		@ sp needed
 571 0008 7047     		bx	lr
 572              	.L47:
 573 000a C046     		.align	2
 574              	.L46:
 575 000c 20003A40 		.word	1077542944
 576              		.cfi_endproc
ARM GAS  C:\Users\LAIR\AppData\Local\Temp\ccpuF2ic.s 			page 21


 577              	.LFE9:
 578              		.size	ADC_SetChanMask, .-ADC_SetChanMask
 579              		.section	.text.ADC_SetLowLimit,"ax",%progbits
 580              		.align	2
 581              		.global	ADC_SetLowLimit
 582              		.code	16
 583              		.thumb_func
 584              		.type	ADC_SetLowLimit, %function
 585              	ADC_SetLowLimit:
 586              	.LFB10:
 553:.\Generated_Source\PSoC4/ADC.c **** 
 554:.\Generated_Source\PSoC4/ADC.c **** #if(ADC_INJ_CHANNEL_ENABLED)
 555:.\Generated_Source\PSoC4/ADC.c **** 
 556:.\Generated_Source\PSoC4/ADC.c **** 
 557:.\Generated_Source\PSoC4/ADC.c ****     /*******************************************************************************
 558:.\Generated_Source\PSoC4/ADC.c ****     * Function Name: ADC_EnableInjection
 559:.\Generated_Source\PSoC4/ADC.c ****     ********************************************************************************
 560:.\Generated_Source\PSoC4/ADC.c ****     *
 561:.\Generated_Source\PSoC4/ADC.c ****     * Summary:
 562:.\Generated_Source\PSoC4/ADC.c ****     *  Enables the injection channel for the next scan only.
 563:.\Generated_Source\PSoC4/ADC.c ****     *
 564:.\Generated_Source\PSoC4/ADC.c ****     * Parameters:
 565:.\Generated_Source\PSoC4/ADC.c ****     *  None.
 566:.\Generated_Source\PSoC4/ADC.c ****     *
 567:.\Generated_Source\PSoC4/ADC.c ****     * Return:
 568:.\Generated_Source\PSoC4/ADC.c ****     *  None.
 569:.\Generated_Source\PSoC4/ADC.c ****     *
 570:.\Generated_Source\PSoC4/ADC.c ****     *******************************************************************************/
 571:.\Generated_Source\PSoC4/ADC.c ****     void ADC_EnableInjection(void)
 572:.\Generated_Source\PSoC4/ADC.c ****     {
 573:.\Generated_Source\PSoC4/ADC.c ****         ADC_SAR_INJ_CHAN_CONFIG_REG |= ADC_INJ_CHAN_EN;
 574:.\Generated_Source\PSoC4/ADC.c ****     }
 575:.\Generated_Source\PSoC4/ADC.c **** 
 576:.\Generated_Source\PSoC4/ADC.c **** #endif /* ADC_INJ_CHANNEL_ENABLED */
 577:.\Generated_Source\PSoC4/ADC.c **** 
 578:.\Generated_Source\PSoC4/ADC.c **** 
 579:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 580:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetLowLimit
 581:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 582:.\Generated_Source\PSoC4/ADC.c **** *
 583:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 584:.\Generated_Source\PSoC4/ADC.c **** *  Sets the low limit parameter for a limit condition.
 585:.\Generated_Source\PSoC4/ADC.c **** *
 586:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 587:.\Generated_Source\PSoC4/ADC.c **** *  lowLimit: The low limit for a limit condition.
 588:.\Generated_Source\PSoC4/ADC.c **** *
 589:.\Generated_Source\PSoC4/ADC.c **** * Return:
 590:.\Generated_Source\PSoC4/ADC.c **** *  None.
 591:.\Generated_Source\PSoC4/ADC.c **** *
 592:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 593:.\Generated_Source\PSoC4/ADC.c **** void ADC_SetLowLimit(uint32 lowLimit)
 594:.\Generated_Source\PSoC4/ADC.c **** {
 587              		.loc 1 594 0
 588              		.cfi_startproc
 589              	.LVL39:
 595:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG &= (uint32)(~ADC_RANGE_LOW_MASK);
 590              		.loc 1 595 0
ARM GAS  C:\Users\LAIR\AppData\Local\Temp\ccpuF2ic.s 			page 22


 591 0000 054A     		ldr	r2, .L49
 592 0002 1368     		ldr	r3, [r2]
 593 0004 1B0C     		lsr	r3, r3, #16
 594 0006 1B04     		lsl	r3, r3, #16
 595 0008 1360     		str	r3, [r2]
 596:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG |= lowLimit & ADC_RANGE_LOW_MASK;
 596              		.loc 1 596 0
 597 000a 1368     		ldr	r3, [r2]
 598 000c 0004     		lsl	r0, r0, #16
 599              	.LVL40:
 600 000e 000C     		lsr	r0, r0, #16
 601 0010 1843     		orr	r0, r3
 602 0012 1060     		str	r0, [r2]
 597:.\Generated_Source\PSoC4/ADC.c **** }
 603              		.loc 1 597 0
 604              		@ sp needed
 605 0014 7047     		bx	lr
 606              	.L50:
 607 0016 C046     		.align	2
 608              	.L49:
 609 0018 18003A40 		.word	1077542936
 610              		.cfi_endproc
 611              	.LFE10:
 612              		.size	ADC_SetLowLimit, .-ADC_SetLowLimit
 613              		.section	.text.ADC_SetHighLimit,"ax",%progbits
 614              		.align	2
 615              		.global	ADC_SetHighLimit
 616              		.code	16
 617              		.thumb_func
 618              		.type	ADC_SetHighLimit, %function
 619              	ADC_SetHighLimit:
 620              	.LFB11:
 598:.\Generated_Source\PSoC4/ADC.c **** 
 599:.\Generated_Source\PSoC4/ADC.c **** 
 600:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 601:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetHighLimit
 602:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 603:.\Generated_Source\PSoC4/ADC.c **** *
 604:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 605:.\Generated_Source\PSoC4/ADC.c **** *  Sets the low limit parameter for a limit condition.
 606:.\Generated_Source\PSoC4/ADC.c **** *
 607:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 608:.\Generated_Source\PSoC4/ADC.c **** *  highLimit: The high limit for a limit condition.
 609:.\Generated_Source\PSoC4/ADC.c **** *
 610:.\Generated_Source\PSoC4/ADC.c **** * Return:
 611:.\Generated_Source\PSoC4/ADC.c **** *  None.
 612:.\Generated_Source\PSoC4/ADC.c **** *
 613:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 614:.\Generated_Source\PSoC4/ADC.c **** void ADC_SetHighLimit(uint32 highLimit)
 615:.\Generated_Source\PSoC4/ADC.c **** {
 621              		.loc 1 615 0
 622              		.cfi_startproc
 623              	.LVL41:
 616:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG &= (uint32)(~ADC_RANGE_HIGH_MASK);
 624              		.loc 1 616 0
 625 0000 044A     		ldr	r2, .L52
 626 0002 1368     		ldr	r3, [r2]
ARM GAS  C:\Users\LAIR\AppData\Local\Temp\ccpuF2ic.s 			page 23


 627 0004 1B04     		lsl	r3, r3, #16
 628 0006 1B0C     		lsr	r3, r3, #16
 629 0008 1360     		str	r3, [r2]
 617:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG |= (uint32)(highLimit << ADC_RANGE_HIGH_OFFSET);
 630              		.loc 1 617 0
 631 000a 1368     		ldr	r3, [r2]
 632 000c 0004     		lsl	r0, r0, #16
 633              	.LVL42:
 634 000e 1843     		orr	r0, r3
 635 0010 1060     		str	r0, [r2]
 618:.\Generated_Source\PSoC4/ADC.c **** }
 636              		.loc 1 618 0
 637              		@ sp needed
 638 0012 7047     		bx	lr
 639              	.L53:
 640              		.align	2
 641              	.L52:
 642 0014 18003A40 		.word	1077542936
 643              		.cfi_endproc
 644              	.LFE11:
 645              		.size	ADC_SetHighLimit, .-ADC_SetHighLimit
 646              		.section	.text.ADC_SetLimitMask,"ax",%progbits
 647              		.align	2
 648              		.global	ADC_SetLimitMask
 649              		.code	16
 650              		.thumb_func
 651              		.type	ADC_SetLimitMask, %function
 652              	ADC_SetLimitMask:
 653              	.LFB12:
 619:.\Generated_Source\PSoC4/ADC.c **** 
 620:.\Generated_Source\PSoC4/ADC.c **** 
 621:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 622:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetLimitMask
 623:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 624:.\Generated_Source\PSoC4/ADC.c **** *
 625:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 626:.\Generated_Source\PSoC4/ADC.c **** *  Sets the channel limit condition mask.
 627:.\Generated_Source\PSoC4/ADC.c **** *
 628:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 629:.\Generated_Source\PSoC4/ADC.c **** *  mask: Sets which channels that may cause a
 630:.\Generated_Source\PSoC4/ADC.c **** *  limit condition interrupt. Setting bits for channels that do not exist
 631:.\Generated_Source\PSoC4/ADC.c **** *  will have no effect. For example, if only 6 channels were enabled,
 632:.\Generated_Source\PSoC4/ADC.c **** *  setting a mask of 0x0103 would only enable the last two channels (0 and 1).
 633:.\Generated_Source\PSoC4/ADC.c **** *
 634:.\Generated_Source\PSoC4/ADC.c **** * Return:
 635:.\Generated_Source\PSoC4/ADC.c **** *  None.
 636:.\Generated_Source\PSoC4/ADC.c **** *
 637:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 638:.\Generated_Source\PSoC4/ADC.c **** void ADC_SetLimitMask(uint32 mask)
 639:.\Generated_Source\PSoC4/ADC.c **** {
 654              		.loc 1 639 0
 655              		.cfi_startproc
 656              	.LVL43:
 640:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_INTR_MASK_REG = mask & ADC_MAX_CHANNELS_EN_MASK;
 657              		.loc 1 640 0
 658 0000 0F23     		mov	r3, #15
 659 0002 1840     		and	r0, r3
ARM GAS  C:\Users\LAIR\AppData\Local\Temp\ccpuF2ic.s 			page 24


 660              	.LVL44:
 661 0004 014B     		ldr	r3, .L55
 662 0006 1860     		str	r0, [r3]
 641:.\Generated_Source\PSoC4/ADC.c **** }
 663              		.loc 1 641 0
 664              		@ sp needed
 665 0008 7047     		bx	lr
 666              	.L56:
 667 000a C046     		.align	2
 668              	.L55:
 669 000c 38023A40 		.word	1077543480
 670              		.cfi_endproc
 671              	.LFE12:
 672              		.size	ADC_SetLimitMask, .-ADC_SetLimitMask
 673              		.section	.text.ADC_SetSatMask,"ax",%progbits
 674              		.align	2
 675              		.global	ADC_SetSatMask
 676              		.code	16
 677              		.thumb_func
 678              		.type	ADC_SetSatMask, %function
 679              	ADC_SetSatMask:
 680              	.LFB13:
 642:.\Generated_Source\PSoC4/ADC.c **** 
 643:.\Generated_Source\PSoC4/ADC.c **** 
 644:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 645:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetSatMask
 646:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 647:.\Generated_Source\PSoC4/ADC.c **** *
 648:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 649:.\Generated_Source\PSoC4/ADC.c **** *  Sets the channel saturation event mask.
 650:.\Generated_Source\PSoC4/ADC.c **** *
 651:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 652:.\Generated_Source\PSoC4/ADC.c **** *  mask: Sets which channels that may cause a
 653:.\Generated_Source\PSoC4/ADC.c **** *  saturation event interrupt. Setting bits for channels that do not exist
 654:.\Generated_Source\PSoC4/ADC.c **** *  will have no effect. For example, if only 8 channels were enabled,
 655:.\Generated_Source\PSoC4/ADC.c **** *  setting a mask of 0x01C0 would only enable two channels (6 and 7).
 656:.\Generated_Source\PSoC4/ADC.c **** *
 657:.\Generated_Source\PSoC4/ADC.c **** * Return:
 658:.\Generated_Source\PSoC4/ADC.c **** *  None.
 659:.\Generated_Source\PSoC4/ADC.c **** *
 660:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 661:.\Generated_Source\PSoC4/ADC.c **** void ADC_SetSatMask(uint32 mask)
 662:.\Generated_Source\PSoC4/ADC.c **** {
 681              		.loc 1 662 0
 682              		.cfi_startproc
 683              	.LVL45:
 663:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SATURATE_INTR_MASK_REG = mask & ADC_MAX_CHANNELS_EN_MASK;
 684              		.loc 1 663 0
 685 0000 0F23     		mov	r3, #15
 686 0002 1840     		and	r0, r3
 687              	.LVL46:
 688 0004 014B     		ldr	r3, .L58
 689 0006 1860     		str	r0, [r3]
 664:.\Generated_Source\PSoC4/ADC.c **** }
 690              		.loc 1 664 0
 691              		@ sp needed
 692 0008 7047     		bx	lr
ARM GAS  C:\Users\LAIR\AppData\Local\Temp\ccpuF2ic.s 			page 25


 693              	.L59:
 694 000a C046     		.align	2
 695              	.L58:
 696 000c 28023A40 		.word	1077543464
 697              		.cfi_endproc
 698              	.LFE13:
 699              		.size	ADC_SetSatMask, .-ADC_SetSatMask
 700              		.section	.text.ADC_SetOffset,"ax",%progbits
 701              		.align	2
 702              		.global	ADC_SetOffset
 703              		.code	16
 704              		.thumb_func
 705              		.type	ADC_SetOffset, %function
 706              	ADC_SetOffset:
 707              	.LFB14:
 665:.\Generated_Source\PSoC4/ADC.c **** 
 666:.\Generated_Source\PSoC4/ADC.c **** 
 667:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 668:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetOffset
 669:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 670:.\Generated_Source\PSoC4/ADC.c **** *
 671:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 672:.\Generated_Source\PSoC4/ADC.c **** *   Description: Sets the ADC offset which is used by the functions
 673:.\Generated_Source\PSoC4/ADC.c **** *   ADC_CountsTo_uVolts, ADC_CountsTo_mVolts and ADC_CountsTo_Volts
 674:.\Generated_Source\PSoC4/ADC.c **** *   to substract the offset from the given reading
 675:.\Generated_Source\PSoC4/ADC.c **** *   before calculating the voltage conversion.
 676:.\Generated_Source\PSoC4/ADC.c **** *
 677:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 678:.\Generated_Source\PSoC4/ADC.c **** *  chan: ADC channel number.
 679:.\Generated_Source\PSoC4/ADC.c **** *  offset: This value is a measured value when the
 680:.\Generated_Source\PSoC4/ADC.c **** *          inputs are shorted or connected to the same input voltage.
 681:.\Generated_Source\PSoC4/ADC.c **** *
 682:.\Generated_Source\PSoC4/ADC.c **** * Return:
 683:.\Generated_Source\PSoC4/ADC.c **** *  None.
 684:.\Generated_Source\PSoC4/ADC.c **** *
 685:.\Generated_Source\PSoC4/ADC.c **** * Global variables:
 686:.\Generated_Source\PSoC4/ADC.c **** *  ADC_Offset:  Modified to set the user provided offset.
 687:.\Generated_Source\PSoC4/ADC.c **** *
 688:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 689:.\Generated_Source\PSoC4/ADC.c **** void ADC_SetOffset(uint32 chan, int16 offset)
 690:.\Generated_Source\PSoC4/ADC.c **** {
 708              		.loc 1 690 0
 709              		.cfi_startproc
 710              	.LVL47:
 711 0000 38B5     		push	{r3, r4, r5, lr}
 712              		.cfi_def_cfa_offset 16
 713              		.cfi_offset 3, -16
 714              		.cfi_offset 4, -12
 715              		.cfi_offset 5, -8
 716              		.cfi_offset 14, -4
 717 0002 041C     		mov	r4, r0
 718 0004 0D1C     		mov	r5, r1
 691:.\Generated_Source\PSoC4/ADC.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 692:.\Generated_Source\PSoC4/ADC.c ****     CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 719              		.loc 1 692 0
 720 0006 0328     		cmp	r0, #3
 721 0008 02D9     		bls	.L61
ARM GAS  C:\Users\LAIR\AppData\Local\Temp\ccpuF2ic.s 			page 26


 722              		.loc 1 692 0 is_stmt 0 discriminator 1
 723 000a 0020     		mov	r0, #0
 724              	.LVL48:
 725 000c FFF7FEFF 		bl	CyHalt
 726              	.LVL49:
 727              	.L61:
 693:.\Generated_Source\PSoC4/ADC.c **** 
 694:.\Generated_Source\PSoC4/ADC.c ****     ADC_offset[chan] = offset;
 728              		.loc 1 694 0 is_stmt 1
 729 0010 6400     		lsl	r4, r4, #1
 730              	.LVL50:
 731 0012 014B     		ldr	r3, .L62
 732 0014 E552     		strh	r5, [r4, r3]
 695:.\Generated_Source\PSoC4/ADC.c **** }
 733              		.loc 1 695 0
 734              		@ sp needed
 735 0016 38BD     		pop	{r3, r4, r5, pc}
 736              	.L63:
 737              		.align	2
 738              	.L62:
 739 0018 00000000 		.word	ADC_offset
 740              		.cfi_endproc
 741              	.LFE14:
 742              		.size	ADC_SetOffset, .-ADC_SetOffset
 743              		.section	.text.ADC_SetGain,"ax",%progbits
 744              		.align	2
 745              		.global	ADC_SetGain
 746              		.code	16
 747              		.thumb_func
 748              		.type	ADC_SetGain, %function
 749              	ADC_SetGain:
 750              	.LFB15:
 696:.\Generated_Source\PSoC4/ADC.c **** 
 697:.\Generated_Source\PSoC4/ADC.c **** 
 698:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 699:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetGain
 700:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 701:.\Generated_Source\PSoC4/ADC.c **** *
 702:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 703:.\Generated_Source\PSoC4/ADC.c **** *  Description: Sets the ADC gain in counts per 10 volt for the voltage
 704:.\Generated_Source\PSoC4/ADC.c **** *  conversion functions below. This value is set by default by the
 705:.\Generated_Source\PSoC4/ADC.c **** *  reference and input range settings. It should only be used to further
 706:.\Generated_Source\PSoC4/ADC.c **** *  calibrate the ADC with a known input or if an external reference is
 707:.\Generated_Source\PSoC4/ADC.c **** *  used. Affects the ADC_CountsTo_uVolts, ADC_CountsTo_mVolts
 708:.\Generated_Source\PSoC4/ADC.c **** *  and ADC_CountsTo_Volts functions by supplying the correct
 709:.\Generated_Source\PSoC4/ADC.c **** *  conversion between ADC counts and voltage.
 710:.\Generated_Source\PSoC4/ADC.c **** *
 711:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 712:.\Generated_Source\PSoC4/ADC.c **** *  chan: ADC channel number.
 713:.\Generated_Source\PSoC4/ADC.c **** *  adcGain: ADC gain in counts per 10 volts.
 714:.\Generated_Source\PSoC4/ADC.c **** *
 715:.\Generated_Source\PSoC4/ADC.c **** * Return:
 716:.\Generated_Source\PSoC4/ADC.c **** *  None.
 717:.\Generated_Source\PSoC4/ADC.c **** *
 718:.\Generated_Source\PSoC4/ADC.c **** * Global variables:
 719:.\Generated_Source\PSoC4/ADC.c **** *  ADC_CountsPer10Volt:  modified to set the ADC gain in counts
 720:.\Generated_Source\PSoC4/ADC.c **** *   per 10 volt.
ARM GAS  C:\Users\LAIR\AppData\Local\Temp\ccpuF2ic.s 			page 27


 721:.\Generated_Source\PSoC4/ADC.c **** *
 722:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 723:.\Generated_Source\PSoC4/ADC.c **** void ADC_SetGain(uint32 chan, int32 adcGain)
 724:.\Generated_Source\PSoC4/ADC.c **** {
 751              		.loc 1 724 0
 752              		.cfi_startproc
 753              	.LVL51:
 754 0000 38B5     		push	{r3, r4, r5, lr}
 755              		.cfi_def_cfa_offset 16
 756              		.cfi_offset 3, -16
 757              		.cfi_offset 4, -12
 758              		.cfi_offset 5, -8
 759              		.cfi_offset 14, -4
 760 0002 041C     		mov	r4, r0
 761 0004 0D1C     		mov	r5, r1
 725:.\Generated_Source\PSoC4/ADC.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 726:.\Generated_Source\PSoC4/ADC.c ****     CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 762              		.loc 1 726 0
 763 0006 0328     		cmp	r0, #3
 764 0008 02D9     		bls	.L65
 765              		.loc 1 726 0 is_stmt 0 discriminator 1
 766 000a 0020     		mov	r0, #0
 767              	.LVL52:
 768 000c FFF7FEFF 		bl	CyHalt
 769              	.LVL53:
 770              	.L65:
 727:.\Generated_Source\PSoC4/ADC.c **** 
 728:.\Generated_Source\PSoC4/ADC.c ****     ADC_countsPer10Volt[chan] = adcGain;
 771              		.loc 1 728 0 is_stmt 1
 772 0010 A400     		lsl	r4, r4, #2
 773              	.LVL54:
 774 0012 014B     		ldr	r3, .L66
 775 0014 E550     		str	r5, [r4, r3]
 729:.\Generated_Source\PSoC4/ADC.c **** }
 776              		.loc 1 729 0
 777              		@ sp needed
 778              	.LVL55:
 779 0016 38BD     		pop	{r3, r4, r5, pc}
 780              	.L67:
 781              		.align	2
 782              	.L66:
 783 0018 00000000 		.word	ADC_countsPer10Volt
 784              		.cfi_endproc
 785              	.LFE15:
 786              		.size	ADC_SetGain, .-ADC_SetGain
 787              		.global	__aeabi_idiv
 788              		.section	.text.ADC_CountsTo_mVolts,"ax",%progbits
 789              		.align	2
 790              		.global	ADC_CountsTo_mVolts
 791              		.code	16
 792              		.thumb_func
 793              		.type	ADC_CountsTo_mVolts, %function
 794              	ADC_CountsTo_mVolts:
 795              	.LFB16:
 730:.\Generated_Source\PSoC4/ADC.c **** 
 731:.\Generated_Source\PSoC4/ADC.c **** 
 732:.\Generated_Source\PSoC4/ADC.c **** #if(ADC_DEFAULT_JUSTIFICATION_SEL == ADC__RIGHT)
ARM GAS  C:\Users\LAIR\AppData\Local\Temp\ccpuF2ic.s 			page 28


 733:.\Generated_Source\PSoC4/ADC.c **** 
 734:.\Generated_Source\PSoC4/ADC.c **** 
 735:.\Generated_Source\PSoC4/ADC.c ****     /*******************************************************************************
 736:.\Generated_Source\PSoC4/ADC.c ****     * Function Name: ADC_CountsTo_mVolts
 737:.\Generated_Source\PSoC4/ADC.c ****     ********************************************************************************
 738:.\Generated_Source\PSoC4/ADC.c ****     *
 739:.\Generated_Source\PSoC4/ADC.c ****     * Summary:
 740:.\Generated_Source\PSoC4/ADC.c ****     *  This function converts ADC counts to mVolts
 741:.\Generated_Source\PSoC4/ADC.c ****     *  This function is not available when left data format justification selected.
 742:.\Generated_Source\PSoC4/ADC.c ****     *
 743:.\Generated_Source\PSoC4/ADC.c ****     * Parameters:
 744:.\Generated_Source\PSoC4/ADC.c ****     *  chan: The ADC channel number.
 745:.\Generated_Source\PSoC4/ADC.c ****     *  adcCounts: Result from the ADC conversion
 746:.\Generated_Source\PSoC4/ADC.c ****     *
 747:.\Generated_Source\PSoC4/ADC.c ****     * Return:
 748:.\Generated_Source\PSoC4/ADC.c ****     *  Results in mVolts
 749:.\Generated_Source\PSoC4/ADC.c ****     *
 750:.\Generated_Source\PSoC4/ADC.c ****     * Global variables:
 751:.\Generated_Source\PSoC4/ADC.c ****     *  ADC_countsPer10Volt:  used to convert ADC counts to mVolts.
 752:.\Generated_Source\PSoC4/ADC.c ****     *  ADC_Offset:  Used as the offset while converting ADC counts
 753:.\Generated_Source\PSoC4/ADC.c ****     *   to mVolts.
 754:.\Generated_Source\PSoC4/ADC.c ****     *
 755:.\Generated_Source\PSoC4/ADC.c ****     *******************************************************************************/
 756:.\Generated_Source\PSoC4/ADC.c ****     int16 ADC_CountsTo_mVolts(uint32 chan, int16 adcCounts)
 757:.\Generated_Source\PSoC4/ADC.c ****     {
 796              		.loc 1 757 0
 797              		.cfi_startproc
 798              	.LVL56:
 799 0000 38B5     		push	{r3, r4, r5, lr}
 800              		.cfi_def_cfa_offset 16
 801              		.cfi_offset 3, -16
 802              		.cfi_offset 4, -12
 803              		.cfi_offset 5, -8
 804              		.cfi_offset 14, -4
 805 0002 041C     		mov	r4, r0
 806 0004 0D1C     		mov	r5, r1
 758:.\Generated_Source\PSoC4/ADC.c ****         int16 mVolts;
 759:.\Generated_Source\PSoC4/ADC.c **** 
 760:.\Generated_Source\PSoC4/ADC.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 761:.\Generated_Source\PSoC4/ADC.c ****         CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 807              		.loc 1 761 0
 808 0006 0328     		cmp	r0, #3
 809 0008 02D9     		bls	.L69
 810              		.loc 1 761 0 is_stmt 0 discriminator 1
 811 000a 0020     		mov	r0, #0
 812              	.LVL57:
 813 000c FFF7FEFF 		bl	CyHalt
 814              	.LVL58:
 815              	.L69:
 762:.\Generated_Source\PSoC4/ADC.c **** 
 763:.\Generated_Source\PSoC4/ADC.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 764:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE)
 765:.\Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chan] & ADC_AVERAGING_EN) != 0u)
 766:.\Generated_Source\PSoC4/ADC.c ****             {
 767:.\Generated_Source\PSoC4/ADC.c ****                 adcCounts /= ADC_DEFAULT_AVG_SAMPLES_DIV;
 768:.\Generated_Source\PSoC4/ADC.c ****             }
 769:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE */
ARM GAS  C:\Users\LAIR\AppData\Local\Temp\ccpuF2ic.s 			page 29


 770:.\Generated_Source\PSoC4/ADC.c **** 
 771:.\Generated_Source\PSoC4/ADC.c ****         /* Subtract ADC offset */
 772:.\Generated_Source\PSoC4/ADC.c ****         adcCounts -= ADC_offset[chan];
 816              		.loc 1 772 0 is_stmt 1
 817 0010 6300     		lsl	r3, r4, #1
 818 0012 0F4A     		ldr	r2, .L72
 819 0014 995A     		ldrh	r1, [r3, r2]
 820 0016 691A     		sub	r1, r5, r1
 821 0018 09B2     		sxth	r1, r1
 822              	.LVL59:
 773:.\Generated_Source\PSoC4/ADC.c **** 
 774:.\Generated_Source\PSoC4/ADC.c ****         mVolts = (int16)((((int32)adcCounts * ADC_10MV_COUNTS) + ( (adcCounts > 0) ?
 823              		.loc 1 774 0
 824 001a 0E48     		ldr	r0, .L72+4
 825 001c 021C     		mov	r2, r0
 826 001e 4A43     		mul	r2, r1
 775:.\Generated_Source\PSoC4/ADC.c ****                  (ADC_countsPer10Volt[chan] / 2) : (-(ADC_countsPer10Volt[chan] / 2)) ))
 827              		.loc 1 775 0
 828 0020 0029     		cmp	r1, #0
 829 0022 06DD     		ble	.L70
 830              		.loc 1 775 0 is_stmt 0 discriminator 1
 831 0024 A300     		lsl	r3, r4, #2
 832 0026 0C49     		ldr	r1, .L72+8
 833              	.LVL60:
 834 0028 5B58     		ldr	r3, [r3, r1]
 835 002a D80F     		lsr	r0, r3, #31
 836 002c C018     		add	r0, r0, r3
 837 002e 4310     		asr	r3, r0, #1
 838 0030 06E0     		b	.L71
 839              	.LVL61:
 840              	.L70:
 841              		.loc 1 775 0 discriminator 2
 842 0032 A300     		lsl	r3, r4, #2
 843 0034 0849     		ldr	r1, .L72+8
 844              	.LVL62:
 845 0036 5B58     		ldr	r3, [r3, r1]
 846 0038 D80F     		lsr	r0, r3, #31
 847 003a C318     		add	r3, r0, r3
 848 003c 5B10     		asr	r3, r3, #1
 849 003e 5B42     		neg	r3, r3
 850              	.L71:
 774:.\Generated_Source\PSoC4/ADC.c ****                  (ADC_countsPer10Volt[chan] / 2) : (-(ADC_countsPer10Volt[chan] / 2)) ))
 851              		.loc 1 774 0 is_stmt 1
 852 0040 D018     		add	r0, r2, r3
 776:.\Generated_Source\PSoC4/ADC.c ****                  / ADC_countsPer10Volt[chan]);
 853              		.loc 1 776 0
 854 0042 A400     		lsl	r4, r4, #2
 855              	.LVL63:
 856 0044 044B     		ldr	r3, .L72+8
 857 0046 E158     		ldr	r1, [r4, r3]
 858 0048 FFF7FEFF 		bl	__aeabi_idiv
 859              	.LVL64:
 777:.\Generated_Source\PSoC4/ADC.c **** 
 778:.\Generated_Source\PSoC4/ADC.c ****         return( mVolts );
 860              		.loc 1 778 0
 861 004c 00B2     		sxth	r0, r0
 779:.\Generated_Source\PSoC4/ADC.c ****     }
ARM GAS  C:\Users\LAIR\AppData\Local\Temp\ccpuF2ic.s 			page 30


 862              		.loc 1 779 0
 863              		@ sp needed
 864 004e 38BD     		pop	{r3, r4, r5, pc}
 865              	.L73:
 866              		.align	2
 867              	.L72:
 868 0050 00000000 		.word	ADC_offset
 869 0054 10270000 		.word	10000
 870 0058 00000000 		.word	ADC_countsPer10Volt
 871              		.cfi_endproc
 872              	.LFE16:
 873              		.size	ADC_CountsTo_mVolts, .-ADC_CountsTo_mVolts
 874              		.global	__aeabi_lmul
 875              		.global	__aeabi_ldivmod
 876              		.section	.text.ADC_CountsTo_uVolts,"ax",%progbits
 877              		.align	2
 878              		.global	ADC_CountsTo_uVolts
 879              		.code	16
 880              		.thumb_func
 881              		.type	ADC_CountsTo_uVolts, %function
 882              	ADC_CountsTo_uVolts:
 883              	.LFB17:
 780:.\Generated_Source\PSoC4/ADC.c **** 
 781:.\Generated_Source\PSoC4/ADC.c **** 
 782:.\Generated_Source\PSoC4/ADC.c ****     /*******************************************************************************
 783:.\Generated_Source\PSoC4/ADC.c ****     * Function Name: ADC_CountsTo_uVolts
 784:.\Generated_Source\PSoC4/ADC.c ****     ********************************************************************************
 785:.\Generated_Source\PSoC4/ADC.c ****     *
 786:.\Generated_Source\PSoC4/ADC.c ****     * Summary:
 787:.\Generated_Source\PSoC4/ADC.c ****     *  This function converts ADC counts to micro Volts
 788:.\Generated_Source\PSoC4/ADC.c ****     *  This function is not available when left data format justification selected.
 789:.\Generated_Source\PSoC4/ADC.c ****     *
 790:.\Generated_Source\PSoC4/ADC.c ****     * Parameters:
 791:.\Generated_Source\PSoC4/ADC.c ****     *  chan: The ADC channel number.
 792:.\Generated_Source\PSoC4/ADC.c ****     *  adcCounts: Result from the ADC conversion
 793:.\Generated_Source\PSoC4/ADC.c ****     *
 794:.\Generated_Source\PSoC4/ADC.c ****     * Return:
 795:.\Generated_Source\PSoC4/ADC.c ****     *  Results in uVolts
 796:.\Generated_Source\PSoC4/ADC.c ****     *
 797:.\Generated_Source\PSoC4/ADC.c ****     * Global variables:
 798:.\Generated_Source\PSoC4/ADC.c ****     *  ADC_countsPer10Volt:  used to convert ADC counts to uVolts.
 799:.\Generated_Source\PSoC4/ADC.c ****     *  ADC_Offset:  Used as the offset while converting ADC counts
 800:.\Generated_Source\PSoC4/ADC.c ****     *   to mVolts.
 801:.\Generated_Source\PSoC4/ADC.c ****     *
 802:.\Generated_Source\PSoC4/ADC.c ****     * Theory:
 803:.\Generated_Source\PSoC4/ADC.c ****     *  Care must be taken to not exceed the maximum value for a 31 bit signed
 804:.\Generated_Source\PSoC4/ADC.c ****     *  number in the conversion to uVolts and at the same time not loose
 805:.\Generated_Source\PSoC4/ADC.c ****     *  resolution.
 806:.\Generated_Source\PSoC4/ADC.c ****     *  To convert adcCounts to microVolts it is required to be multiplied
 807:.\Generated_Source\PSoC4/ADC.c ****     *  on 10 million and later divide on gain in counts per 10V.
 808:.\Generated_Source\PSoC4/ADC.c ****     *
 809:.\Generated_Source\PSoC4/ADC.c ****     *******************************************************************************/
 810:.\Generated_Source\PSoC4/ADC.c ****     int32 ADC_CountsTo_uVolts(uint32 chan, int16 adcCounts)
 811:.\Generated_Source\PSoC4/ADC.c ****     {
 884              		.loc 1 811 0
 885              		.cfi_startproc
 886              	.LVL65:
ARM GAS  C:\Users\LAIR\AppData\Local\Temp\ccpuF2ic.s 			page 31


 887 0000 38B5     		push	{r3, r4, r5, lr}
 888              		.cfi_def_cfa_offset 16
 889              		.cfi_offset 3, -16
 890              		.cfi_offset 4, -12
 891              		.cfi_offset 5, -8
 892              		.cfi_offset 14, -4
 893 0002 051C     		mov	r5, r0
 894 0004 0C1C     		mov	r4, r1
 812:.\Generated_Source\PSoC4/ADC.c ****         int64 uVolts;
 813:.\Generated_Source\PSoC4/ADC.c **** 
 814:.\Generated_Source\PSoC4/ADC.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 815:.\Generated_Source\PSoC4/ADC.c ****         CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 895              		.loc 1 815 0
 896 0006 0328     		cmp	r0, #3
 897 0008 02D9     		bls	.L75
 898              		.loc 1 815 0 is_stmt 0 discriminator 1
 899 000a 0020     		mov	r0, #0
 900              	.LVL66:
 901 000c FFF7FEFF 		bl	CyHalt
 902              	.LVL67:
 903              	.L75:
 816:.\Generated_Source\PSoC4/ADC.c **** 
 817:.\Generated_Source\PSoC4/ADC.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 818:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE)
 819:.\Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chan] & ADC_AVERAGING_EN) != 0u)
 820:.\Generated_Source\PSoC4/ADC.c ****             {
 821:.\Generated_Source\PSoC4/ADC.c ****                 adcCounts /= ADC_DEFAULT_AVG_SAMPLES_DIV;
 822:.\Generated_Source\PSoC4/ADC.c ****             }
 823:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE */
 824:.\Generated_Source\PSoC4/ADC.c **** 
 825:.\Generated_Source\PSoC4/ADC.c ****         /* Subtract ADC offset */
 826:.\Generated_Source\PSoC4/ADC.c ****         adcCounts -= ADC_offset[chan];
 904              		.loc 1 826 0 is_stmt 1
 905 0010 6A00     		lsl	r2, r5, #1
 906 0012 084B     		ldr	r3, .L76
 907 0014 D05A     		ldrh	r0, [r2, r3]
 908 0016 201A     		sub	r0, r4, r0
 909 0018 00B2     		sxth	r0, r0
 910              	.LVL68:
 827:.\Generated_Source\PSoC4/ADC.c **** 
 828:.\Generated_Source\PSoC4/ADC.c ****         uVolts = ((int64)adcCounts * ADC_10UV_COUNTS) / ADC_countsPer10Volt[chan];
 911              		.loc 1 828 0
 912 001a C117     		asr	r1, r0, #31
 913 001c 064A     		ldr	r2, .L76+4
 914 001e 0023     		mov	r3, #0
 915 0020 FFF7FEFF 		bl	__aeabi_lmul
 916              	.LVL69:
 917 0024 AD00     		lsl	r5, r5, #2
 918              	.LVL70:
 919 0026 054B     		ldr	r3, .L76+8
 920 0028 EA58     		ldr	r2, [r5, r3]
 921 002a D317     		asr	r3, r2, #31
 922 002c FFF7FEFF 		bl	__aeabi_ldivmod
 923              	.LVL71:
 829:.\Generated_Source\PSoC4/ADC.c **** 
 830:.\Generated_Source\PSoC4/ADC.c ****         return( (int32)uVolts );
 831:.\Generated_Source\PSoC4/ADC.c ****     }
ARM GAS  C:\Users\LAIR\AppData\Local\Temp\ccpuF2ic.s 			page 32


 924              		.loc 1 831 0
 925              		@ sp needed
 926 0030 38BD     		pop	{r3, r4, r5, pc}
 927              	.L77:
 928 0032 C046     		.align	2
 929              	.L76:
 930 0034 00000000 		.word	ADC_offset
 931 0038 80969800 		.word	10000000
 932 003c 00000000 		.word	ADC_countsPer10Volt
 933              		.cfi_endproc
 934              	.LFE17:
 935              		.size	ADC_CountsTo_uVolts, .-ADC_CountsTo_uVolts
 936              		.global	__aeabi_i2f
 937              		.global	__aeabi_fmul
 938              		.global	__aeabi_fdiv
 939              		.section	.text.ADC_CountsTo_Volts,"ax",%progbits
 940              		.align	2
 941              		.global	ADC_CountsTo_Volts
 942              		.code	16
 943              		.thumb_func
 944              		.type	ADC_CountsTo_Volts, %function
 945              	ADC_CountsTo_Volts:
 946              	.LFB18:
 832:.\Generated_Source\PSoC4/ADC.c **** 
 833:.\Generated_Source\PSoC4/ADC.c **** 
 834:.\Generated_Source\PSoC4/ADC.c ****     /*******************************************************************************
 835:.\Generated_Source\PSoC4/ADC.c ****     * Function Name: ADC_CountsTo_Volts
 836:.\Generated_Source\PSoC4/ADC.c ****     ********************************************************************************
 837:.\Generated_Source\PSoC4/ADC.c ****     *
 838:.\Generated_Source\PSoC4/ADC.c ****     * Summary:
 839:.\Generated_Source\PSoC4/ADC.c ****     *  Converts the ADC output to Volts as a floating point number.
 840:.\Generated_Source\PSoC4/ADC.c ****     *  This function is not available when left data format justification selected.
 841:.\Generated_Source\PSoC4/ADC.c ****     *
 842:.\Generated_Source\PSoC4/ADC.c ****     * Parameters:
 843:.\Generated_Source\PSoC4/ADC.c ****     *  chan: The ADC channel number.
 844:.\Generated_Source\PSoC4/ADC.c ****     *  Result from the ADC conversion
 845:.\Generated_Source\PSoC4/ADC.c ****     *
 846:.\Generated_Source\PSoC4/ADC.c ****     * Return:
 847:.\Generated_Source\PSoC4/ADC.c ****     *  Results in Volts
 848:.\Generated_Source\PSoC4/ADC.c ****     *
 849:.\Generated_Source\PSoC4/ADC.c ****     * Global variables:
 850:.\Generated_Source\PSoC4/ADC.c ****     *  ADC_countsPer10Volt:  used to convert ADC counts to Volts.
 851:.\Generated_Source\PSoC4/ADC.c ****     *  ADC_Offset:  Used as the offset while converting ADC counts
 852:.\Generated_Source\PSoC4/ADC.c ****     *   to mVolts.
 853:.\Generated_Source\PSoC4/ADC.c ****     *
 854:.\Generated_Source\PSoC4/ADC.c ****     *******************************************************************************/
 855:.\Generated_Source\PSoC4/ADC.c ****     float32 ADC_CountsTo_Volts(uint32 chan, int16 adcCounts)
 856:.\Generated_Source\PSoC4/ADC.c ****     {
 947              		.loc 1 856 0
 948              		.cfi_startproc
 949              	.LVL72:
 950 0000 38B5     		push	{r3, r4, r5, lr}
 951              		.cfi_def_cfa_offset 16
 952              		.cfi_offset 3, -16
 953              		.cfi_offset 4, -12
 954              		.cfi_offset 5, -8
 955              		.cfi_offset 14, -4
ARM GAS  C:\Users\LAIR\AppData\Local\Temp\ccpuF2ic.s 			page 33


 956 0002 041C     		mov	r4, r0
 957 0004 0D1C     		mov	r5, r1
 857:.\Generated_Source\PSoC4/ADC.c ****         float32 volts;
 858:.\Generated_Source\PSoC4/ADC.c **** 
 859:.\Generated_Source\PSoC4/ADC.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 860:.\Generated_Source\PSoC4/ADC.c ****         CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 958              		.loc 1 860 0
 959 0006 0328     		cmp	r0, #3
 960 0008 02D9     		bls	.L79
 961              		.loc 1 860 0 is_stmt 0 discriminator 1
 962 000a 0020     		mov	r0, #0
 963              	.LVL73:
 964 000c FFF7FEFF 		bl	CyHalt
 965              	.LVL74:
 966              	.L79:
 861:.\Generated_Source\PSoC4/ADC.c **** 
 862:.\Generated_Source\PSoC4/ADC.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 863:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE)
 864:.\Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chan] & ADC_AVERAGING_EN) != 0u)
 865:.\Generated_Source\PSoC4/ADC.c ****             {
 866:.\Generated_Source\PSoC4/ADC.c ****                 adcCounts /= ADC_DEFAULT_AVG_SAMPLES_DIV;
 867:.\Generated_Source\PSoC4/ADC.c ****             }
 868:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE */
 869:.\Generated_Source\PSoC4/ADC.c **** 
 870:.\Generated_Source\PSoC4/ADC.c ****         /* Subtract ADC offset */
 871:.\Generated_Source\PSoC4/ADC.c ****         adcCounts -= ADC_offset[chan];
 967              		.loc 1 871 0 is_stmt 1
 968 0010 6200     		lsl	r2, r4, #1
 969 0012 0A4B     		ldr	r3, .L80
 970 0014 D05A     		ldrh	r0, [r2, r3]
 971 0016 281A     		sub	r0, r5, r0
 972 0018 00B2     		sxth	r0, r0
 973              	.LVL75:
 872:.\Generated_Source\PSoC4/ADC.c **** 
 873:.\Generated_Source\PSoC4/ADC.c ****         volts = ((float32)adcCounts * ADC_10V_COUNTS) / (float32)ADC_countsPer10Volt[chan];
 974              		.loc 1 873 0
 975 001a FFF7FEFF 		bl	__aeabi_i2f
 976              	.LVL76:
 977 001e 0849     		ldr	r1, .L80+4
 978 0020 FFF7FEFF 		bl	__aeabi_fmul
 979              	.LVL77:
 980 0024 051C     		add	r5, r0, #0
 981 0026 A400     		lsl	r4, r4, #2
 982              	.LVL78:
 983 0028 064B     		ldr	r3, .L80+8
 984 002a E058     		ldr	r0, [r4, r3]
 985 002c FFF7FEFF 		bl	__aeabi_i2f
 986              	.LVL79:
 987 0030 011C     		add	r1, r0, #0
 988 0032 281C     		add	r0, r5, #0
 989 0034 FFF7FEFF 		bl	__aeabi_fdiv
 990              	.LVL80:
 874:.\Generated_Source\PSoC4/ADC.c **** 
 875:.\Generated_Source\PSoC4/ADC.c ****         return( volts );
 876:.\Generated_Source\PSoC4/ADC.c ****     }
 991              		.loc 1 876 0
 992              		@ sp needed
ARM GAS  C:\Users\LAIR\AppData\Local\Temp\ccpuF2ic.s 			page 34


 993 0038 38BD     		pop	{r3, r4, r5, pc}
 994              	.L81:
 995 003a C046     		.align	2
 996              	.L80:
 997 003c 00000000 		.word	ADC_offset
 998 0040 00002041 		.word	1092616192
 999 0044 00000000 		.word	ADC_countsPer10Volt
 1000              		.cfi_endproc
 1001              	.LFE18:
 1002              		.size	ADC_CountsTo_Volts, .-ADC_CountsTo_Volts
 1003              		.comm	ADC_countsPer10Volt,16,4
 1004              		.comm	ADC_offset,8,4
 1005              		.global	ADC_initVar
 1006              		.section	.rodata
 1007              		.align	2
 1008              		.set	.LANCHOR0,. + 0
 1009              		.type	ADC_channelsConfig, %object
 1010              		.size	ADC_channelsConfig, 16
 1011              	ADC_channelsConfig:
 1012 0000 00040000 		.word	1024
 1013 0004 00040000 		.word	1024
 1014 0008 00040000 		.word	1024
 1015 000c 00040000 		.word	1024
 1016              		.type	ADC_InputsPlacement.4848, %object
 1017              		.size	ADC_InputsPlacement.4848, 4
 1018              	ADC_InputsPlacement.4848:
 1019 0010 07       		.byte	7
 1020 0011 05       		.byte	5
 1021 0012 06       		.byte	6
 1022 0013 03       		.byte	3
 1023              		.bss
 1024              		.set	.LANCHOR1,. + 0
 1025              		.type	ADC_initVar, %object
 1026              		.size	ADC_initVar, 1
 1027              	ADC_initVar:
 1028 0000 00       		.space	1
 1029              		.text
 1030              	.Letext0:
 1031              		.file 2 ".\\Generated_Source\\PSoC4\\cytypes.h"
 1032              		.file 3 ".\\Generated_Source\\PSoC4\\CyLib.h"
 1033              		.section	.debug_info,"",%progbits
 1034              	.Ldebug_info0:
 1035 0000 BB050000 		.4byte	0x5bb
 1036 0004 0400     		.2byte	0x4
 1037 0006 00000000 		.4byte	.Ldebug_abbrev0
 1038 000a 04       		.byte	0x4
 1039 000b 01       		.uleb128 0x1
 1040 000c DB010000 		.4byte	.LASF62
 1041 0010 01       		.byte	0x1
 1042 0011 13030000 		.4byte	.LASF63
 1043 0015 90020000 		.4byte	.LASF64
 1044 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1045 001d 00000000 		.4byte	0
 1046 0021 00000000 		.4byte	.Ldebug_line0
 1047 0025 02       		.uleb128 0x2
 1048 0026 01       		.byte	0x1
 1049 0027 06       		.byte	0x6
ARM GAS  C:\Users\LAIR\AppData\Local\Temp\ccpuF2ic.s 			page 35


 1050 0028 7C000000 		.4byte	.LASF0
 1051 002c 02       		.uleb128 0x2
 1052 002d 01       		.byte	0x1
 1053 002e 08       		.byte	0x8
 1054 002f 32030000 		.4byte	.LASF1
 1055 0033 02       		.uleb128 0x2
 1056 0034 02       		.byte	0x2
 1057 0035 05       		.byte	0x5
 1058 0036 4B030000 		.4byte	.LASF2
 1059 003a 02       		.uleb128 0x2
 1060 003b 02       		.byte	0x2
 1061 003c 07       		.byte	0x7
 1062 003d 5D010000 		.4byte	.LASF3
 1063 0041 02       		.uleb128 0x2
 1064 0042 04       		.byte	0x4
 1065 0043 05       		.byte	0x5
 1066 0044 9F000000 		.4byte	.LASF4
 1067 0048 02       		.uleb128 0x2
 1068 0049 04       		.byte	0x4
 1069 004a 07       		.byte	0x7
 1070 004b 2C010000 		.4byte	.LASF5
 1071 004f 02       		.uleb128 0x2
 1072 0050 08       		.byte	0x8
 1073 0051 05       		.byte	0x5
 1074 0052 6E000000 		.4byte	.LASF6
 1075 0056 02       		.uleb128 0x2
 1076 0057 08       		.byte	0x8
 1077 0058 07       		.byte	0x7
 1078 0059 32000000 		.4byte	.LASF7
 1079 005d 03       		.uleb128 0x3
 1080 005e 04       		.byte	0x4
 1081 005f 05       		.byte	0x5
 1082 0060 696E7400 		.ascii	"int\000"
 1083 0064 02       		.uleb128 0x2
 1084 0065 04       		.byte	0x4
 1085 0066 07       		.byte	0x7
 1086 0067 18010000 		.4byte	.LASF8
 1087 006b 04       		.uleb128 0x4
 1088 006c D0000000 		.4byte	.LASF9
 1089 0070 02       		.byte	0x2
 1090 0071 9801     		.2byte	0x198
 1091 0073 2C000000 		.4byte	0x2c
 1092 0077 04       		.uleb128 0x4
 1093 0078 00000000 		.4byte	.LASF10
 1094 007c 02       		.byte	0x2
 1095 007d 9901     		.2byte	0x199
 1096 007f 3A000000 		.4byte	0x3a
 1097 0083 04       		.uleb128 0x4
 1098 0084 E7000000 		.4byte	.LASF11
 1099 0088 02       		.byte	0x2
 1100 0089 9A01     		.2byte	0x19a
 1101 008b 48000000 		.4byte	0x48
 1102 008f 04       		.uleb128 0x4
 1103 0090 AA030000 		.4byte	.LASF12
 1104 0094 02       		.byte	0x2
 1105 0095 9C01     		.2byte	0x19c
 1106 0097 33000000 		.4byte	0x33
ARM GAS  C:\Users\LAIR\AppData\Local\Temp\ccpuF2ic.s 			page 36


 1107 009b 04       		.uleb128 0x4
 1108 009c 8F000000 		.4byte	.LASF13
 1109 00a0 02       		.byte	0x2
 1110 00a1 9D01     		.2byte	0x19d
 1111 00a3 41000000 		.4byte	0x41
 1112 00a7 04       		.uleb128 0x4
 1113 00a8 9C010000 		.4byte	.LASF14
 1114 00ac 02       		.byte	0x2
 1115 00ad 9E01     		.2byte	0x19e
 1116 00af B3000000 		.4byte	0xb3
 1117 00b3 02       		.uleb128 0x2
 1118 00b4 04       		.byte	0x4
 1119 00b5 04       		.byte	0x4
 1120 00b6 D8020000 		.4byte	.LASF15
 1121 00ba 02       		.uleb128 0x2
 1122 00bb 08       		.byte	0x8
 1123 00bc 04       		.byte	0x4
 1124 00bd E0000000 		.4byte	.LASF16
 1125 00c1 04       		.uleb128 0x4
 1126 00c2 69020000 		.4byte	.LASF17
 1127 00c6 02       		.byte	0x2
 1128 00c7 A301     		.2byte	0x1a3
 1129 00c9 4F000000 		.4byte	0x4f
 1130 00cd 02       		.uleb128 0x2
 1131 00ce 01       		.byte	0x1
 1132 00cf 08       		.byte	0x8
 1133 00d0 69030000 		.4byte	.LASF18
 1134 00d4 04       		.uleb128 0x4
 1135 00d5 96010000 		.4byte	.LASF19
 1136 00d9 02       		.byte	0x2
 1137 00da 4402     		.2byte	0x244
 1138 00dc E0000000 		.4byte	0xe0
 1139 00e0 05       		.uleb128 0x5
 1140 00e1 83000000 		.4byte	0x83
 1141 00e5 04       		.uleb128 0x4
 1142 00e6 6E030000 		.4byte	.LASF20
 1143 00ea 02       		.byte	0x2
 1144 00eb 5402     		.2byte	0x254
 1145 00ed F1000000 		.4byte	0xf1
 1146 00f1 06       		.uleb128 0x6
 1147 00f2 04       		.byte	0x4
 1148 00f3 F7000000 		.4byte	0xf7
 1149 00f7 07       		.uleb128 0x7
 1150 00f8 02       		.uleb128 0x2
 1151 00f9 04       		.byte	0x4
 1152 00fa 07       		.byte	0x7
 1153 00fb A4010000 		.4byte	.LASF21
 1154 00ff 08       		.uleb128 0x8
 1155 0100 29000000 		.4byte	.LASF26
 1156 0104 01       		.byte	0x1
 1157 0105 5E       		.byte	0x5e
 1158 0106 00000000 		.4byte	.LFB2
 1159 010a 84010000 		.4byte	.LFE2-.LFB2
 1160 010e 01       		.uleb128 0x1
 1161 010f 9C       		.byte	0x9c
 1162 0110 7A010000 		.4byte	0x17a
 1163 0114 09       		.uleb128 0x9
ARM GAS  C:\Users\LAIR\AppData\Local\Temp\ccpuF2ic.s 			page 37


 1164 0115 5E030000 		.4byte	.LASF22
 1165 0119 01       		.byte	0x1
 1166 011a 60       		.byte	0x60
 1167 011b 83000000 		.4byte	0x83
 1168 011f 00000000 		.4byte	.LLST0
 1169 0123 09       		.uleb128 0x9
 1170 0124 53010000 		.4byte	.LASF23
 1171 0128 01       		.byte	0x1
 1172 0129 61       		.byte	0x61
 1173 012a 83000000 		.4byte	0x83
 1174 012e 1F000000 		.4byte	.LLST1
 1175 0132 09       		.uleb128 0x9
 1176 0133 0F000000 		.4byte	.LASF24
 1177 0137 01       		.byte	0x1
 1178 0138 62       		.byte	0x62
 1179 0139 9B000000 		.4byte	0x9b
 1180 013d 2B010000 		.4byte	.LLST2
 1181 0141 0A       		.uleb128 0xa
 1182 0142 49000000 		.4byte	.LASF25
 1183 0146 01       		.byte	0x1
 1184 0147 65       		.byte	0x65
 1185 0148 8A010000 		.4byte	0x18a
 1186 014c 05       		.uleb128 0x5
 1187 014d 03       		.byte	0x3
 1188 014e 10000000 		.4byte	ADC_InputsPlacement.4848
 1189 0152 0B       		.uleb128 0xb
 1190 0153 0A000000 		.4byte	.LVL0
 1191 0157 70050000 		.4byte	0x570
 1192 015b 6A010000 		.4byte	0x16a
 1193 015f 0C       		.uleb128 0xc
 1194 0160 01       		.uleb128 0x1
 1195 0161 51       		.byte	0x51
 1196 0162 01       		.uleb128 0x1
 1197 0163 33       		.byte	0x33
 1198 0164 0C       		.uleb128 0xc
 1199 0165 01       		.uleb128 0x1
 1200 0166 50       		.byte	0x50
 1201 0167 01       		.uleb128 0x1
 1202 0168 41       		.byte	0x41
 1203 0169 00       		.byte	0
 1204 016a 0D       		.uleb128 0xd
 1205 016b 12000000 		.4byte	.LVL1
 1206 016f 86050000 		.4byte	0x586
 1207 0173 0C       		.uleb128 0xc
 1208 0174 01       		.uleb128 0x1
 1209 0175 50       		.byte	0x50
 1210 0176 01       		.uleb128 0x1
 1211 0177 41       		.byte	0x41
 1212 0178 00       		.byte	0
 1213 0179 00       		.byte	0
 1214 017a 0E       		.uleb128 0xe
 1215 017b 6B000000 		.4byte	0x6b
 1216 017f 8A010000 		.4byte	0x18a
 1217 0183 0F       		.uleb128 0xf
 1218 0184 F8000000 		.4byte	0xf8
 1219 0188 03       		.byte	0x3
 1220 0189 00       		.byte	0
ARM GAS  C:\Users\LAIR\AppData\Local\Temp\ccpuF2ic.s 			page 38


 1221 018a 10       		.uleb128 0x10
 1222 018b 7A010000 		.4byte	0x17a
 1223 018f 11       		.uleb128 0x11
 1224 0190 9F030000 		.4byte	.LASF27
 1225 0194 01       		.byte	0x1
 1226 0195 4A01     		.2byte	0x14a
 1227 0197 00000000 		.4byte	.LFB3
 1228 019b 30000000 		.4byte	.LFE3-.LFB3
 1229 019f 01       		.uleb128 0x1
 1230 01a0 9C       		.byte	0x9c
 1231 01a1 B5010000 		.4byte	0x1b5
 1232 01a5 0D       		.uleb128 0xd
 1233 01a6 24000000 		.4byte	.LVL19
 1234 01aa A0050000 		.4byte	0x5a0
 1235 01ae 0C       		.uleb128 0xc
 1236 01af 01       		.uleb128 0x1
 1237 01b0 50       		.byte	0x50
 1238 01b1 01       		.uleb128 0x1
 1239 01b2 3A       		.byte	0x3a
 1240 01b3 00       		.byte	0
 1241 01b4 00       		.byte	0
 1242 01b5 08       		.uleb128 0x8
 1243 01b6 95000000 		.4byte	.LASF28
 1244 01ba 01       		.byte	0x1
 1245 01bb 3F       		.byte	0x3f
 1246 01bc 00000000 		.4byte	.LFB1
 1247 01c0 20000000 		.4byte	.LFE1-.LFB1
 1248 01c4 01       		.uleb128 0x1
 1249 01c5 9C       		.byte	0x9c
 1250 01c6 DD010000 		.4byte	0x1dd
 1251 01ca 12       		.uleb128 0x12
 1252 01cb 0E000000 		.4byte	.LVL20
 1253 01cf FF000000 		.4byte	0xff
 1254 01d3 12       		.uleb128 0x12
 1255 01d4 18000000 		.4byte	.LVL21
 1256 01d8 8F010000 		.4byte	0x18f
 1257 01dc 00       		.byte	0
 1258 01dd 13       		.uleb128 0x13
 1259 01de 55030000 		.4byte	.LASF29
 1260 01e2 01       		.byte	0x1
 1261 01e3 6D01     		.2byte	0x16d
 1262 01e5 00000000 		.4byte	.LFB4
 1263 01e9 10000000 		.4byte	.LFE4-.LFB4
 1264 01ed 01       		.uleb128 0x1
 1265 01ee 9C       		.byte	0x9c
 1266 01ef 13       		.uleb128 0x13
 1267 01f0 5D000000 		.4byte	.LASF30
 1268 01f4 01       		.byte	0x1
 1269 01f5 8701     		.2byte	0x187
 1270 01f7 00000000 		.4byte	.LFB5
 1271 01fb 14000000 		.4byte	.LFE5-.LFB5
 1272 01ff 01       		.uleb128 0x1
 1273 0200 9C       		.byte	0x9c
 1274 0201 13       		.uleb128 0x13
 1275 0202 7F010000 		.4byte	.LASF31
 1276 0206 01       		.byte	0x1
 1277 0207 A001     		.2byte	0x1a0
ARM GAS  C:\Users\LAIR\AppData\Local\Temp\ccpuF2ic.s 			page 39


 1278 0209 00000000 		.4byte	.LFB6
 1279 020d 14000000 		.4byte	.LFE6-.LFB6
 1280 0211 01       		.uleb128 0x1
 1281 0212 9C       		.byte	0x9c
 1282 0213 14       		.uleb128 0x14
 1283 0214 C7010000 		.4byte	.LASF33
 1284 0218 01       		.byte	0x1
 1285 0219 C201     		.2byte	0x1c2
 1286 021b 83000000 		.4byte	0x83
 1287 021f 00000000 		.4byte	.LFB7
 1288 0223 28000000 		.4byte	.LFE7-.LFB7
 1289 0227 01       		.uleb128 0x1
 1290 0228 9C       		.byte	0x9c
 1291 0229 4E020000 		.4byte	0x24e
 1292 022d 15       		.uleb128 0x15
 1293 022e FF000000 		.4byte	.LASF35
 1294 0232 01       		.byte	0x1
 1295 0233 C201     		.2byte	0x1c2
 1296 0235 83000000 		.4byte	0x83
 1297 0239 3E010000 		.4byte	.LLST3
 1298 023d 16       		.uleb128 0x16
 1299 023e 88000000 		.4byte	.LASF32
 1300 0242 01       		.byte	0x1
 1301 0243 C401     		.2byte	0x1c4
 1302 0245 83000000 		.4byte	0x83
 1303 0249 83010000 		.4byte	.LLST4
 1304 024d 00       		.byte	0
 1305 024e 14       		.uleb128 0x14
 1306 024f D1030000 		.4byte	.LASF34
 1307 0253 01       		.byte	0x1
 1308 0254 F801     		.2byte	0x1f8
 1309 0256 8F000000 		.4byte	0x8f
 1310 025a 00000000 		.4byte	.LFB8
 1311 025e 2C000000 		.4byte	.LFE8-.LFB8
 1312 0262 01       		.uleb128 0x1
 1313 0263 9C       		.byte	0x9c
 1314 0264 98020000 		.4byte	0x298
 1315 0268 15       		.uleb128 0x15
 1316 0269 64030000 		.4byte	.LASF36
 1317 026d 01       		.byte	0x1
 1318 026e F801     		.2byte	0x1f8
 1319 0270 83000000 		.4byte	0x83
 1320 0274 B9010000 		.4byte	.LLST5
 1321 0278 16       		.uleb128 0x16
 1322 0279 CA030000 		.4byte	.LASF37
 1323 027d 01       		.byte	0x1
 1324 027e FA01     		.2byte	0x1fa
 1325 0280 83000000 		.4byte	0x83
 1326 0284 FE010000 		.4byte	.LLST6
 1327 0288 0D       		.uleb128 0xd
 1328 0289 0E000000 		.4byte	.LVL31
 1329 028d B1050000 		.4byte	0x5b1
 1330 0291 0C       		.uleb128 0xc
 1331 0292 01       		.uleb128 0x1
 1332 0293 50       		.byte	0x50
 1333 0294 01       		.uleb128 0x1
 1334 0295 30       		.byte	0x30
ARM GAS  C:\Users\LAIR\AppData\Local\Temp\ccpuF2ic.s 			page 40


 1335 0296 00       		.byte	0
 1336 0297 00       		.byte	0
 1337 0298 11       		.uleb128 0x11
 1338 0299 80020000 		.4byte	.LASF38
 1339 029d 01       		.byte	0x1
 1340 029e 2502     		.2byte	0x225
 1341 02a0 00000000 		.4byte	.LFB9
 1342 02a4 10000000 		.4byte	.LFE9-.LFB9
 1343 02a8 01       		.uleb128 0x1
 1344 02a9 9C       		.byte	0x9c
 1345 02aa BF020000 		.4byte	0x2bf
 1346 02ae 15       		.uleb128 0x15
 1347 02af EE000000 		.4byte	.LASF39
 1348 02b3 01       		.byte	0x1
 1349 02b4 2502     		.2byte	0x225
 1350 02b6 83000000 		.4byte	0x83
 1351 02ba 1C020000 		.4byte	.LLST7
 1352 02be 00       		.byte	0
 1353 02bf 11       		.uleb128 0x11
 1354 02c0 FC020000 		.4byte	.LASF40
 1355 02c4 01       		.byte	0x1
 1356 02c5 5102     		.2byte	0x251
 1357 02c7 00000000 		.4byte	.LFB10
 1358 02cb 1C000000 		.4byte	.LFE10-.LFB10
 1359 02cf 01       		.uleb128 0x1
 1360 02d0 9C       		.byte	0x9c
 1361 02d1 E6020000 		.4byte	0x2e6
 1362 02d5 15       		.uleb128 0x15
 1363 02d6 AD010000 		.4byte	.LASF41
 1364 02da 01       		.byte	0x1
 1365 02db 5102     		.2byte	0x251
 1366 02dd 83000000 		.4byte	0x83
 1367 02e1 3D020000 		.4byte	.LLST8
 1368 02e5 00       		.byte	0
 1369 02e6 11       		.uleb128 0x11
 1370 02e7 B6010000 		.4byte	.LASF42
 1371 02eb 01       		.byte	0x1
 1372 02ec 6602     		.2byte	0x266
 1373 02ee 00000000 		.4byte	.LFB11
 1374 02f2 18000000 		.4byte	.LFE11-.LFB11
 1375 02f6 01       		.uleb128 0x1
 1376 02f7 9C       		.byte	0x9c
 1377 02f8 0D030000 		.4byte	0x30d
 1378 02fc 15       		.uleb128 0x15
 1379 02fd DE020000 		.4byte	.LASF43
 1380 0301 01       		.byte	0x1
 1381 0302 6602     		.2byte	0x266
 1382 0304 83000000 		.4byte	0x83
 1383 0308 5E020000 		.4byte	.LLST9
 1384 030c 00       		.byte	0
 1385 030d 11       		.uleb128 0x11
 1386 030e 07010000 		.4byte	.LASF44
 1387 0312 01       		.byte	0x1
 1388 0313 7E02     		.2byte	0x27e
 1389 0315 00000000 		.4byte	.LFB12
 1390 0319 10000000 		.4byte	.LFE12-.LFB12
 1391 031d 01       		.uleb128 0x1
ARM GAS  C:\Users\LAIR\AppData\Local\Temp\ccpuF2ic.s 			page 41


 1392 031e 9C       		.byte	0x9c
 1393 031f 34030000 		.4byte	0x334
 1394 0323 15       		.uleb128 0x15
 1395 0324 EE000000 		.4byte	.LASF39
 1396 0328 01       		.byte	0x1
 1397 0329 7E02     		.2byte	0x27e
 1398 032b 83000000 		.4byte	0x83
 1399 032f 7F020000 		.4byte	.LLST10
 1400 0333 00       		.byte	0
 1401 0334 11       		.uleb128 0x11
 1402 0335 3E010000 		.4byte	.LASF45
 1403 0339 01       		.byte	0x1
 1404 033a 9502     		.2byte	0x295
 1405 033c 00000000 		.4byte	.LFB13
 1406 0340 10000000 		.4byte	.LFE13-.LFB13
 1407 0344 01       		.uleb128 0x1
 1408 0345 9C       		.byte	0x9c
 1409 0346 5B030000 		.4byte	0x35b
 1410 034a 15       		.uleb128 0x15
 1411 034b EE000000 		.4byte	.LASF39
 1412 034f 01       		.byte	0x1
 1413 0350 9502     		.2byte	0x295
 1414 0352 83000000 		.4byte	0x83
 1415 0356 A0020000 		.4byte	.LLST11
 1416 035a 00       		.byte	0
 1417 035b 11       		.uleb128 0x11
 1418 035c B0030000 		.4byte	.LASF46
 1419 0360 01       		.byte	0x1
 1420 0361 B102     		.2byte	0x2b1
 1421 0363 00000000 		.4byte	.LFB14
 1422 0367 1C000000 		.4byte	.LFE14-.LFB14
 1423 036b 01       		.uleb128 0x1
 1424 036c 9C       		.byte	0x9c
 1425 036d A1030000 		.4byte	0x3a1
 1426 0371 15       		.uleb128 0x15
 1427 0372 64030000 		.4byte	.LASF36
 1428 0376 01       		.byte	0x1
 1429 0377 B102     		.2byte	0x2b1
 1430 0379 83000000 		.4byte	0x83
 1431 037d C1020000 		.4byte	.LLST12
 1432 0381 15       		.uleb128 0x15
 1433 0382 8E030000 		.4byte	.LASF47
 1434 0386 01       		.byte	0x1
 1435 0387 B102     		.2byte	0x2b1
 1436 0389 8F000000 		.4byte	0x8f
 1437 038d ED020000 		.4byte	.LLST13
 1438 0391 0D       		.uleb128 0xd
 1439 0392 10000000 		.4byte	.LVL49
 1440 0396 B1050000 		.4byte	0x5b1
 1441 039a 0C       		.uleb128 0xc
 1442 039b 01       		.uleb128 0x1
 1443 039c 50       		.byte	0x50
 1444 039d 01       		.uleb128 0x1
 1445 039e 30       		.byte	0x30
 1446 039f 00       		.byte	0
 1447 03a0 00       		.byte	0
 1448 03a1 11       		.uleb128 0x11
ARM GAS  C:\Users\LAIR\AppData\Local\Temp\ccpuF2ic.s 			page 42


 1449 03a2 BE030000 		.4byte	.LASF48
 1450 03a6 01       		.byte	0x1
 1451 03a7 D302     		.2byte	0x2d3
 1452 03a9 00000000 		.4byte	.LFB15
 1453 03ad 1C000000 		.4byte	.LFE15-.LFB15
 1454 03b1 01       		.uleb128 0x1
 1455 03b2 9C       		.byte	0x9c
 1456 03b3 E7030000 		.4byte	0x3e7
 1457 03b7 15       		.uleb128 0x15
 1458 03b8 64030000 		.4byte	.LASF36
 1459 03bc 01       		.byte	0x1
 1460 03bd D302     		.2byte	0x2d3
 1461 03bf 83000000 		.4byte	0x83
 1462 03c3 0E030000 		.4byte	.LLST14
 1463 03c7 15       		.uleb128 0x15
 1464 03c8 07000000 		.4byte	.LASF49
 1465 03cc 01       		.byte	0x1
 1466 03cd D302     		.2byte	0x2d3
 1467 03cf 9B000000 		.4byte	0x9b
 1468 03d3 3A030000 		.4byte	.LLST15
 1469 03d7 0D       		.uleb128 0xd
 1470 03d8 10000000 		.4byte	.LVL53
 1471 03dc B1050000 		.4byte	0x5b1
 1472 03e0 0C       		.uleb128 0xc
 1473 03e1 01       		.uleb128 0x1
 1474 03e2 50       		.byte	0x50
 1475 03e3 01       		.uleb128 0x1
 1476 03e4 30       		.byte	0x30
 1477 03e5 00       		.byte	0
 1478 03e6 00       		.byte	0
 1479 03e7 17       		.uleb128 0x17
 1480 03e8 E8020000 		.4byte	.LASF50
 1481 03ec 01       		.byte	0x1
 1482 03ed F402     		.2byte	0x2f4
 1483 03ef 8F000000 		.4byte	0x8f
 1484 03f3 00000000 		.4byte	.LFB16
 1485 03f7 5C000000 		.4byte	.LFE16-.LFB16
 1486 03fb 01       		.uleb128 0x1
 1487 03fc 9C       		.byte	0x9c
 1488 03fd 3F040000 		.4byte	0x43f
 1489 0401 15       		.uleb128 0x15
 1490 0402 64030000 		.4byte	.LASF36
 1491 0406 01       		.byte	0x1
 1492 0407 F402     		.2byte	0x2f4
 1493 0409 83000000 		.4byte	0x83
 1494 040d 6A030000 		.4byte	.LLST16
 1495 0411 15       		.uleb128 0x15
 1496 0412 95030000 		.4byte	.LASF51
 1497 0416 01       		.byte	0x1
 1498 0417 F402     		.2byte	0x2f4
 1499 0419 8F000000 		.4byte	0x8f
 1500 041d 96030000 		.4byte	.LLST17
 1501 0421 18       		.uleb128 0x18
 1502 0422 8F010000 		.4byte	.LASF52
 1503 0426 01       		.byte	0x1
 1504 0427 F602     		.2byte	0x2f6
 1505 0429 8F000000 		.4byte	0x8f
ARM GAS  C:\Users\LAIR\AppData\Local\Temp\ccpuF2ic.s 			page 43


 1506 042d 01       		.uleb128 0x1
 1507 042e 50       		.byte	0x50
 1508 042f 0D       		.uleb128 0xd
 1509 0430 10000000 		.4byte	.LVL58
 1510 0434 B1050000 		.4byte	0x5b1
 1511 0438 0C       		.uleb128 0xc
 1512 0439 01       		.uleb128 0x1
 1513 043a 50       		.byte	0x50
 1514 043b 01       		.uleb128 0x1
 1515 043c 30       		.byte	0x30
 1516 043d 00       		.byte	0
 1517 043e 00       		.byte	0
 1518 043f 17       		.uleb128 0x17
 1519 0440 A8000000 		.4byte	.LASF53
 1520 0444 01       		.byte	0x1
 1521 0445 2A03     		.2byte	0x32a
 1522 0447 9B000000 		.4byte	0x9b
 1523 044b 00000000 		.4byte	.LFB17
 1524 044f 40000000 		.4byte	.LFE17-.LFB17
 1525 0453 01       		.uleb128 0x1
 1526 0454 9C       		.byte	0x9c
 1527 0455 95040000 		.4byte	0x495
 1528 0459 15       		.uleb128 0x15
 1529 045a 64030000 		.4byte	.LASF36
 1530 045e 01       		.byte	0x1
 1531 045f 2A03     		.2byte	0x32a
 1532 0461 83000000 		.4byte	0x83
 1533 0465 CD030000 		.4byte	.LLST18
 1534 0469 15       		.uleb128 0x15
 1535 046a 95030000 		.4byte	.LASF51
 1536 046e 01       		.byte	0x1
 1537 046f 2A03     		.2byte	0x32a
 1538 0471 8F000000 		.4byte	0x8f
 1539 0475 F9030000 		.4byte	.LLST19
 1540 0479 19       		.uleb128 0x19
 1541 047a 25010000 		.4byte	.LASF65
 1542 047e 01       		.byte	0x1
 1543 047f 2C03     		.2byte	0x32c
 1544 0481 C1000000 		.4byte	0xc1
 1545 0485 0D       		.uleb128 0xd
 1546 0486 10000000 		.4byte	.LVL67
 1547 048a B1050000 		.4byte	0x5b1
 1548 048e 0C       		.uleb128 0xc
 1549 048f 01       		.uleb128 0x1
 1550 0490 50       		.byte	0x50
 1551 0491 01       		.uleb128 0x1
 1552 0492 30       		.byte	0x30
 1553 0493 00       		.byte	0
 1554 0494 00       		.byte	0
 1555 0495 17       		.uleb128 0x17
 1556 0496 16000000 		.4byte	.LASF54
 1557 049a 01       		.byte	0x1
 1558 049b 5703     		.2byte	0x357
 1559 049d A7000000 		.4byte	0xa7
 1560 04a1 00000000 		.4byte	.LFB18
 1561 04a5 48000000 		.4byte	.LFE18-.LFB18
 1562 04a9 01       		.uleb128 0x1
ARM GAS  C:\Users\LAIR\AppData\Local\Temp\ccpuF2ic.s 			page 44


 1563 04aa 9C       		.byte	0x9c
 1564 04ab ED040000 		.4byte	0x4ed
 1565 04af 15       		.uleb128 0x15
 1566 04b0 64030000 		.4byte	.LASF36
 1567 04b4 01       		.byte	0x1
 1568 04b5 5703     		.2byte	0x357
 1569 04b7 83000000 		.4byte	0x83
 1570 04bb 25040000 		.4byte	.LLST20
 1571 04bf 15       		.uleb128 0x15
 1572 04c0 95030000 		.4byte	.LASF51
 1573 04c4 01       		.byte	0x1
 1574 04c5 5703     		.2byte	0x357
 1575 04c7 8F000000 		.4byte	0x8f
 1576 04cb 51040000 		.4byte	.LLST21
 1577 04cf 18       		.uleb128 0x18
 1578 04d0 4D010000 		.4byte	.LASF55
 1579 04d4 01       		.byte	0x1
 1580 04d5 5903     		.2byte	0x359
 1581 04d7 A7000000 		.4byte	0xa7
 1582 04db 01       		.uleb128 0x1
 1583 04dc 50       		.byte	0x50
 1584 04dd 0D       		.uleb128 0xd
 1585 04de 10000000 		.4byte	.LVL74
 1586 04e2 B1050000 		.4byte	0x5b1
 1587 04e6 0C       		.uleb128 0xc
 1588 04e7 01       		.uleb128 0x1
 1589 04e8 50       		.byte	0x50
 1590 04e9 01       		.uleb128 0x1
 1591 04ea 30       		.byte	0x30
 1592 04eb 00       		.byte	0
 1593 04ec 00       		.byte	0
 1594 04ed 0E       		.uleb128 0xe
 1595 04ee 83000000 		.4byte	0x83
 1596 04f2 FD040000 		.4byte	0x4fd
 1597 04f6 0F       		.uleb128 0xf
 1598 04f7 F8000000 		.4byte	0xf8
 1599 04fb 03       		.byte	0x3
 1600 04fc 00       		.byte	0
 1601 04fd 0A       		.uleb128 0xa
 1602 04fe 7B030000 		.4byte	.LASF56
 1603 0502 01       		.byte	0x1
 1604 0503 21       		.byte	0x21
 1605 0504 0E050000 		.4byte	0x50e
 1606 0508 05       		.uleb128 0x5
 1607 0509 03       		.byte	0x3
 1608 050a 00000000 		.4byte	ADC_channelsConfig
 1609 050e 10       		.uleb128 0x10
 1610 050f ED040000 		.4byte	0x4ed
 1611 0513 1A       		.uleb128 0x1a
 1612 0514 F3000000 		.4byte	.LASF57
 1613 0518 01       		.byte	0x1
 1614 0519 18       		.byte	0x18
 1615 051a 6B000000 		.4byte	0x6b
 1616 051e 05       		.uleb128 0x5
 1617 051f 03       		.byte	0x3
 1618 0520 00000000 		.4byte	ADC_initVar
 1619 0524 0E       		.uleb128 0xe
ARM GAS  C:\Users\LAIR\AppData\Local\Temp\ccpuF2ic.s 			page 45


 1620 0525 8F000000 		.4byte	0x8f
 1621 0529 34050000 		.4byte	0x534
 1622 052d 0F       		.uleb128 0xf
 1623 052e F8000000 		.4byte	0xf8
 1624 0532 03       		.byte	0x3
 1625 0533 00       		.byte	0
 1626 0534 1A       		.uleb128 0x1a
 1627 0535 40030000 		.4byte	.LASF58
 1628 0539 01       		.byte	0x1
 1629 053a 19       		.byte	0x19
 1630 053b 45050000 		.4byte	0x545
 1631 053f 05       		.uleb128 0x5
 1632 0540 03       		.byte	0x3
 1633 0541 00000000 		.4byte	ADC_offset
 1634 0545 05       		.uleb128 0x5
 1635 0546 24050000 		.4byte	0x524
 1636 054a 0E       		.uleb128 0xe
 1637 054b 9B000000 		.4byte	0x9b
 1638 054f 5A050000 		.4byte	0x55a
 1639 0553 0F       		.uleb128 0xf
 1640 0554 F8000000 		.4byte	0xf8
 1641 0558 03       		.byte	0x3
 1642 0559 00       		.byte	0
 1643 055a 1A       		.uleb128 0x1a
 1644 055b BC000000 		.4byte	.LASF59
 1645 055f 01       		.byte	0x1
 1646 0560 1A       		.byte	0x1a
 1647 0561 6B050000 		.4byte	0x56b
 1648 0565 05       		.uleb128 0x5
 1649 0566 03       		.byte	0x3
 1650 0567 00000000 		.4byte	ADC_countsPer10Volt
 1651 056b 05       		.uleb128 0x5
 1652 056c 4A050000 		.4byte	0x54a
 1653 0570 1B       		.uleb128 0x1b
 1654 0571 6F020000 		.4byte	.LASF60
 1655 0575 03       		.byte	0x3
 1656 0576 BE       		.byte	0xbe
 1657 0577 86050000 		.4byte	0x586
 1658 057b 1C       		.uleb128 0x1c
 1659 057c 6B000000 		.4byte	0x6b
 1660 0580 1C       		.uleb128 0x1c
 1661 0581 6B000000 		.4byte	0x6b
 1662 0585 00       		.byte	0
 1663 0586 1D       		.uleb128 0x1d
 1664 0587 70010000 		.4byte	.LASF66
 1665 058b 03       		.byte	0x3
 1666 058c BB       		.byte	0xbb
 1667 058d E5000000 		.4byte	0xe5
 1668 0591 A0050000 		.4byte	0x5a0
 1669 0595 1C       		.uleb128 0x1c
 1670 0596 6B000000 		.4byte	0x6b
 1671 059a 1C       		.uleb128 0x1c
 1672 059b E5000000 		.4byte	0xe5
 1673 059f 00       		.byte	0
 1674 05a0 1B       		.uleb128 0x1b
 1675 05a1 D6000000 		.4byte	.LASF61
 1676 05a5 03       		.byte	0x3
ARM GAS  C:\Users\LAIR\AppData\Local\Temp\ccpuF2ic.s 			page 46


 1677 05a6 D8       		.byte	0xd8
 1678 05a7 B1050000 		.4byte	0x5b1
 1679 05ab 1C       		.uleb128 0x1c
 1680 05ac 77000000 		.4byte	0x77
 1681 05b0 00       		.byte	0
 1682 05b1 1E       		.uleb128 0x1e
 1683 05b2 0C030000 		.4byte	.LASF67
 1684 05b6 03       		.byte	0x3
 1685 05b7 E5       		.byte	0xe5
 1686 05b8 1C       		.uleb128 0x1c
 1687 05b9 6B000000 		.4byte	0x6b
 1688 05bd 00       		.byte	0
 1689 05be 00       		.byte	0
 1690              		.section	.debug_abbrev,"",%progbits
 1691              	.Ldebug_abbrev0:
 1692 0000 01       		.uleb128 0x1
 1693 0001 11       		.uleb128 0x11
 1694 0002 01       		.byte	0x1
 1695 0003 25       		.uleb128 0x25
 1696 0004 0E       		.uleb128 0xe
 1697 0005 13       		.uleb128 0x13
 1698 0006 0B       		.uleb128 0xb
 1699 0007 03       		.uleb128 0x3
 1700 0008 0E       		.uleb128 0xe
 1701 0009 1B       		.uleb128 0x1b
 1702 000a 0E       		.uleb128 0xe
 1703 000b 55       		.uleb128 0x55
 1704 000c 17       		.uleb128 0x17
 1705 000d 11       		.uleb128 0x11
 1706 000e 01       		.uleb128 0x1
 1707 000f 10       		.uleb128 0x10
 1708 0010 17       		.uleb128 0x17
 1709 0011 00       		.byte	0
 1710 0012 00       		.byte	0
 1711 0013 02       		.uleb128 0x2
 1712 0014 24       		.uleb128 0x24
 1713 0015 00       		.byte	0
 1714 0016 0B       		.uleb128 0xb
 1715 0017 0B       		.uleb128 0xb
 1716 0018 3E       		.uleb128 0x3e
 1717 0019 0B       		.uleb128 0xb
 1718 001a 03       		.uleb128 0x3
 1719 001b 0E       		.uleb128 0xe
 1720 001c 00       		.byte	0
 1721 001d 00       		.byte	0
 1722 001e 03       		.uleb128 0x3
 1723 001f 24       		.uleb128 0x24
 1724 0020 00       		.byte	0
 1725 0021 0B       		.uleb128 0xb
 1726 0022 0B       		.uleb128 0xb
 1727 0023 3E       		.uleb128 0x3e
 1728 0024 0B       		.uleb128 0xb
 1729 0025 03       		.uleb128 0x3
 1730 0026 08       		.uleb128 0x8
 1731 0027 00       		.byte	0
 1732 0028 00       		.byte	0
 1733 0029 04       		.uleb128 0x4
ARM GAS  C:\Users\LAIR\AppData\Local\Temp\ccpuF2ic.s 			page 47


 1734 002a 16       		.uleb128 0x16
 1735 002b 00       		.byte	0
 1736 002c 03       		.uleb128 0x3
 1737 002d 0E       		.uleb128 0xe
 1738 002e 3A       		.uleb128 0x3a
 1739 002f 0B       		.uleb128 0xb
 1740 0030 3B       		.uleb128 0x3b
 1741 0031 05       		.uleb128 0x5
 1742 0032 49       		.uleb128 0x49
 1743 0033 13       		.uleb128 0x13
 1744 0034 00       		.byte	0
 1745 0035 00       		.byte	0
 1746 0036 05       		.uleb128 0x5
 1747 0037 35       		.uleb128 0x35
 1748 0038 00       		.byte	0
 1749 0039 49       		.uleb128 0x49
 1750 003a 13       		.uleb128 0x13
 1751 003b 00       		.byte	0
 1752 003c 00       		.byte	0
 1753 003d 06       		.uleb128 0x6
 1754 003e 0F       		.uleb128 0xf
 1755 003f 00       		.byte	0
 1756 0040 0B       		.uleb128 0xb
 1757 0041 0B       		.uleb128 0xb
 1758 0042 49       		.uleb128 0x49
 1759 0043 13       		.uleb128 0x13
 1760 0044 00       		.byte	0
 1761 0045 00       		.byte	0
 1762 0046 07       		.uleb128 0x7
 1763 0047 15       		.uleb128 0x15
 1764 0048 00       		.byte	0
 1765 0049 27       		.uleb128 0x27
 1766 004a 19       		.uleb128 0x19
 1767 004b 00       		.byte	0
 1768 004c 00       		.byte	0
 1769 004d 08       		.uleb128 0x8
 1770 004e 2E       		.uleb128 0x2e
 1771 004f 01       		.byte	0x1
 1772 0050 3F       		.uleb128 0x3f
 1773 0051 19       		.uleb128 0x19
 1774 0052 03       		.uleb128 0x3
 1775 0053 0E       		.uleb128 0xe
 1776 0054 3A       		.uleb128 0x3a
 1777 0055 0B       		.uleb128 0xb
 1778 0056 3B       		.uleb128 0x3b
 1779 0057 0B       		.uleb128 0xb
 1780 0058 27       		.uleb128 0x27
 1781 0059 19       		.uleb128 0x19
 1782 005a 11       		.uleb128 0x11
 1783 005b 01       		.uleb128 0x1
 1784 005c 12       		.uleb128 0x12
 1785 005d 06       		.uleb128 0x6
 1786 005e 40       		.uleb128 0x40
 1787 005f 18       		.uleb128 0x18
 1788 0060 9742     		.uleb128 0x2117
 1789 0062 19       		.uleb128 0x19
 1790 0063 01       		.uleb128 0x1
ARM GAS  C:\Users\LAIR\AppData\Local\Temp\ccpuF2ic.s 			page 48


 1791 0064 13       		.uleb128 0x13
 1792 0065 00       		.byte	0
 1793 0066 00       		.byte	0
 1794 0067 09       		.uleb128 0x9
 1795 0068 34       		.uleb128 0x34
 1796 0069 00       		.byte	0
 1797 006a 03       		.uleb128 0x3
 1798 006b 0E       		.uleb128 0xe
 1799 006c 3A       		.uleb128 0x3a
 1800 006d 0B       		.uleb128 0xb
 1801 006e 3B       		.uleb128 0x3b
 1802 006f 0B       		.uleb128 0xb
 1803 0070 49       		.uleb128 0x49
 1804 0071 13       		.uleb128 0x13
 1805 0072 02       		.uleb128 0x2
 1806 0073 17       		.uleb128 0x17
 1807 0074 00       		.byte	0
 1808 0075 00       		.byte	0
 1809 0076 0A       		.uleb128 0xa
 1810 0077 34       		.uleb128 0x34
 1811 0078 00       		.byte	0
 1812 0079 03       		.uleb128 0x3
 1813 007a 0E       		.uleb128 0xe
 1814 007b 3A       		.uleb128 0x3a
 1815 007c 0B       		.uleb128 0xb
 1816 007d 3B       		.uleb128 0x3b
 1817 007e 0B       		.uleb128 0xb
 1818 007f 49       		.uleb128 0x49
 1819 0080 13       		.uleb128 0x13
 1820 0081 02       		.uleb128 0x2
 1821 0082 18       		.uleb128 0x18
 1822 0083 00       		.byte	0
 1823 0084 00       		.byte	0
 1824 0085 0B       		.uleb128 0xb
 1825 0086 898201   		.uleb128 0x4109
 1826 0089 01       		.byte	0x1
 1827 008a 11       		.uleb128 0x11
 1828 008b 01       		.uleb128 0x1
 1829 008c 31       		.uleb128 0x31
 1830 008d 13       		.uleb128 0x13
 1831 008e 01       		.uleb128 0x1
 1832 008f 13       		.uleb128 0x13
 1833 0090 00       		.byte	0
 1834 0091 00       		.byte	0
 1835 0092 0C       		.uleb128 0xc
 1836 0093 8A8201   		.uleb128 0x410a
 1837 0096 00       		.byte	0
 1838 0097 02       		.uleb128 0x2
 1839 0098 18       		.uleb128 0x18
 1840 0099 9142     		.uleb128 0x2111
 1841 009b 18       		.uleb128 0x18
 1842 009c 00       		.byte	0
 1843 009d 00       		.byte	0
 1844 009e 0D       		.uleb128 0xd
 1845 009f 898201   		.uleb128 0x4109
 1846 00a2 01       		.byte	0x1
 1847 00a3 11       		.uleb128 0x11
ARM GAS  C:\Users\LAIR\AppData\Local\Temp\ccpuF2ic.s 			page 49


 1848 00a4 01       		.uleb128 0x1
 1849 00a5 31       		.uleb128 0x31
 1850 00a6 13       		.uleb128 0x13
 1851 00a7 00       		.byte	0
 1852 00a8 00       		.byte	0
 1853 00a9 0E       		.uleb128 0xe
 1854 00aa 01       		.uleb128 0x1
 1855 00ab 01       		.byte	0x1
 1856 00ac 49       		.uleb128 0x49
 1857 00ad 13       		.uleb128 0x13
 1858 00ae 01       		.uleb128 0x1
 1859 00af 13       		.uleb128 0x13
 1860 00b0 00       		.byte	0
 1861 00b1 00       		.byte	0
 1862 00b2 0F       		.uleb128 0xf
 1863 00b3 21       		.uleb128 0x21
 1864 00b4 00       		.byte	0
 1865 00b5 49       		.uleb128 0x49
 1866 00b6 13       		.uleb128 0x13
 1867 00b7 2F       		.uleb128 0x2f
 1868 00b8 0B       		.uleb128 0xb
 1869 00b9 00       		.byte	0
 1870 00ba 00       		.byte	0
 1871 00bb 10       		.uleb128 0x10
 1872 00bc 26       		.uleb128 0x26
 1873 00bd 00       		.byte	0
 1874 00be 49       		.uleb128 0x49
 1875 00bf 13       		.uleb128 0x13
 1876 00c0 00       		.byte	0
 1877 00c1 00       		.byte	0
 1878 00c2 11       		.uleb128 0x11
 1879 00c3 2E       		.uleb128 0x2e
 1880 00c4 01       		.byte	0x1
 1881 00c5 3F       		.uleb128 0x3f
 1882 00c6 19       		.uleb128 0x19
 1883 00c7 03       		.uleb128 0x3
 1884 00c8 0E       		.uleb128 0xe
 1885 00c9 3A       		.uleb128 0x3a
 1886 00ca 0B       		.uleb128 0xb
 1887 00cb 3B       		.uleb128 0x3b
 1888 00cc 05       		.uleb128 0x5
 1889 00cd 27       		.uleb128 0x27
 1890 00ce 19       		.uleb128 0x19
 1891 00cf 11       		.uleb128 0x11
 1892 00d0 01       		.uleb128 0x1
 1893 00d1 12       		.uleb128 0x12
 1894 00d2 06       		.uleb128 0x6
 1895 00d3 40       		.uleb128 0x40
 1896 00d4 18       		.uleb128 0x18
 1897 00d5 9742     		.uleb128 0x2117
 1898 00d7 19       		.uleb128 0x19
 1899 00d8 01       		.uleb128 0x1
 1900 00d9 13       		.uleb128 0x13
 1901 00da 00       		.byte	0
 1902 00db 00       		.byte	0
 1903 00dc 12       		.uleb128 0x12
 1904 00dd 898201   		.uleb128 0x4109
ARM GAS  C:\Users\LAIR\AppData\Local\Temp\ccpuF2ic.s 			page 50


 1905 00e0 00       		.byte	0
 1906 00e1 11       		.uleb128 0x11
 1907 00e2 01       		.uleb128 0x1
 1908 00e3 31       		.uleb128 0x31
 1909 00e4 13       		.uleb128 0x13
 1910 00e5 00       		.byte	0
 1911 00e6 00       		.byte	0
 1912 00e7 13       		.uleb128 0x13
 1913 00e8 2E       		.uleb128 0x2e
 1914 00e9 00       		.byte	0
 1915 00ea 3F       		.uleb128 0x3f
 1916 00eb 19       		.uleb128 0x19
 1917 00ec 03       		.uleb128 0x3
 1918 00ed 0E       		.uleb128 0xe
 1919 00ee 3A       		.uleb128 0x3a
 1920 00ef 0B       		.uleb128 0xb
 1921 00f0 3B       		.uleb128 0x3b
 1922 00f1 05       		.uleb128 0x5
 1923 00f2 27       		.uleb128 0x27
 1924 00f3 19       		.uleb128 0x19
 1925 00f4 11       		.uleb128 0x11
 1926 00f5 01       		.uleb128 0x1
 1927 00f6 12       		.uleb128 0x12
 1928 00f7 06       		.uleb128 0x6
 1929 00f8 40       		.uleb128 0x40
 1930 00f9 18       		.uleb128 0x18
 1931 00fa 9742     		.uleb128 0x2117
 1932 00fc 19       		.uleb128 0x19
 1933 00fd 00       		.byte	0
 1934 00fe 00       		.byte	0
 1935 00ff 14       		.uleb128 0x14
 1936 0100 2E       		.uleb128 0x2e
 1937 0101 01       		.byte	0x1
 1938 0102 3F       		.uleb128 0x3f
 1939 0103 19       		.uleb128 0x19
 1940 0104 03       		.uleb128 0x3
 1941 0105 0E       		.uleb128 0xe
 1942 0106 3A       		.uleb128 0x3a
 1943 0107 0B       		.uleb128 0xb
 1944 0108 3B       		.uleb128 0x3b
 1945 0109 05       		.uleb128 0x5
 1946 010a 27       		.uleb128 0x27
 1947 010b 19       		.uleb128 0x19
 1948 010c 49       		.uleb128 0x49
 1949 010d 13       		.uleb128 0x13
 1950 010e 11       		.uleb128 0x11
 1951 010f 01       		.uleb128 0x1
 1952 0110 12       		.uleb128 0x12
 1953 0111 06       		.uleb128 0x6
 1954 0112 40       		.uleb128 0x40
 1955 0113 18       		.uleb128 0x18
 1956 0114 9742     		.uleb128 0x2117
 1957 0116 19       		.uleb128 0x19
 1958 0117 01       		.uleb128 0x1
 1959 0118 13       		.uleb128 0x13
 1960 0119 00       		.byte	0
 1961 011a 00       		.byte	0
ARM GAS  C:\Users\LAIR\AppData\Local\Temp\ccpuF2ic.s 			page 51


 1962 011b 15       		.uleb128 0x15
 1963 011c 05       		.uleb128 0x5
 1964 011d 00       		.byte	0
 1965 011e 03       		.uleb128 0x3
 1966 011f 0E       		.uleb128 0xe
 1967 0120 3A       		.uleb128 0x3a
 1968 0121 0B       		.uleb128 0xb
 1969 0122 3B       		.uleb128 0x3b
 1970 0123 05       		.uleb128 0x5
 1971 0124 49       		.uleb128 0x49
 1972 0125 13       		.uleb128 0x13
 1973 0126 02       		.uleb128 0x2
 1974 0127 17       		.uleb128 0x17
 1975 0128 00       		.byte	0
 1976 0129 00       		.byte	0
 1977 012a 16       		.uleb128 0x16
 1978 012b 34       		.uleb128 0x34
 1979 012c 00       		.byte	0
 1980 012d 03       		.uleb128 0x3
 1981 012e 0E       		.uleb128 0xe
 1982 012f 3A       		.uleb128 0x3a
 1983 0130 0B       		.uleb128 0xb
 1984 0131 3B       		.uleb128 0x3b
 1985 0132 05       		.uleb128 0x5
 1986 0133 49       		.uleb128 0x49
 1987 0134 13       		.uleb128 0x13
 1988 0135 02       		.uleb128 0x2
 1989 0136 17       		.uleb128 0x17
 1990 0137 00       		.byte	0
 1991 0138 00       		.byte	0
 1992 0139 17       		.uleb128 0x17
 1993 013a 2E       		.uleb128 0x2e
 1994 013b 01       		.byte	0x1
 1995 013c 3F       		.uleb128 0x3f
 1996 013d 19       		.uleb128 0x19
 1997 013e 03       		.uleb128 0x3
 1998 013f 0E       		.uleb128 0xe
 1999 0140 3A       		.uleb128 0x3a
 2000 0141 0B       		.uleb128 0xb
 2001 0142 3B       		.uleb128 0x3b
 2002 0143 05       		.uleb128 0x5
 2003 0144 27       		.uleb128 0x27
 2004 0145 19       		.uleb128 0x19
 2005 0146 49       		.uleb128 0x49
 2006 0147 13       		.uleb128 0x13
 2007 0148 11       		.uleb128 0x11
 2008 0149 01       		.uleb128 0x1
 2009 014a 12       		.uleb128 0x12
 2010 014b 06       		.uleb128 0x6
 2011 014c 40       		.uleb128 0x40
 2012 014d 18       		.uleb128 0x18
 2013 014e 9642     		.uleb128 0x2116
 2014 0150 19       		.uleb128 0x19
 2015 0151 01       		.uleb128 0x1
 2016 0152 13       		.uleb128 0x13
 2017 0153 00       		.byte	0
 2018 0154 00       		.byte	0
ARM GAS  C:\Users\LAIR\AppData\Local\Temp\ccpuF2ic.s 			page 52


 2019 0155 18       		.uleb128 0x18
 2020 0156 34       		.uleb128 0x34
 2021 0157 00       		.byte	0
 2022 0158 03       		.uleb128 0x3
 2023 0159 0E       		.uleb128 0xe
 2024 015a 3A       		.uleb128 0x3a
 2025 015b 0B       		.uleb128 0xb
 2026 015c 3B       		.uleb128 0x3b
 2027 015d 05       		.uleb128 0x5
 2028 015e 49       		.uleb128 0x49
 2029 015f 13       		.uleb128 0x13
 2030 0160 02       		.uleb128 0x2
 2031 0161 18       		.uleb128 0x18
 2032 0162 00       		.byte	0
 2033 0163 00       		.byte	0
 2034 0164 19       		.uleb128 0x19
 2035 0165 34       		.uleb128 0x34
 2036 0166 00       		.byte	0
 2037 0167 03       		.uleb128 0x3
 2038 0168 0E       		.uleb128 0xe
 2039 0169 3A       		.uleb128 0x3a
 2040 016a 0B       		.uleb128 0xb
 2041 016b 3B       		.uleb128 0x3b
 2042 016c 05       		.uleb128 0x5
 2043 016d 49       		.uleb128 0x49
 2044 016e 13       		.uleb128 0x13
 2045 016f 00       		.byte	0
 2046 0170 00       		.byte	0
 2047 0171 1A       		.uleb128 0x1a
 2048 0172 34       		.uleb128 0x34
 2049 0173 00       		.byte	0
 2050 0174 03       		.uleb128 0x3
 2051 0175 0E       		.uleb128 0xe
 2052 0176 3A       		.uleb128 0x3a
 2053 0177 0B       		.uleb128 0xb
 2054 0178 3B       		.uleb128 0x3b
 2055 0179 0B       		.uleb128 0xb
 2056 017a 49       		.uleb128 0x49
 2057 017b 13       		.uleb128 0x13
 2058 017c 3F       		.uleb128 0x3f
 2059 017d 19       		.uleb128 0x19
 2060 017e 02       		.uleb128 0x2
 2061 017f 18       		.uleb128 0x18
 2062 0180 00       		.byte	0
 2063 0181 00       		.byte	0
 2064 0182 1B       		.uleb128 0x1b
 2065 0183 2E       		.uleb128 0x2e
 2066 0184 01       		.byte	0x1
 2067 0185 3F       		.uleb128 0x3f
 2068 0186 19       		.uleb128 0x19
 2069 0187 03       		.uleb128 0x3
 2070 0188 0E       		.uleb128 0xe
 2071 0189 3A       		.uleb128 0x3a
 2072 018a 0B       		.uleb128 0xb
 2073 018b 3B       		.uleb128 0x3b
 2074 018c 0B       		.uleb128 0xb
 2075 018d 27       		.uleb128 0x27
ARM GAS  C:\Users\LAIR\AppData\Local\Temp\ccpuF2ic.s 			page 53


 2076 018e 19       		.uleb128 0x19
 2077 018f 3C       		.uleb128 0x3c
 2078 0190 19       		.uleb128 0x19
 2079 0191 01       		.uleb128 0x1
 2080 0192 13       		.uleb128 0x13
 2081 0193 00       		.byte	0
 2082 0194 00       		.byte	0
 2083 0195 1C       		.uleb128 0x1c
 2084 0196 05       		.uleb128 0x5
 2085 0197 00       		.byte	0
 2086 0198 49       		.uleb128 0x49
 2087 0199 13       		.uleb128 0x13
 2088 019a 00       		.byte	0
 2089 019b 00       		.byte	0
 2090 019c 1D       		.uleb128 0x1d
 2091 019d 2E       		.uleb128 0x2e
 2092 019e 01       		.byte	0x1
 2093 019f 3F       		.uleb128 0x3f
 2094 01a0 19       		.uleb128 0x19
 2095 01a1 03       		.uleb128 0x3
 2096 01a2 0E       		.uleb128 0xe
 2097 01a3 3A       		.uleb128 0x3a
 2098 01a4 0B       		.uleb128 0xb
 2099 01a5 3B       		.uleb128 0x3b
 2100 01a6 0B       		.uleb128 0xb
 2101 01a7 27       		.uleb128 0x27
 2102 01a8 19       		.uleb128 0x19
 2103 01a9 49       		.uleb128 0x49
 2104 01aa 13       		.uleb128 0x13
 2105 01ab 3C       		.uleb128 0x3c
 2106 01ac 19       		.uleb128 0x19
 2107 01ad 01       		.uleb128 0x1
 2108 01ae 13       		.uleb128 0x13
 2109 01af 00       		.byte	0
 2110 01b0 00       		.byte	0
 2111 01b1 1E       		.uleb128 0x1e
 2112 01b2 2E       		.uleb128 0x2e
 2113 01b3 01       		.byte	0x1
 2114 01b4 3F       		.uleb128 0x3f
 2115 01b5 19       		.uleb128 0x19
 2116 01b6 03       		.uleb128 0x3
 2117 01b7 0E       		.uleb128 0xe
 2118 01b8 3A       		.uleb128 0x3a
 2119 01b9 0B       		.uleb128 0xb
 2120 01ba 3B       		.uleb128 0x3b
 2121 01bb 0B       		.uleb128 0xb
 2122 01bc 27       		.uleb128 0x27
 2123 01bd 19       		.uleb128 0x19
 2124 01be 3C       		.uleb128 0x3c
 2125 01bf 19       		.uleb128 0x19
 2126 01c0 00       		.byte	0
 2127 01c1 00       		.byte	0
 2128 01c2 00       		.byte	0
 2129              		.section	.debug_loc,"",%progbits
 2130              	.Ldebug_loc0:
 2131              	.LLST0:
 2132 0000 7C000000 		.4byte	.LVL5
ARM GAS  C:\Users\LAIR\AppData\Local\Temp\ccpuF2ic.s 			page 54


 2133 0004 80000000 		.4byte	.LVL6
 2134 0008 0200     		.2byte	0x2
 2135 000a 30       		.byte	0x30
 2136 000b 9F       		.byte	0x9f
 2137 000c 80000000 		.4byte	.LVL6
 2138 0010 84010000 		.4byte	.LFE2
 2139 0014 0100     		.2byte	0x1
 2140 0016 52       		.byte	0x52
 2141 0017 00000000 		.4byte	0
 2142 001b 00000000 		.4byte	0
 2143              	.LLST1:
 2144 001f 70000000 		.4byte	.LVL2
 2145 0023 76000000 		.4byte	.LVL3
 2146 0027 0700     		.2byte	0x7
 2147 0029 71       		.byte	0x71
 2148 002a 00       		.sleb128 0
 2149 002b 40       		.byte	0x40
 2150 002c 49       		.byte	0x49
 2151 002d 24       		.byte	0x24
 2152 002e 21       		.byte	0x21
 2153 002f 9F       		.byte	0x9f
 2154 0030 7A000000 		.4byte	.LVL4
 2155 0034 80000000 		.4byte	.LVL6
 2156 0038 0100     		.2byte	0x1
 2157 003a 53       		.byte	0x53
 2158 003b 8C000000 		.4byte	.LVL7
 2159 003f 9E000000 		.4byte	.LVL9
 2160 0043 0100     		.2byte	0x1
 2161 0045 53       		.byte	0x53
 2162 0046 9E000000 		.4byte	.LVL9
 2163 004a A4000000 		.4byte	.LVL10
 2164 004e 0200     		.2byte	0x2
 2165 0050 71       		.byte	0x71
 2166 0051 00       		.sleb128 0
 2167 0052 A4000000 		.4byte	.LVL10
 2168 0056 B0000000 		.4byte	.LVL11
 2169 005a 0700     		.2byte	0x7
 2170 005c 72       		.byte	0x72
 2171 005d 00       		.sleb128 0
 2172 005e 32       		.byte	0x32
 2173 005f 24       		.byte	0x24
 2174 0060 7C       		.byte	0x7c
 2175 0061 00       		.sleb128 0
 2176 0062 22       		.byte	0x22
 2177 0063 B0000000 		.4byte	.LVL11
 2178 0067 B4000000 		.4byte	.LVL12
 2179 006b 1E00     		.2byte	0x1e
 2180 006d 72       		.byte	0x72
 2181 006e 00       		.sleb128 0
 2182 006f 32       		.byte	0x32
 2183 0070 24       		.byte	0x24
 2184 0071 03       		.byte	0x3
 2185 0072 00000000 		.4byte	.LANCHOR0
 2186 0076 22       		.byte	0x22
 2187 0077 06       		.byte	0x6
 2188 0078 0A       		.byte	0xa
 2189 0079 0037     		.2byte	0x3700
ARM GAS  C:\Users\LAIR\AppData\Local\Temp\ccpuF2ic.s 			page 55


 2190 007b 1A       		.byte	0x1a
 2191 007c 72       		.byte	0x72
 2192 007d 00       		.sleb128 0
 2193 007e 03       		.byte	0x3
 2194 007f 10000000 		.4byte	.LANCHOR0+16
 2195 0083 22       		.byte	0x22
 2196 0084 94       		.byte	0x94
 2197 0085 01       		.byte	0x1
 2198 0086 08       		.byte	0x8
 2199 0087 FF       		.byte	0xff
 2200 0088 1A       		.byte	0x1a
 2201 0089 21       		.byte	0x21
 2202 008a 9F       		.byte	0x9f
 2203 008b B4000000 		.4byte	.LVL12
 2204 008f C0000000 		.4byte	.LVL13
 2205 0093 1A00     		.2byte	0x1a
 2206 0095 72       		.byte	0x72
 2207 0096 00       		.sleb128 0
 2208 0097 32       		.byte	0x32
 2209 0098 24       		.byte	0x24
 2210 0099 71       		.byte	0x71
 2211 009a 00       		.sleb128 0
 2212 009b 22       		.byte	0x22
 2213 009c 06       		.byte	0x6
 2214 009d 0A       		.byte	0xa
 2215 009e 0037     		.2byte	0x3700
 2216 00a0 1A       		.byte	0x1a
 2217 00a1 71       		.byte	0x71
 2218 00a2 00       		.sleb128 0
 2219 00a3 72       		.byte	0x72
 2220 00a4 00       		.sleb128 0
 2221 00a5 22       		.byte	0x22
 2222 00a6 23       		.byte	0x23
 2223 00a7 10       		.uleb128 0x10
 2224 00a8 94       		.byte	0x94
 2225 00a9 01       		.byte	0x1
 2226 00aa 08       		.byte	0x8
 2227 00ab FF       		.byte	0xff
 2228 00ac 1A       		.byte	0x1a
 2229 00ad 21       		.byte	0x21
 2230 00ae 9F       		.byte	0x9f
 2231 00af C0000000 		.4byte	.LVL13
 2232 00b3 D0000000 		.4byte	.LVL14
 2233 00b7 1E00     		.2byte	0x1e
 2234 00b9 72       		.byte	0x72
 2235 00ba 00       		.sleb128 0
 2236 00bb 32       		.byte	0x32
 2237 00bc 24       		.byte	0x24
 2238 00bd 03       		.byte	0x3
 2239 00be 00000000 		.4byte	.LANCHOR0
 2240 00c2 22       		.byte	0x22
 2241 00c3 06       		.byte	0x6
 2242 00c4 0A       		.byte	0xa
 2243 00c5 0037     		.2byte	0x3700
 2244 00c7 1A       		.byte	0x1a
 2245 00c8 72       		.byte	0x72
 2246 00c9 00       		.sleb128 0
ARM GAS  C:\Users\LAIR\AppData\Local\Temp\ccpuF2ic.s 			page 56


 2247 00ca 03       		.byte	0x3
 2248 00cb 10000000 		.4byte	.LANCHOR0+16
 2249 00cf 22       		.byte	0x22
 2250 00d0 94       		.byte	0x94
 2251 00d1 01       		.byte	0x1
 2252 00d2 08       		.byte	0x8
 2253 00d3 FF       		.byte	0xff
 2254 00d4 1A       		.byte	0x1a
 2255 00d5 21       		.byte	0x21
 2256 00d6 9F       		.byte	0x9f
 2257 00d7 D0000000 		.4byte	.LVL14
 2258 00db D2000000 		.4byte	.LVL15
 2259 00df 1A00     		.2byte	0x1a
 2260 00e1 72       		.byte	0x72
 2261 00e2 00       		.sleb128 0
 2262 00e3 32       		.byte	0x32
 2263 00e4 24       		.byte	0x24
 2264 00e5 71       		.byte	0x71
 2265 00e6 00       		.sleb128 0
 2266 00e7 22       		.byte	0x22
 2267 00e8 06       		.byte	0x6
 2268 00e9 0A       		.byte	0xa
 2269 00ea 0037     		.2byte	0x3700
 2270 00ec 1A       		.byte	0x1a
 2271 00ed 71       		.byte	0x71
 2272 00ee 00       		.sleb128 0
 2273 00ef 72       		.byte	0x72
 2274 00f0 00       		.sleb128 0
 2275 00f1 22       		.byte	0x22
 2276 00f2 23       		.byte	0x23
 2277 00f3 10       		.uleb128 0x10
 2278 00f4 94       		.byte	0x94
 2279 00f5 01       		.byte	0x1
 2280 00f6 08       		.byte	0x8
 2281 00f7 FF       		.byte	0xff
 2282 00f8 1A       		.byte	0x1a
 2283 00f9 21       		.byte	0x21
 2284 00fa 9F       		.byte	0x9f
 2285 00fb D2000000 		.4byte	.LVL15
 2286 00ff 14010000 		.4byte	.LVL18
 2287 0103 1E00     		.2byte	0x1e
 2288 0105 72       		.byte	0x72
 2289 0106 00       		.sleb128 0
 2290 0107 32       		.byte	0x32
 2291 0108 24       		.byte	0x24
 2292 0109 03       		.byte	0x3
 2293 010a 00000000 		.4byte	.LANCHOR0
 2294 010e 22       		.byte	0x22
 2295 010f 06       		.byte	0x6
 2296 0110 0A       		.byte	0xa
 2297 0111 0037     		.2byte	0x3700
 2298 0113 1A       		.byte	0x1a
 2299 0114 72       		.byte	0x72
 2300 0115 00       		.sleb128 0
 2301 0116 03       		.byte	0x3
 2302 0117 10000000 		.4byte	.LANCHOR0+16
 2303 011b 22       		.byte	0x22
ARM GAS  C:\Users\LAIR\AppData\Local\Temp\ccpuF2ic.s 			page 57


 2304 011c 94       		.byte	0x94
 2305 011d 01       		.byte	0x1
 2306 011e 08       		.byte	0x8
 2307 011f FF       		.byte	0xff
 2308 0120 1A       		.byte	0x1a
 2309 0121 21       		.byte	0x21
 2310 0122 9F       		.byte	0x9f
 2311 0123 00000000 		.4byte	0
 2312 0127 00000000 		.4byte	0
 2313              	.LLST2:
 2314 012b E0000000 		.4byte	.LVL16
 2315 012f 0E010000 		.4byte	.LVL17
 2316 0133 0100     		.2byte	0x1
 2317 0135 50       		.byte	0x50
 2318 0136 00000000 		.4byte	0
 2319 013a 00000000 		.4byte	0
 2320              	.LLST3:
 2321 013e 00000000 		.4byte	.LVL22
 2322 0142 06000000 		.4byte	.LVL24
 2323 0146 0100     		.2byte	0x1
 2324 0148 50       		.byte	0x50
 2325 0149 06000000 		.4byte	.LVL24
 2326 014d 1A000000 		.4byte	.LVL26
 2327 0151 0100     		.2byte	0x1
 2328 0153 52       		.byte	0x52
 2329 0154 1A000000 		.4byte	.LVL26
 2330 0158 20000000 		.4byte	.LVL27
 2331 015c 0400     		.2byte	0x4
 2332 015e F3       		.byte	0xf3
 2333 015f 01       		.uleb128 0x1
 2334 0160 50       		.byte	0x50
 2335 0161 9F       		.byte	0x9f
 2336 0162 20000000 		.4byte	.LVL27
 2337 0166 22000000 		.4byte	.LVL28
 2338 016a 0100     		.2byte	0x1
 2339 016c 50       		.byte	0x50
 2340 016d 22000000 		.4byte	.LVL28
 2341 0171 28000000 		.4byte	.LFE7
 2342 0175 0400     		.2byte	0x4
 2343 0177 F3       		.byte	0xf3
 2344 0178 01       		.uleb128 0x1
 2345 0179 50       		.byte	0x50
 2346 017a 9F       		.byte	0x9f
 2347 017b 00000000 		.4byte	0
 2348 017f 00000000 		.4byte	0
 2349              	.LLST4:
 2350 0183 02000000 		.4byte	.LVL23
 2351 0187 06000000 		.4byte	.LVL24
 2352 018b 0200     		.2byte	0x2
 2353 018d 30       		.byte	0x30
 2354 018e 9F       		.byte	0x9f
 2355 018f 0E000000 		.4byte	.LVL25
 2356 0193 20000000 		.4byte	.LVL27
 2357 0197 0100     		.2byte	0x1
 2358 0199 50       		.byte	0x50
 2359 019a 20000000 		.4byte	.LVL27
 2360 019e 22000000 		.4byte	.LVL28
ARM GAS  C:\Users\LAIR\AppData\Local\Temp\ccpuF2ic.s 			page 58


 2361 01a2 0200     		.2byte	0x2
 2362 01a4 30       		.byte	0x30
 2363 01a5 9F       		.byte	0x9f
 2364 01a6 22000000 		.4byte	.LVL28
 2365 01aa 28000000 		.4byte	.LFE7
 2366 01ae 0100     		.2byte	0x1
 2367 01b0 50       		.byte	0x50
 2368 01b1 00000000 		.4byte	0
 2369 01b5 00000000 		.4byte	0
 2370              	.LLST5:
 2371 01b9 00000000 		.4byte	.LVL29
 2372 01bd 0A000000 		.4byte	.LVL30
 2373 01c1 0100     		.2byte	0x1
 2374 01c3 50       		.byte	0x50
 2375 01c4 0A000000 		.4byte	.LVL30
 2376 01c8 14000000 		.4byte	.LVL32
 2377 01cc 0100     		.2byte	0x1
 2378 01ce 54       		.byte	0x54
 2379 01cf 14000000 		.4byte	.LVL32
 2380 01d3 22000000 		.4byte	.LVL34
 2381 01d7 0400     		.2byte	0x4
 2382 01d9 F3       		.byte	0xf3
 2383 01da 01       		.uleb128 0x1
 2384 01db 50       		.byte	0x50
 2385 01dc 9F       		.byte	0x9f
 2386 01dd 22000000 		.4byte	.LVL34
 2387 01e1 24000000 		.4byte	.LVL35
 2388 01e5 0100     		.2byte	0x1
 2389 01e7 54       		.byte	0x54
 2390 01e8 24000000 		.4byte	.LVL35
 2391 01ec 2C000000 		.4byte	.LFE8
 2392 01f0 0400     		.2byte	0x4
 2393 01f2 F3       		.byte	0xf3
 2394 01f3 01       		.uleb128 0x1
 2395 01f4 50       		.byte	0x50
 2396 01f5 9F       		.byte	0x9f
 2397 01f6 00000000 		.4byte	0
 2398 01fa 00000000 		.4byte	0
 2399              	.LLST6:
 2400 01fe 20000000 		.4byte	.LVL33
 2401 0202 22000000 		.4byte	.LVL34
 2402 0206 0100     		.2byte	0x1
 2403 0208 50       		.byte	0x50
 2404 0209 24000000 		.4byte	.LVL35
 2405 020d 26000000 		.4byte	.LVL36
 2406 0211 0100     		.2byte	0x1
 2407 0213 50       		.byte	0x50
 2408 0214 00000000 		.4byte	0
 2409 0218 00000000 		.4byte	0
 2410              	.LLST7:
 2411 021c 00000000 		.4byte	.LVL37
 2412 0220 04000000 		.4byte	.LVL38
 2413 0224 0100     		.2byte	0x1
 2414 0226 50       		.byte	0x50
 2415 0227 04000000 		.4byte	.LVL38
 2416 022b 10000000 		.4byte	.LFE9
 2417 022f 0400     		.2byte	0x4
ARM GAS  C:\Users\LAIR\AppData\Local\Temp\ccpuF2ic.s 			page 59


 2418 0231 F3       		.byte	0xf3
 2419 0232 01       		.uleb128 0x1
 2420 0233 50       		.byte	0x50
 2421 0234 9F       		.byte	0x9f
 2422 0235 00000000 		.4byte	0
 2423 0239 00000000 		.4byte	0
 2424              	.LLST8:
 2425 023d 00000000 		.4byte	.LVL39
 2426 0241 0E000000 		.4byte	.LVL40
 2427 0245 0100     		.2byte	0x1
 2428 0247 50       		.byte	0x50
 2429 0248 0E000000 		.4byte	.LVL40
 2430 024c 1C000000 		.4byte	.LFE10
 2431 0250 0400     		.2byte	0x4
 2432 0252 F3       		.byte	0xf3
 2433 0253 01       		.uleb128 0x1
 2434 0254 50       		.byte	0x50
 2435 0255 9F       		.byte	0x9f
 2436 0256 00000000 		.4byte	0
 2437 025a 00000000 		.4byte	0
 2438              	.LLST9:
 2439 025e 00000000 		.4byte	.LVL41
 2440 0262 0E000000 		.4byte	.LVL42
 2441 0266 0100     		.2byte	0x1
 2442 0268 50       		.byte	0x50
 2443 0269 0E000000 		.4byte	.LVL42
 2444 026d 18000000 		.4byte	.LFE11
 2445 0271 0400     		.2byte	0x4
 2446 0273 F3       		.byte	0xf3
 2447 0274 01       		.uleb128 0x1
 2448 0275 50       		.byte	0x50
 2449 0276 9F       		.byte	0x9f
 2450 0277 00000000 		.4byte	0
 2451 027b 00000000 		.4byte	0
 2452              	.LLST10:
 2453 027f 00000000 		.4byte	.LVL43
 2454 0283 04000000 		.4byte	.LVL44
 2455 0287 0100     		.2byte	0x1
 2456 0289 50       		.byte	0x50
 2457 028a 04000000 		.4byte	.LVL44
 2458 028e 10000000 		.4byte	.LFE12
 2459 0292 0400     		.2byte	0x4
 2460 0294 F3       		.byte	0xf3
 2461 0295 01       		.uleb128 0x1
 2462 0296 50       		.byte	0x50
 2463 0297 9F       		.byte	0x9f
 2464 0298 00000000 		.4byte	0
 2465 029c 00000000 		.4byte	0
 2466              	.LLST11:
 2467 02a0 00000000 		.4byte	.LVL45
 2468 02a4 04000000 		.4byte	.LVL46
 2469 02a8 0100     		.2byte	0x1
 2470 02aa 50       		.byte	0x50
 2471 02ab 04000000 		.4byte	.LVL46
 2472 02af 10000000 		.4byte	.LFE13
 2473 02b3 0400     		.2byte	0x4
 2474 02b5 F3       		.byte	0xf3
ARM GAS  C:\Users\LAIR\AppData\Local\Temp\ccpuF2ic.s 			page 60


 2475 02b6 01       		.uleb128 0x1
 2476 02b7 50       		.byte	0x50
 2477 02b8 9F       		.byte	0x9f
 2478 02b9 00000000 		.4byte	0
 2479 02bd 00000000 		.4byte	0
 2480              	.LLST12:
 2481 02c1 00000000 		.4byte	.LVL47
 2482 02c5 0C000000 		.4byte	.LVL48
 2483 02c9 0100     		.2byte	0x1
 2484 02cb 50       		.byte	0x50
 2485 02cc 0C000000 		.4byte	.LVL48
 2486 02d0 12000000 		.4byte	.LVL50
 2487 02d4 0100     		.2byte	0x1
 2488 02d6 54       		.byte	0x54
 2489 02d7 12000000 		.4byte	.LVL50
 2490 02db 1C000000 		.4byte	.LFE14
 2491 02df 0400     		.2byte	0x4
 2492 02e1 F3       		.byte	0xf3
 2493 02e2 01       		.uleb128 0x1
 2494 02e3 50       		.byte	0x50
 2495 02e4 9F       		.byte	0x9f
 2496 02e5 00000000 		.4byte	0
 2497 02e9 00000000 		.4byte	0
 2498              	.LLST13:
 2499 02ed 00000000 		.4byte	.LVL47
 2500 02f1 0F000000 		.4byte	.LVL49-1
 2501 02f5 0100     		.2byte	0x1
 2502 02f7 51       		.byte	0x51
 2503 02f8 0F000000 		.4byte	.LVL49-1
 2504 02fc 1C000000 		.4byte	.LFE14
 2505 0300 0400     		.2byte	0x4
 2506 0302 F3       		.byte	0xf3
 2507 0303 01       		.uleb128 0x1
 2508 0304 51       		.byte	0x51
 2509 0305 9F       		.byte	0x9f
 2510 0306 00000000 		.4byte	0
 2511 030a 00000000 		.4byte	0
 2512              	.LLST14:
 2513 030e 00000000 		.4byte	.LVL51
 2514 0312 0C000000 		.4byte	.LVL52
 2515 0316 0100     		.2byte	0x1
 2516 0318 50       		.byte	0x50
 2517 0319 0C000000 		.4byte	.LVL52
 2518 031d 12000000 		.4byte	.LVL54
 2519 0321 0100     		.2byte	0x1
 2520 0323 54       		.byte	0x54
 2521 0324 12000000 		.4byte	.LVL54
 2522 0328 1C000000 		.4byte	.LFE15
 2523 032c 0400     		.2byte	0x4
 2524 032e F3       		.byte	0xf3
 2525 032f 01       		.uleb128 0x1
 2526 0330 50       		.byte	0x50
 2527 0331 9F       		.byte	0x9f
 2528 0332 00000000 		.4byte	0
 2529 0336 00000000 		.4byte	0
 2530              	.LLST15:
 2531 033a 00000000 		.4byte	.LVL51
ARM GAS  C:\Users\LAIR\AppData\Local\Temp\ccpuF2ic.s 			page 61


 2532 033e 0F000000 		.4byte	.LVL53-1
 2533 0342 0100     		.2byte	0x1
 2534 0344 51       		.byte	0x51
 2535 0345 0F000000 		.4byte	.LVL53-1
 2536 0349 16000000 		.4byte	.LVL55
 2537 034d 0100     		.2byte	0x1
 2538 034f 55       		.byte	0x55
 2539 0350 16000000 		.4byte	.LVL55
 2540 0354 1C000000 		.4byte	.LFE15
 2541 0358 0800     		.2byte	0x8
 2542 035a F3       		.byte	0xf3
 2543 035b 01       		.uleb128 0x1
 2544 035c 50       		.byte	0x50
 2545 035d 32       		.byte	0x32
 2546 035e 24       		.byte	0x24
 2547 035f 73       		.byte	0x73
 2548 0360 00       		.sleb128 0
 2549 0361 22       		.byte	0x22
 2550 0362 00000000 		.4byte	0
 2551 0366 00000000 		.4byte	0
 2552              	.LLST16:
 2553 036a 00000000 		.4byte	.LVL56
 2554 036e 0C000000 		.4byte	.LVL57
 2555 0372 0100     		.2byte	0x1
 2556 0374 50       		.byte	0x50
 2557 0375 0C000000 		.4byte	.LVL57
 2558 0379 44000000 		.4byte	.LVL63
 2559 037d 0100     		.2byte	0x1
 2560 037f 54       		.byte	0x54
 2561 0380 44000000 		.4byte	.LVL63
 2562 0384 5C000000 		.4byte	.LFE16
 2563 0388 0400     		.2byte	0x4
 2564 038a F3       		.byte	0xf3
 2565 038b 01       		.uleb128 0x1
 2566 038c 50       		.byte	0x50
 2567 038d 9F       		.byte	0x9f
 2568 038e 00000000 		.4byte	0
 2569 0392 00000000 		.4byte	0
 2570              	.LLST17:
 2571 0396 00000000 		.4byte	.LVL56
 2572 039a 0F000000 		.4byte	.LVL58-1
 2573 039e 0100     		.2byte	0x1
 2574 03a0 51       		.byte	0x51
 2575 03a1 0F000000 		.4byte	.LVL58-1
 2576 03a5 1A000000 		.4byte	.LVL59
 2577 03a9 0400     		.2byte	0x4
 2578 03ab F3       		.byte	0xf3
 2579 03ac 01       		.uleb128 0x1
 2580 03ad 51       		.byte	0x51
 2581 03ae 9F       		.byte	0x9f
 2582 03af 1A000000 		.4byte	.LVL59
 2583 03b3 28000000 		.4byte	.LVL60
 2584 03b7 0100     		.2byte	0x1
 2585 03b9 51       		.byte	0x51
 2586 03ba 32000000 		.4byte	.LVL61
 2587 03be 36000000 		.4byte	.LVL62
 2588 03c2 0100     		.2byte	0x1
ARM GAS  C:\Users\LAIR\AppData\Local\Temp\ccpuF2ic.s 			page 62


 2589 03c4 51       		.byte	0x51
 2590 03c5 00000000 		.4byte	0
 2591 03c9 00000000 		.4byte	0
 2592              	.LLST18:
 2593 03cd 00000000 		.4byte	.LVL65
 2594 03d1 0C000000 		.4byte	.LVL66
 2595 03d5 0100     		.2byte	0x1
 2596 03d7 50       		.byte	0x50
 2597 03d8 0C000000 		.4byte	.LVL66
 2598 03dc 26000000 		.4byte	.LVL70
 2599 03e0 0100     		.2byte	0x1
 2600 03e2 55       		.byte	0x55
 2601 03e3 26000000 		.4byte	.LVL70
 2602 03e7 40000000 		.4byte	.LFE17
 2603 03eb 0400     		.2byte	0x4
 2604 03ed F3       		.byte	0xf3
 2605 03ee 01       		.uleb128 0x1
 2606 03ef 50       		.byte	0x50
 2607 03f0 9F       		.byte	0x9f
 2608 03f1 00000000 		.4byte	0
 2609 03f5 00000000 		.4byte	0
 2610              	.LLST19:
 2611 03f9 00000000 		.4byte	.LVL65
 2612 03fd 0F000000 		.4byte	.LVL67-1
 2613 0401 0100     		.2byte	0x1
 2614 0403 51       		.byte	0x51
 2615 0404 0F000000 		.4byte	.LVL67-1
 2616 0408 1A000000 		.4byte	.LVL68
 2617 040c 0400     		.2byte	0x4
 2618 040e F3       		.byte	0xf3
 2619 040f 01       		.uleb128 0x1
 2620 0410 51       		.byte	0x51
 2621 0411 9F       		.byte	0x9f
 2622 0412 1A000000 		.4byte	.LVL68
 2623 0416 23000000 		.4byte	.LVL69-1
 2624 041a 0100     		.2byte	0x1
 2625 041c 50       		.byte	0x50
 2626 041d 00000000 		.4byte	0
 2627 0421 00000000 		.4byte	0
 2628              	.LLST20:
 2629 0425 00000000 		.4byte	.LVL72
 2630 0429 0C000000 		.4byte	.LVL73
 2631 042d 0100     		.2byte	0x1
 2632 042f 50       		.byte	0x50
 2633 0430 0C000000 		.4byte	.LVL73
 2634 0434 28000000 		.4byte	.LVL78
 2635 0438 0100     		.2byte	0x1
 2636 043a 54       		.byte	0x54
 2637 043b 28000000 		.4byte	.LVL78
 2638 043f 48000000 		.4byte	.LFE18
 2639 0443 0400     		.2byte	0x4
 2640 0445 F3       		.byte	0xf3
 2641 0446 01       		.uleb128 0x1
 2642 0447 50       		.byte	0x50
 2643 0448 9F       		.byte	0x9f
 2644 0449 00000000 		.4byte	0
 2645 044d 00000000 		.4byte	0
ARM GAS  C:\Users\LAIR\AppData\Local\Temp\ccpuF2ic.s 			page 63


 2646              	.LLST21:
 2647 0451 00000000 		.4byte	.LVL72
 2648 0455 0F000000 		.4byte	.LVL74-1
 2649 0459 0100     		.2byte	0x1
 2650 045b 51       		.byte	0x51
 2651 045c 0F000000 		.4byte	.LVL74-1
 2652 0460 1A000000 		.4byte	.LVL75
 2653 0464 0400     		.2byte	0x4
 2654 0466 F3       		.byte	0xf3
 2655 0467 01       		.uleb128 0x1
 2656 0468 51       		.byte	0x51
 2657 0469 9F       		.byte	0x9f
 2658 046a 1A000000 		.4byte	.LVL75
 2659 046e 1D000000 		.4byte	.LVL76-1
 2660 0472 0100     		.2byte	0x1
 2661 0474 50       		.byte	0x50
 2662 0475 00000000 		.4byte	0
 2663 0479 00000000 		.4byte	0
 2664              		.section	.debug_aranges,"",%progbits
 2665 0000 A4000000 		.4byte	0xa4
 2666 0004 0200     		.2byte	0x2
 2667 0006 00000000 		.4byte	.Ldebug_info0
 2668 000a 04       		.byte	0x4
 2669 000b 00       		.byte	0
 2670 000c 0000     		.2byte	0
 2671 000e 0000     		.2byte	0
 2672 0010 00000000 		.4byte	.LFB2
 2673 0014 84010000 		.4byte	.LFE2-.LFB2
 2674 0018 00000000 		.4byte	.LFB3
 2675 001c 30000000 		.4byte	.LFE3-.LFB3
 2676 0020 00000000 		.4byte	.LFB1
 2677 0024 20000000 		.4byte	.LFE1-.LFB1
 2678 0028 00000000 		.4byte	.LFB4
 2679 002c 10000000 		.4byte	.LFE4-.LFB4
 2680 0030 00000000 		.4byte	.LFB5
 2681 0034 14000000 		.4byte	.LFE5-.LFB5
 2682 0038 00000000 		.4byte	.LFB6
 2683 003c 14000000 		.4byte	.LFE6-.LFB6
 2684 0040 00000000 		.4byte	.LFB7
 2685 0044 28000000 		.4byte	.LFE7-.LFB7
 2686 0048 00000000 		.4byte	.LFB8
 2687 004c 2C000000 		.4byte	.LFE8-.LFB8
 2688 0050 00000000 		.4byte	.LFB9
 2689 0054 10000000 		.4byte	.LFE9-.LFB9
 2690 0058 00000000 		.4byte	.LFB10
 2691 005c 1C000000 		.4byte	.LFE10-.LFB10
 2692 0060 00000000 		.4byte	.LFB11
 2693 0064 18000000 		.4byte	.LFE11-.LFB11
 2694 0068 00000000 		.4byte	.LFB12
 2695 006c 10000000 		.4byte	.LFE12-.LFB12
 2696 0070 00000000 		.4byte	.LFB13
 2697 0074 10000000 		.4byte	.LFE13-.LFB13
 2698 0078 00000000 		.4byte	.LFB14
 2699 007c 1C000000 		.4byte	.LFE14-.LFB14
 2700 0080 00000000 		.4byte	.LFB15
 2701 0084 1C000000 		.4byte	.LFE15-.LFB15
 2702 0088 00000000 		.4byte	.LFB16
ARM GAS  C:\Users\LAIR\AppData\Local\Temp\ccpuF2ic.s 			page 64


 2703 008c 5C000000 		.4byte	.LFE16-.LFB16
 2704 0090 00000000 		.4byte	.LFB17
 2705 0094 40000000 		.4byte	.LFE17-.LFB17
 2706 0098 00000000 		.4byte	.LFB18
 2707 009c 48000000 		.4byte	.LFE18-.LFB18
 2708 00a0 00000000 		.4byte	0
 2709 00a4 00000000 		.4byte	0
 2710              		.section	.debug_ranges,"",%progbits
 2711              	.Ldebug_ranges0:
 2712 0000 00000000 		.4byte	.LFB2
 2713 0004 84010000 		.4byte	.LFE2
 2714 0008 00000000 		.4byte	.LFB3
 2715 000c 30000000 		.4byte	.LFE3
 2716 0010 00000000 		.4byte	.LFB1
 2717 0014 20000000 		.4byte	.LFE1
 2718 0018 00000000 		.4byte	.LFB4
 2719 001c 10000000 		.4byte	.LFE4
 2720 0020 00000000 		.4byte	.LFB5
 2721 0024 14000000 		.4byte	.LFE5
 2722 0028 00000000 		.4byte	.LFB6
 2723 002c 14000000 		.4byte	.LFE6
 2724 0030 00000000 		.4byte	.LFB7
 2725 0034 28000000 		.4byte	.LFE7
 2726 0038 00000000 		.4byte	.LFB8
 2727 003c 2C000000 		.4byte	.LFE8
 2728 0040 00000000 		.4byte	.LFB9
 2729 0044 10000000 		.4byte	.LFE9
 2730 0048 00000000 		.4byte	.LFB10
 2731 004c 1C000000 		.4byte	.LFE10
 2732 0050 00000000 		.4byte	.LFB11
 2733 0054 18000000 		.4byte	.LFE11
 2734 0058 00000000 		.4byte	.LFB12
 2735 005c 10000000 		.4byte	.LFE12
 2736 0060 00000000 		.4byte	.LFB13
 2737 0064 10000000 		.4byte	.LFE13
 2738 0068 00000000 		.4byte	.LFB14
 2739 006c 1C000000 		.4byte	.LFE14
 2740 0070 00000000 		.4byte	.LFB15
 2741 0074 1C000000 		.4byte	.LFE15
 2742 0078 00000000 		.4byte	.LFB16
 2743 007c 5C000000 		.4byte	.LFE16
 2744 0080 00000000 		.4byte	.LFB17
 2745 0084 40000000 		.4byte	.LFE17
 2746 0088 00000000 		.4byte	.LFB18
 2747 008c 48000000 		.4byte	.LFE18
 2748 0090 00000000 		.4byte	0
 2749 0094 00000000 		.4byte	0
 2750              		.section	.debug_line,"",%progbits
 2751              	.Ldebug_line0:
 2752 0000 90020000 		.section	.debug_str,"MS",%progbits,1
 2752      02004D00 
 2752      00000201 
 2752      FB0E0D00 
 2752      01010101 
 2753              	.LASF10:
 2754 0000 75696E74 		.ascii	"uint16\000"
 2754      313600
ARM GAS  C:\Users\LAIR\AppData\Local\Temp\ccpuF2ic.s 			page 65


 2755              	.LASF49:
 2756 0007 61646347 		.ascii	"adcGain\000"
 2756      61696E00 
 2757              	.LASF24:
 2758 000f 636F756E 		.ascii	"counts\000"
 2758      747300
 2759              	.LASF54:
 2760 0016 4144435F 		.ascii	"ADC_CountsTo_Volts\000"
 2760      436F756E 
 2760      7473546F 
 2760      5F566F6C 
 2760      747300
 2761              	.LASF26:
 2762 0029 4144435F 		.ascii	"ADC_Init\000"
 2762      496E6974 
 2762      00
 2763              	.LASF7:
 2764 0032 6C6F6E67 		.ascii	"long long unsigned int\000"
 2764      206C6F6E 
 2764      6720756E 
 2764      7369676E 
 2764      65642069 
 2765              	.LASF25:
 2766 0049 4144435F 		.ascii	"ADC_InputsPlacement\000"
 2766      496E7075 
 2766      7473506C 
 2766      6163656D 
 2766      656E7400 
 2767              	.LASF30:
 2768 005d 4144435F 		.ascii	"ADC_StartConvert\000"
 2768      53746172 
 2768      74436F6E 
 2768      76657274 
 2768      00
 2769              	.LASF6:
 2770 006e 6C6F6E67 		.ascii	"long long int\000"
 2770      206C6F6E 
 2770      6720696E 
 2770      7400
 2771              	.LASF0:
 2772 007c 7369676E 		.ascii	"signed char\000"
 2772      65642063 
 2772      68617200 
 2773              	.LASF32:
 2774 0088 73746174 		.ascii	"status\000"
 2774      757300
 2775              	.LASF13:
 2776 008f 696E7433 		.ascii	"int32\000"
 2776      3200
 2777              	.LASF28:
 2778 0095 4144435F 		.ascii	"ADC_Start\000"
 2778      53746172 
 2778      7400
 2779              	.LASF4:
 2780 009f 6C6F6E67 		.ascii	"long int\000"
 2780      20696E74 
 2780      00
ARM GAS  C:\Users\LAIR\AppData\Local\Temp\ccpuF2ic.s 			page 66


 2781              	.LASF53:
 2782 00a8 4144435F 		.ascii	"ADC_CountsTo_uVolts\000"
 2782      436F756E 
 2782      7473546F 
 2782      5F75566F 
 2782      6C747300 
 2783              	.LASF59:
 2784 00bc 4144435F 		.ascii	"ADC_countsPer10Volt\000"
 2784      636F756E 
 2784      74735065 
 2784      72313056 
 2784      6F6C7400 
 2785              	.LASF9:
 2786 00d0 75696E74 		.ascii	"uint8\000"
 2786      3800
 2787              	.LASF61:
 2788 00d6 43794465 		.ascii	"CyDelayUs\000"
 2788      6C617955 
 2788      7300
 2789              	.LASF16:
 2790 00e0 646F7562 		.ascii	"double\000"
 2790      6C6500
 2791              	.LASF11:
 2792 00e7 75696E74 		.ascii	"uint32\000"
 2792      333200
 2793              	.LASF39:
 2794 00ee 6D61736B 		.ascii	"mask\000"
 2794      00
 2795              	.LASF57:
 2796 00f3 4144435F 		.ascii	"ADC_initVar\000"
 2796      696E6974 
 2796      56617200 
 2797              	.LASF35:
 2798 00ff 7265744D 		.ascii	"retMode\000"
 2798      6F646500 
 2799              	.LASF44:
 2800 0107 4144435F 		.ascii	"ADC_SetLimitMask\000"
 2800      5365744C 
 2800      696D6974 
 2800      4D61736B 
 2800      00
 2801              	.LASF8:
 2802 0118 756E7369 		.ascii	"unsigned int\000"
 2802      676E6564 
 2802      20696E74 
 2802      00
 2803              	.LASF65:
 2804 0125 75566F6C 		.ascii	"uVolts\000"
 2804      747300
 2805              	.LASF5:
 2806 012c 6C6F6E67 		.ascii	"long unsigned int\000"
 2806      20756E73 
 2806      69676E65 
 2806      6420696E 
 2806      7400
 2807              	.LASF45:
 2808 013e 4144435F 		.ascii	"ADC_SetSatMask\000"
ARM GAS  C:\Users\LAIR\AppData\Local\Temp\ccpuF2ic.s 			page 67


 2808      53657453 
 2808      61744D61 
 2808      736B00
 2809              	.LASF55:
 2810 014d 766F6C74 		.ascii	"volts\000"
 2810      7300
 2811              	.LASF23:
 2812 0153 746D7052 		.ascii	"tmpRegVal\000"
 2812      65675661 
 2812      6C00
 2813              	.LASF3:
 2814 015d 73686F72 		.ascii	"short unsigned int\000"
 2814      7420756E 
 2814      7369676E 
 2814      65642069 
 2814      6E7400
 2815              	.LASF66:
 2816 0170 4379496E 		.ascii	"CyIntSetVector\000"
 2816      74536574 
 2816      56656374 
 2816      6F7200
 2817              	.LASF31:
 2818 017f 4144435F 		.ascii	"ADC_StopConvert\000"
 2818      53746F70 
 2818      436F6E76 
 2818      65727400 
 2819              	.LASF52:
 2820 018f 6D566F6C 		.ascii	"mVolts\000"
 2820      747300
 2821              	.LASF19:
 2822 0196 72656733 		.ascii	"reg32\000"
 2822      3200
 2823              	.LASF14:
 2824 019c 666C6F61 		.ascii	"float32\000"
 2824      74333200 
 2825              	.LASF21:
 2826 01a4 73697A65 		.ascii	"sizetype\000"
 2826      74797065 
 2826      00
 2827              	.LASF41:
 2828 01ad 6C6F774C 		.ascii	"lowLimit\000"
 2828      696D6974 
 2828      00
 2829              	.LASF42:
 2830 01b6 4144435F 		.ascii	"ADC_SetHighLimit\000"
 2830      53657448 
 2830      6967684C 
 2830      696D6974 
 2830      00
 2831              	.LASF33:
 2832 01c7 4144435F 		.ascii	"ADC_IsEndConversion\000"
 2832      4973456E 
 2832      64436F6E 
 2832      76657273 
 2832      696F6E00 
 2833              	.LASF62:
 2834 01db 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
ARM GAS  C:\Users\LAIR\AppData\Local\Temp\ccpuF2ic.s 			page 68


 2834      4320342E 
 2834      392E3320 
 2834      32303135 
 2834      30333033 
 2835 020e 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 2835      20726576 
 2835      6973696F 
 2835      6E203232 
 2835      31323230 
 2836 0241 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 2836      66756E63 
 2836      74696F6E 
 2836      2D736563 
 2836      74696F6E 
 2837              	.LASF17:
 2838 0269 696E7436 		.ascii	"int64\000"
 2838      3400
 2839              	.LASF60:
 2840 026f 4379496E 		.ascii	"CyIntSetPriority\000"
 2840      74536574 
 2840      5072696F 
 2840      72697479 
 2840      00
 2841              	.LASF38:
 2842 0280 4144435F 		.ascii	"ADC_SetChanMask\000"
 2842      53657443 
 2842      68616E4D 
 2842      61736B00 
 2843              	.LASF64:
 2844 0290 433A5C55 		.ascii	"C:\\Users\\LAIR\\Documents\\GitHub\\ARC-Controller\\"
 2844      73657273 
 2844      5C4C4149 
 2844      525C446F 
 2844      63756D65 
 2845 02be 50536F43 		.ascii	"PSoC-Code\\ARC-EMBED.cydsn\000"
 2845      2D436F64 
 2845      655C4152 
 2845      432D454D 
 2845      4245442E 
 2846              	.LASF15:
 2847 02d8 666C6F61 		.ascii	"float\000"
 2847      7400
 2848              	.LASF43:
 2849 02de 68696768 		.ascii	"highLimit\000"
 2849      4C696D69 
 2849      7400
 2850              	.LASF50:
 2851 02e8 4144435F 		.ascii	"ADC_CountsTo_mVolts\000"
 2851      436F756E 
 2851      7473546F 
 2851      5F6D566F 
 2851      6C747300 
 2852              	.LASF40:
 2853 02fc 4144435F 		.ascii	"ADC_SetLowLimit\000"
 2853      5365744C 
 2853      6F774C69 
 2853      6D697400 
ARM GAS  C:\Users\LAIR\AppData\Local\Temp\ccpuF2ic.s 			page 69


 2854              	.LASF67:
 2855 030c 43794861 		.ascii	"CyHalt\000"
 2855      6C7400
 2856              	.LASF63:
 2857 0313 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\ADC.c\000"
 2857      6E657261 
 2857      7465645F 
 2857      536F7572 
 2857      63655C50 
 2858              	.LASF1:
 2859 0332 756E7369 		.ascii	"unsigned char\000"
 2859      676E6564 
 2859      20636861 
 2859      7200
 2860              	.LASF58:
 2861 0340 4144435F 		.ascii	"ADC_offset\000"
 2861      6F666673 
 2861      657400
 2862              	.LASF2:
 2863 034b 73686F72 		.ascii	"short int\000"
 2863      7420696E 
 2863      7400
 2864              	.LASF29:
 2865 0355 4144435F 		.ascii	"ADC_Stop\000"
 2865      53746F70 
 2865      00
 2866              	.LASF22:
 2867 035e 63684E75 		.ascii	"chNum\000"
 2867      6D00
 2868              	.LASF36:
 2869 0364 6368616E 		.ascii	"chan\000"
 2869      00
 2870              	.LASF18:
 2871 0369 63686172 		.ascii	"char\000"
 2871      00
 2872              	.LASF20:
 2873 036e 63796973 		.ascii	"cyisraddress\000"
 2873      72616464 
 2873      72657373 
 2873      00
 2874              	.LASF56:
 2875 037b 4144435F 		.ascii	"ADC_channelsConfig\000"
 2875      6368616E 
 2875      6E656C73 
 2875      436F6E66 
 2875      696700
 2876              	.LASF47:
 2877 038e 6F666673 		.ascii	"offset\000"
 2877      657400
 2878              	.LASF51:
 2879 0395 61646343 		.ascii	"adcCounts\000"
 2879      6F756E74 
 2879      7300
 2880              	.LASF27:
 2881 039f 4144435F 		.ascii	"ADC_Enable\000"
 2881      456E6162 
 2881      6C6500
ARM GAS  C:\Users\LAIR\AppData\Local\Temp\ccpuF2ic.s 			page 70


 2882              	.LASF12:
 2883 03aa 696E7431 		.ascii	"int16\000"
 2883      3600
 2884              	.LASF46:
 2885 03b0 4144435F 		.ascii	"ADC_SetOffset\000"
 2885      5365744F 
 2885      66667365 
 2885      7400
 2886              	.LASF48:
 2887 03be 4144435F 		.ascii	"ADC_SetGain\000"
 2887      53657447 
 2887      61696E00 
 2888              	.LASF37:
 2889 03ca 72657375 		.ascii	"result\000"
 2889      6C7400
 2890              	.LASF34:
 2891 03d1 4144435F 		.ascii	"ADC_GetResult16\000"
 2891      47657452 
 2891      6573756C 
 2891      74313600 
 2892              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
