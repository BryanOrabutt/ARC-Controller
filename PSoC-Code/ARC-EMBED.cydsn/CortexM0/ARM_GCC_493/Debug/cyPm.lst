ARM GAS  C:\Users\LAIR\AppData\Local\Temp\ccSTC7Mo.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"cyPm.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.CySysPmSleep,"ax",%progbits
  18              		.align	2
  19              		.global	CySysPmSleep
  20              		.code	16
  21              		.thumb_func
  22              		.type	CySysPmSleep, %function
  23              	CySysPmSleep:
  24              	.LFB2:
  25              		.file 1 ".\\Generated_Source\\PSoC4\\cyPm.c"
   1:.\Generated_Source\PSoC4/cyPm.c **** /***************************************************************************//**
   2:.\Generated_Source\PSoC4/cyPm.c **** * \file cyPm.c
   3:.\Generated_Source\PSoC4/cyPm.c **** * \version 5.40
   4:.\Generated_Source\PSoC4/cyPm.c **** *
   5:.\Generated_Source\PSoC4/cyPm.c **** * \brief Provides an API for the power management.
   6:.\Generated_Source\PSoC4/cyPm.c **** *
   7:.\Generated_Source\PSoC4/cyPm.c **** * \note Documentation of the API's in this file is located in the System
   8:.\Generated_Source\PSoC4/cyPm.c **** * Reference Guide provided with PSoC Creator.
   9:.\Generated_Source\PSoC4/cyPm.c **** *
  10:.\Generated_Source\PSoC4/cyPm.c **** ********************************************************************************
  11:.\Generated_Source\PSoC4/cyPm.c **** * \copyright
  12:.\Generated_Source\PSoC4/cyPm.c **** * Copyright 2011-2016, Cypress Semiconductor Corporation.  All rights reserved.
  13:.\Generated_Source\PSoC4/cyPm.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:.\Generated_Source\PSoC4/cyPm.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:.\Generated_Source\PSoC4/cyPm.c **** * the software package with which this file was provided.
  16:.\Generated_Source\PSoC4/cyPm.c **** *******************************************************************************/
  17:.\Generated_Source\PSoC4/cyPm.c **** 
  18:.\Generated_Source\PSoC4/cyPm.c **** #include "cyPm.h"
  19:.\Generated_Source\PSoC4/cyPm.c **** #include "CyLib.h"
  20:.\Generated_Source\PSoC4/cyPm.c **** 
  21:.\Generated_Source\PSoC4/cyPm.c **** 
  22:.\Generated_Source\PSoC4/cyPm.c **** /*******************************************************************************
  23:.\Generated_Source\PSoC4/cyPm.c **** * Function Name: CySysPmSleep
  24:.\Generated_Source\PSoC4/cyPm.c **** ****************************************************************************//**
  25:.\Generated_Source\PSoC4/cyPm.c **** *
  26:.\Generated_Source\PSoC4/cyPm.c **** * Puts the part into the Sleep state. This is a CPU-centric power mode.
  27:.\Generated_Source\PSoC4/cyPm.c **** * It means that the CPU has indicated that it is in the sleep mode and
  28:.\Generated_Source\PSoC4/cyPm.c **** * its main clock can be removed. It is identical to Active from a peripheral
  29:.\Generated_Source\PSoC4/cyPm.c **** * point of view. Any enabled interrupts can cause wakeup from the Sleep mode.
  30:.\Generated_Source\PSoC4/cyPm.c **** *
  31:.\Generated_Source\PSoC4/cyPm.c **** *******************************************************************************/
  32:.\Generated_Source\PSoC4/cyPm.c **** void CySysPmSleep(void)
ARM GAS  C:\Users\LAIR\AppData\Local\Temp\ccSTC7Mo.s 			page 2


  33:.\Generated_Source\PSoC4/cyPm.c **** {
  26              		.loc 1 33 0
  27              		.cfi_startproc
  28 0000 08B5     		push	{r3, lr}
  29              		.cfi_def_cfa_offset 8
  30              		.cfi_offset 3, -8
  31              		.cfi_offset 14, -4
  34:.\Generated_Source\PSoC4/cyPm.c ****     uint8 interruptState;
  35:.\Generated_Source\PSoC4/cyPm.c **** 
  36:.\Generated_Source\PSoC4/cyPm.c ****     interruptState = CyEnterCriticalSection();
  32              		.loc 1 36 0
  33 0002 FFF7FEFF 		bl	CyEnterCriticalSection
  34              	.LVL0:
  37:.\Generated_Source\PSoC4/cyPm.c **** 
  38:.\Generated_Source\PSoC4/cyPm.c ****     /* CPU enters Sleep mode upon execution of WFI */
  39:.\Generated_Source\PSoC4/cyPm.c ****     CY_PM_CPU_SCR_REG &= (uint32) (~CY_PM_CPU_SCR_SLEEPDEEP);
  35              		.loc 1 39 0
  36 0006 044A     		ldr	r2, .L2
  37 0008 1368     		ldr	r3, [r2]
  38 000a 0421     		mov	r1, #4
  39 000c 8B43     		bic	r3, r1
  40 000e 1360     		str	r3, [r2]
  40:.\Generated_Source\PSoC4/cyPm.c **** 
  41:.\Generated_Source\PSoC4/cyPm.c ****     /* Sleep and wait for interrupt */
  42:.\Generated_Source\PSoC4/cyPm.c ****     CY_PM_WFI;
  41              		.loc 1 42 0
  42              	@ 42 ".\Generated_Source\PSoC4\cyPm.c" 1
  43 0010 30BF     		WFI 
  44              	
  45              	@ 0 "" 2
  43:.\Generated_Source\PSoC4/cyPm.c **** 
  44:.\Generated_Source\PSoC4/cyPm.c ****     CyExitCriticalSection(interruptState);
  46              		.loc 1 44 0
  47              		.code	16
  48 0012 FFF7FEFF 		bl	CyExitCriticalSection
  49              	.LVL1:
  45:.\Generated_Source\PSoC4/cyPm.c **** }
  50              		.loc 1 45 0
  51              		@ sp needed
  52 0016 08BD     		pop	{r3, pc}
  53              	.L3:
  54              		.align	2
  55              	.L2:
  56 0018 10ED00E0 		.word	-536810224
  57              		.cfi_endproc
  58              	.LFE2:
  59              		.size	CySysPmSleep, .-CySysPmSleep
  60              		.section	.text.CySysPmDeepSleep,"ax",%progbits
  61              		.align	2
  62              		.global	CySysPmDeepSleep
  63              		.code	16
  64              		.thumb_func
  65              		.type	CySysPmDeepSleep, %function
  66              	CySysPmDeepSleep:
  67              	.LFB3:
  46:.\Generated_Source\PSoC4/cyPm.c **** 
  47:.\Generated_Source\PSoC4/cyPm.c **** 
ARM GAS  C:\Users\LAIR\AppData\Local\Temp\ccSTC7Mo.s 			page 3


  48:.\Generated_Source\PSoC4/cyPm.c **** /*******************************************************************************
  49:.\Generated_Source\PSoC4/cyPm.c **** * Function Name: CySysPmDeepSleep
  50:.\Generated_Source\PSoC4/cyPm.c **** ****************************************************************************//**
  51:.\Generated_Source\PSoC4/cyPm.c **** *
  52:.\Generated_Source\PSoC4/cyPm.c **** * Puts the part into the Deep Sleep state. If the firmware attempts to enter
  53:.\Generated_Source\PSoC4/cyPm.c **** * this mode before the system is ready (that is, when
  54:.\Generated_Source\PSoC4/cyPm.c **** * PWR_CONTROL.LPM_READY = 0), then the device will go into the Sleep mode
  55:.\Generated_Source\PSoC4/cyPm.c **** * instead and automatically enter the originally intended mode when the
  56:.\Generated_Source\PSoC4/cyPm.c **** * holdoff expires.
  57:.\Generated_Source\PSoC4/cyPm.c **** *
  58:.\Generated_Source\PSoC4/cyPm.c **** * The wakeup occurs when an interrupt is received from a DeepSleep or
  59:.\Generated_Source\PSoC4/cyPm.c **** * Hibernate peripheral. For more details, see a corresponding
  60:.\Generated_Source\PSoC4/cyPm.c **** * peripheral's datasheet.
  61:.\Generated_Source\PSoC4/cyPm.c **** *
  62:.\Generated_Source\PSoC4/cyPm.c **** *******************************************************************************/
  63:.\Generated_Source\PSoC4/cyPm.c **** void CySysPmDeepSleep(void)
  64:.\Generated_Source\PSoC4/cyPm.c **** {
  68              		.loc 1 64 0
  69              		.cfi_startproc
  70 0000 30B5     		push	{r4, r5, lr}
  71              		.cfi_def_cfa_offset 12
  72              		.cfi_offset 4, -12
  73              		.cfi_offset 5, -8
  74              		.cfi_offset 14, -4
  75 0002 83B0     		sub	sp, sp, #12
  76              		.cfi_def_cfa_offset 24
  65:.\Generated_Source\PSoC4/cyPm.c ****     uint8 interruptState;
  66:.\Generated_Source\PSoC4/cyPm.c ****     #if(CY_IP_SRSSV2)
  67:.\Generated_Source\PSoC4/cyPm.c ****         volatile uint32 clkSelectReg;
  68:.\Generated_Source\PSoC4/cyPm.c ****     #endif /* (CY_IP_SRSSV2) */
  69:.\Generated_Source\PSoC4/cyPm.c **** 
  70:.\Generated_Source\PSoC4/cyPm.c ****     interruptState = CyEnterCriticalSection();
  77              		.loc 1 70 0
  78 0004 FFF7FEFF 		bl	CyEnterCriticalSection
  79              	.LVL2:
  80 0008 041C     		mov	r4, r0
  81              	.LVL3:
  71:.\Generated_Source\PSoC4/cyPm.c **** 
  72:.\Generated_Source\PSoC4/cyPm.c ****     #if(CY_IP_SRSSV2)
  73:.\Generated_Source\PSoC4/cyPm.c ****         /* Device enters DeepSleep mode when CPU asserts SLEEPDEEP signal */
  74:.\Generated_Source\PSoC4/cyPm.c ****         CY_PM_PWR_CONTROL_REG &= (uint32) (~CY_PM_PWR_CONTROL_HIBERNATE);
  82              		.loc 1 74 0
  83 000a 0E4A     		ldr	r2, .L5
  84 000c 1368     		ldr	r3, [r2]
  85 000e 5B00     		lsl	r3, r3, #1
  86 0010 5B08     		lsr	r3, r3, #1
  87 0012 1360     		str	r3, [r2]
  75:.\Generated_Source\PSoC4/cyPm.c ****     #endif /* (CY_IP_SRSSV2) */
  76:.\Generated_Source\PSoC4/cyPm.c **** 
  77:.\Generated_Source\PSoC4/cyPm.c ****     #if (CY_IP_CPUSS && CY_IP_SRSSV2)
  78:.\Generated_Source\PSoC4/cyPm.c ****         CY_PM_CPUSS_CONFIG_REG |= CY_PM_CPUSS_CONFIG_FLSH_ACC_BYPASS;
  79:.\Generated_Source\PSoC4/cyPm.c ****     #endif /* (CY_IP_CPUSS && CY_IP_SRSSV2) */
  80:.\Generated_Source\PSoC4/cyPm.c **** 
  81:.\Generated_Source\PSoC4/cyPm.c ****     /* Adjust delay to wait for references to settle on wakeup from Deep Sleep */
  82:.\Generated_Source\PSoC4/cyPm.c ****     CY_PM_PWR_KEY_DELAY_REG = CY_SFLASH_DPSLP_KEY_DELAY_REG;
  88              		.loc 1 82 0
  89 0014 0C4B     		ldr	r3, .L5+4
ARM GAS  C:\Users\LAIR\AppData\Local\Temp\ccSTC7Mo.s 			page 4


  90 0016 1B88     		ldrh	r3, [r3]
  91 0018 9BB2     		uxth	r3, r3
  92 001a 0C4A     		ldr	r2, .L5+8
  93 001c 1360     		str	r3, [r2]
  83:.\Generated_Source\PSoC4/cyPm.c **** 
  84:.\Generated_Source\PSoC4/cyPm.c ****     /* CPU enters DeepSleep/Hibernate mode upon execution of WFI */
  85:.\Generated_Source\PSoC4/cyPm.c ****     CY_PM_CPU_SCR_REG |= CY_PM_CPU_SCR_SLEEPDEEP;
  94              		.loc 1 85 0
  95 001e 0C4A     		ldr	r2, .L5+12
  96 0020 1168     		ldr	r1, [r2]
  97 0022 0423     		mov	r3, #4
  98 0024 0B43     		orr	r3, r1
  99 0026 1360     		str	r3, [r2]
  86:.\Generated_Source\PSoC4/cyPm.c **** 
  87:.\Generated_Source\PSoC4/cyPm.c ****     #if(CY_IP_SRSSV2)
  88:.\Generated_Source\PSoC4/cyPm.c ****         /* Preserve system clock configuration and
  89:.\Generated_Source\PSoC4/cyPm.c ****         * reduce sysclk to <=12 MHz (Cypress ID #158710, #179888).
  90:.\Generated_Source\PSoC4/cyPm.c ****         */
  91:.\Generated_Source\PSoC4/cyPm.c ****         clkSelectReg = CY_SYS_CLK_SELECT_REG;
 100              		.loc 1 91 0
 101 0028 0A4D     		ldr	r5, .L5+16
 102 002a 2B68     		ldr	r3, [r5]
 103 002c 0193     		str	r3, [sp, #4]
  92:.\Generated_Source\PSoC4/cyPm.c ****         CySysClkWriteSysclkDiv(CY_SYS_CLK_SYSCLK_DIV4);
 104              		.loc 1 92 0
 105 002e 0220     		mov	r0, #2
 106 0030 FFF7FEFF 		bl	CySysClkWriteSysclkDiv
 107              	.LVL4:
  93:.\Generated_Source\PSoC4/cyPm.c ****     #endif /* (CY_IP_SRSSV2) */
  94:.\Generated_Source\PSoC4/cyPm.c **** 
  95:.\Generated_Source\PSoC4/cyPm.c ****     /* Sleep and wait for interrupt */
  96:.\Generated_Source\PSoC4/cyPm.c ****     CY_PM_WFI;
 108              		.loc 1 96 0
 109              	@ 96 ".\Generated_Source\PSoC4\cyPm.c" 1
 110 0034 30BF     		WFI 
 111              	
 112              	@ 0 "" 2
  97:.\Generated_Source\PSoC4/cyPm.c **** 
  98:.\Generated_Source\PSoC4/cyPm.c ****     #if(CY_IP_SRSSV2)
  99:.\Generated_Source\PSoC4/cyPm.c ****         /* Restore system clock configuration */
 100:.\Generated_Source\PSoC4/cyPm.c ****         CY_SYS_CLK_SELECT_REG = clkSelectReg;
 113              		.loc 1 100 0
 114              		.code	16
 115 0036 019B     		ldr	r3, [sp, #4]
 116 0038 2B60     		str	r3, [r5]
 101:.\Generated_Source\PSoC4/cyPm.c ****     #endif /* (CY_IP_SRSSV2) */
 102:.\Generated_Source\PSoC4/cyPm.c **** 
 103:.\Generated_Source\PSoC4/cyPm.c ****     #if (CY_IP_CPUSS && CY_IP_SRSSV2)
 104:.\Generated_Source\PSoC4/cyPm.c ****         CY_PM_CPUSS_CONFIG_REG &= (uint32) (~CY_PM_CPUSS_CONFIG_FLSH_ACC_BYPASS);
 105:.\Generated_Source\PSoC4/cyPm.c ****     #endif /* (CY_IP_CPUSS && CY_IP_SRSSV2) */
 106:.\Generated_Source\PSoC4/cyPm.c **** 
 107:.\Generated_Source\PSoC4/cyPm.c ****     CyExitCriticalSection(interruptState);
 117              		.loc 1 107 0
 118 003a 201C     		mov	r0, r4
 119 003c FFF7FEFF 		bl	CyExitCriticalSection
 120              	.LVL5:
 108:.\Generated_Source\PSoC4/cyPm.c **** }
ARM GAS  C:\Users\LAIR\AppData\Local\Temp\ccSTC7Mo.s 			page 5


 121              		.loc 1 108 0
 122 0040 03B0     		add	sp, sp, #12
 123              		@ sp needed
 124              	.LVL6:
 125 0042 30BD     		pop	{r4, r5, pc}
 126              	.L6:
 127              		.align	2
 128              	.L5:
 129 0044 00000B40 		.word	1074462720
 130 0048 52F2FF0F 		.word	268431954
 131 004c 0C000B40 		.word	1074462732
 132 0050 10ED00E0 		.word	-536810224
 133 0054 00010B40 		.word	1074462976
 134              		.cfi_endproc
 135              	.LFE3:
 136              		.size	CySysPmDeepSleep, .-CySysPmDeepSleep
 137              		.section	.text.CySysPmHibernate,"ax",%progbits
 138              		.align	2
 139              		.global	CySysPmHibernate
 140              		.code	16
 141              		.thumb_func
 142              		.type	CySysPmHibernate, %function
 143              	CySysPmHibernate:
 144              	.LFB4:
 109:.\Generated_Source\PSoC4/cyPm.c **** 
 110:.\Generated_Source\PSoC4/cyPm.c **** 
 111:.\Generated_Source\PSoC4/cyPm.c **** #if(CY_IP_SRSSV2)
 112:.\Generated_Source\PSoC4/cyPm.c **** 
 113:.\Generated_Source\PSoC4/cyPm.c ****     /*******************************************************************************
 114:.\Generated_Source\PSoC4/cyPm.c ****     * Function Name: CySysPmHibernate
 115:.\Generated_Source\PSoC4/cyPm.c ****     ****************************************************************************//**
 116:.\Generated_Source\PSoC4/cyPm.c ****     *
 117:.\Generated_Source\PSoC4/cyPm.c ****     * Puts the part into the Hibernate state. Only SRAM and UDBs are retained;
 118:.\Generated_Source\PSoC4/cyPm.c ****     * most internal supplies are off. Wakeup is possible from a pin or a hibernate
 119:.\Generated_Source\PSoC4/cyPm.c ****     * comparator only.
 120:.\Generated_Source\PSoC4/cyPm.c ****     *
 121:.\Generated_Source\PSoC4/cyPm.c ****     * It is expected that the firmware has already frozen the IO-Cells using
 122:.\Generated_Source\PSoC4/cyPm.c ****     * CySysPmFreezeIo() function before the call to this function. If this is
 123:.\Generated_Source\PSoC4/cyPm.c ****     * omitted, the IO-cells will be frozen in the same way as they are
 124:.\Generated_Source\PSoC4/cyPm.c ****     * in the Active to Deep Sleep transition, but will lose their state on wake up
 125:.\Generated_Source\PSoC4/cyPm.c ****     * (because of the reset occurring at that time).
 126:.\Generated_Source\PSoC4/cyPm.c ****     *
 127:.\Generated_Source\PSoC4/cyPm.c ****     * Because all the CPU state is lost, the CPU will start up at the reset vector.
 128:.\Generated_Source\PSoC4/cyPm.c ****     * To save the firmware state through the Hibernate low power mode, a
 129:.\Generated_Source\PSoC4/cyPm.c ****     * corresponding variable should be defined with CY_NOINIT attribute. It
 130:.\Generated_Source\PSoC4/cyPm.c ****     * prevents data from being initialized to zero on startup. The interrupt
 131:.\Generated_Source\PSoC4/cyPm.c ****     * cause of the hibernate peripheral is retained, such that it can be either
 132:.\Generated_Source\PSoC4/cyPm.c ****     * read by the firmware or cause an interrupt after the firmware has booted and
 133:.\Generated_Source\PSoC4/cyPm.c ****     * enabled the corresponding interrupt. To distinguish the wakeup from
 134:.\Generated_Source\PSoC4/cyPm.c ****     * the Hibernate mode and the general Reset event, the
 135:.\Generated_Source\PSoC4/cyPm.c ****     * \ref CySysPmGetResetReason() function could be used.
 136:.\Generated_Source\PSoC4/cyPm.c ****     *
 137:.\Generated_Source\PSoC4/cyPm.c ****     *******************************************************************************/
 138:.\Generated_Source\PSoC4/cyPm.c ****     void CySysPmHibernate(void)
 139:.\Generated_Source\PSoC4/cyPm.c ****     {
 145              		.loc 1 139 0
 146              		.cfi_startproc
ARM GAS  C:\Users\LAIR\AppData\Local\Temp\ccSTC7Mo.s 			page 6


 147 0000 08B5     		push	{r3, lr}
 148              		.cfi_def_cfa_offset 8
 149              		.cfi_offset 3, -8
 150              		.cfi_offset 14, -4
 140:.\Generated_Source\PSoC4/cyPm.c ****         uint8 interruptState;
 141:.\Generated_Source\PSoC4/cyPm.c **** 
 142:.\Generated_Source\PSoC4/cyPm.c ****         interruptState = CyEnterCriticalSection();
 151              		.loc 1 142 0
 152 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 153              	.LVL7:
 154              	.LBB4:
 155              	.LBB5:
 156              		.file 2 ".\\Generated_Source\\PSoC4\\cyPm.h"
   1:.\Generated_Source\PSoC4/cyPm.h **** /***************************************************************************//**
   2:.\Generated_Source\PSoC4/cyPm.h **** * \file cyPm.h
   3:.\Generated_Source\PSoC4/cyPm.h **** * \version 5.40
   4:.\Generated_Source\PSoC4/cyPm.h **** *
   5:.\Generated_Source\PSoC4/cyPm.h **** * \brief Provides the function definitions for the power management API.
   6:.\Generated_Source\PSoC4/cyPm.h **** *
   7:.\Generated_Source\PSoC4/cyPm.h **** * \note Documentation of the API's in this file is located in the System
   8:.\Generated_Source\PSoC4/cyPm.h **** * Reference Guide provided with PSoC Creator.
   9:.\Generated_Source\PSoC4/cyPm.h **** *
  10:.\Generated_Source\PSoC4/cyPm.h **** ********************************************************************************
  11:.\Generated_Source\PSoC4/cyPm.h **** * \copyright
  12:.\Generated_Source\PSoC4/cyPm.h **** * Copyright 2011-2016, Cypress Semiconductor Corporation.  All rights reserved.
  13:.\Generated_Source\PSoC4/cyPm.h **** * You may use this file only in accordance with the license, terms, conditions,
  14:.\Generated_Source\PSoC4/cyPm.h **** * disclaimers, and limitations in the end user license agreement accompanying
  15:.\Generated_Source\PSoC4/cyPm.h **** * the software package with which this file was provided.
  16:.\Generated_Source\PSoC4/cyPm.h **** *******************************************************************************/
  17:.\Generated_Source\PSoC4/cyPm.h **** 
  18:.\Generated_Source\PSoC4/cyPm.h **** #if !defined(CY_BOOT_CYPM_H)
  19:.\Generated_Source\PSoC4/cyPm.h **** #define CY_BOOT_CYPM_H
  20:.\Generated_Source\PSoC4/cyPm.h **** 
  21:.\Generated_Source\PSoC4/cyPm.h **** #include "cytypes.h"
  22:.\Generated_Source\PSoC4/cyPm.h **** #include "cypins.h"
  23:.\Generated_Source\PSoC4/cyPm.h **** 
  24:.\Generated_Source\PSoC4/cyPm.h **** 
  25:.\Generated_Source\PSoC4/cyPm.h **** /**
  26:.\Generated_Source\PSoC4/cyPm.h **** * \addtogroup group_power_management Power Management API
  27:.\Generated_Source\PSoC4/cyPm.h **** * @{
  28:.\Generated_Source\PSoC4/cyPm.h **** 
  29:.\Generated_Source\PSoC4/cyPm.h **** \brief PSoC 4 devices support the following power modes (in order of high to low power consumption)
  30:.\Generated_Source\PSoC4/cyPm.h **** Deep Sleep, Hibernate, and Stop. Active, Sleep and Deep-Sleep are standard ARM defined power modes,
  31:.\Generated_Source\PSoC4/cyPm.h **** ARM CPUs. Hibernate/Stop are even lower power modes that are entered from firmware just like Deep-S
  32:.\Generated_Source\PSoC4/cyPm.h **** the CPU (and all peripherals) goes through a full reset.
  33:.\Generated_Source\PSoC4/cyPm.h **** 
  34:.\Generated_Source\PSoC4/cyPm.h **** There is a full range of power modes supported by PSoC devices to control power consumption and the
  35:.\Generated_Source\PSoC4/cyPm.h **** resources. See the following table for the supported power modes.
  36:.\Generated_Source\PSoC4/cyPm.h **** 
  37:.\Generated_Source\PSoC4/cyPm.h **** Mode        | PSoC 4000              | Rest Devices           |
  38:.\Generated_Source\PSoC4/cyPm.h **** ----------- | ---------------------- | ---------------------- |
  39:.\Generated_Source\PSoC4/cyPm.h **** Active      |          Y             |       Y                |
  40:.\Generated_Source\PSoC4/cyPm.h **** Sleep       |          Y             |       Y                |
  41:.\Generated_Source\PSoC4/cyPm.h **** Deep Sleep  |          Y             |       Y                |
  42:.\Generated_Source\PSoC4/cyPm.h **** Hibernate   |          Y             |       Y                |
  43:.\Generated_Source\PSoC4/cyPm.h **** Stop        |                        |       Y                |
  44:.\Generated_Source\PSoC4/cyPm.h **** 
ARM GAS  C:\Users\LAIR\AppData\Local\Temp\ccSTC7Mo.s 			page 7


  45:.\Generated_Source\PSoC4/cyPm.h **** For the ARM-based devices (PSoC 4), an interrupt is required for the CPU to wake up. The Power Mana
  46:.\Generated_Source\PSoC4/cyPm.h **** assumes that wakeup time is configured with a separate component (component-based wakeup time confi
  47:.\Generated_Source\PSoC4/cyPm.h **** interrupt to be issued on terminal count.
  48:.\Generated_Source\PSoC4/cyPm.h **** 
  49:.\Generated_Source\PSoC4/cyPm.h **** All pending interrupts should be cleared before the device is put into low power mode, even if they
  50:.\Generated_Source\PSoC4/cyPm.h **** 
  51:.\Generated_Source\PSoC4/cyPm.h **** The Power Management API is provided in the CyPm.c and CyPm.h files.
  52:.\Generated_Source\PSoC4/cyPm.h **** 
  53:.\Generated_Source\PSoC4/cyPm.h **** 
  54:.\Generated_Source\PSoC4/cyPm.h **** \section group_power_management_implementation Implementation
  55:.\Generated_Source\PSoC4/cyPm.h **** For PSoC 4100 and PSoC 4200 devices, the software should set EXT_VCCD bit in the PWR_CONTROL regist
  56:.\Generated_Source\PSoC4/cyPm.h **** shorted to Vddd on the board. This impacts the chip internal state transitions where it is necessar
  57:.\Generated_Source\PSoC4/cyPm.h **** Vccd is connected or floating to achieve minimum current in low power modes. Note Setting this bit 
  58:.\Generated_Source\PSoC4/cyPm.h **** regulator and will lead to a system reset unless both Vddd and Vccd pins are supplied externally. R
  59:.\Generated_Source\PSoC4/cyPm.h **** TRM for more information.
  60:.\Generated_Source\PSoC4/cyPm.h **** 
  61:.\Generated_Source\PSoC4/cyPm.h **** It is safe to call PM APIs from the ISR. The wakeup conditions for Sleep and DeepSleep low power mo
  62:.\Generated_Source\PSoC4/cyPm.h **** in the following table.
  63:.\Generated_Source\PSoC4/cyPm.h **** 
  64:.\Generated_Source\PSoC4/cyPm.h **** Interrupts State  |  Condition                      | Wakeup    |   ISR Execution   |
  65:.\Generated_Source\PSoC4/cyPm.h **** ------------------|---------------------------------|-----------|------------------ |
  66:.\Generated_Source\PSoC4/cyPm.h **** Unmasked          | IRQ priority > current level    | Yes       |   Yes             |
  67:.\Generated_Source\PSoC4/cyPm.h **** Unmasked          | IRQ priority ≤ current level    | No        |   No              |
  68:.\Generated_Source\PSoC4/cyPm.h **** Masked            | IRQ priority > current level    | Yes       |   No              |
  69:.\Generated_Source\PSoC4/cyPm.h **** Masked            | IRQ priority ≤ current level    | No        |   No              |
  70:.\Generated_Source\PSoC4/cyPm.h **** 
  71:.\Generated_Source\PSoC4/cyPm.h **** 
  72:.\Generated_Source\PSoC4/cyPm.h **** \section group_power_management_clocks Clock Configuration
  73:.\Generated_Source\PSoC4/cyPm.h **** For PSoC 4100 BLE and PSoC 4200 BLE devices, the HFCLK source should be set to IMO before switching
  74:.\Generated_Source\PSoC4/cyPm.h **** power mode. The IMO should be enabled (by calling CySysClkImoStart(), if it is not) and HFCLK sourc
  75:.\Generated_Source\PSoC4/cyPm.h **** to IMO by calling CySysClkWriteHfclkDirect(CY_SYS_CLK_HFCLK_IMO).
  76:.\Generated_Source\PSoC4/cyPm.h **** 
  77:.\Generated_Source\PSoC4/cyPm.h **** If the System clock frequency is increased by switching to the IMO, the CySysFlashSetWaitCycles() f
  78:.\Generated_Source\PSoC4/cyPm.h **** appropriate parameter should be called beforehand. Also, it can optionally be called after lowering
  79:.\Generated_Source\PSoC4/cyPm.h **** frequency in order to improve CPU performance. See CySysFlashSetWaitCycles() description for the de
  80:.\Generated_Source\PSoC4/cyPm.h **** 
  81:.\Generated_Source\PSoC4/cyPm.h **** 
  82:.\Generated_Source\PSoC4/cyPm.h **** 
  83:.\Generated_Source\PSoC4/cyPm.h **** 
  84:.\Generated_Source\PSoC4/cyPm.h **** 
  85:.\Generated_Source\PSoC4/cyPm.h **** */
  86:.\Generated_Source\PSoC4/cyPm.h **** void CySysPmSleep(void);
  87:.\Generated_Source\PSoC4/cyPm.h **** void CySysPmDeepSleep(void);
  88:.\Generated_Source\PSoC4/cyPm.h **** 
  89:.\Generated_Source\PSoC4/cyPm.h **** #if(CY_IP_SRSSV2)
  90:.\Generated_Source\PSoC4/cyPm.h ****     void CySysPmHibernate(void);
  91:.\Generated_Source\PSoC4/cyPm.h ****     void CySysPmFreezeIo(void);
  92:.\Generated_Source\PSoC4/cyPm.h ****     void CySysPmUnfreezeIo(void);
  93:.\Generated_Source\PSoC4/cyPm.h ****     uint32 CySysPmGetResetReason(void);
  94:.\Generated_Source\PSoC4/cyPm.h ****     void CySysPmStop(void);
  95:.\Generated_Source\PSoC4/cyPm.h ****     void CySysPmSetWakeupPolarity(uint32 polarity);
  96:.\Generated_Source\PSoC4/cyPm.h **** #else
  97:.\Generated_Source\PSoC4/cyPm.h ****     void CySysPmSetWakeupHoldoff(uint32 hfclkFrequencyMhz);
  98:.\Generated_Source\PSoC4/cyPm.h **** #endif /* (CY_IP_SRSSV2) */
  99:.\Generated_Source\PSoC4/cyPm.h **** 
 100:.\Generated_Source\PSoC4/cyPm.h **** /** @} group_power_management */
 101:.\Generated_Source\PSoC4/cyPm.h **** 
ARM GAS  C:\Users\LAIR\AppData\Local\Temp\ccSTC7Mo.s 			page 8


 102:.\Generated_Source\PSoC4/cyPm.h **** 
 103:.\Generated_Source\PSoC4/cyPm.h **** /*******************************************************************************
 104:.\Generated_Source\PSoC4/cyPm.h **** * The ARM compilers have the __wfi() intrinsic that inserts a WFI instruction
 105:.\Generated_Source\PSoC4/cyPm.h **** * into the instruction stream generated by the compiler. The GCC compiler has to
 106:.\Generated_Source\PSoC4/cyPm.h **** * execute assembly language instruction.
 107:.\Generated_Source\PSoC4/cyPm.h **** *******************************************************************************/
 108:.\Generated_Source\PSoC4/cyPm.h **** #if defined(__ARMCC_VERSION)    /* Instristic for Keil compilers */
 109:.\Generated_Source\PSoC4/cyPm.h ****     #define CY_PM_WFI       __wfi()
 110:.\Generated_Source\PSoC4/cyPm.h **** #else   /* ASM for GCC & IAR */
 111:.\Generated_Source\PSoC4/cyPm.h ****     #define CY_PM_WFI       __asm volatile ("WFI \n")
 112:.\Generated_Source\PSoC4/cyPm.h **** #endif /* __ARMCC_VERSION */
 113:.\Generated_Source\PSoC4/cyPm.h **** 
 114:.\Generated_Source\PSoC4/cyPm.h **** #if(CY_IP_SRSSV2)
 115:.\Generated_Source\PSoC4/cyPm.h **** 
 116:.\Generated_Source\PSoC4/cyPm.h ****     /* CySysPmSetWakeupPolarity() */
 117:.\Generated_Source\PSoC4/cyPm.h ****     #define CY_PM_STOP_WAKEUP_ACTIVE_LOW        ((uint32)(0x0u))    /**< Logical zero will wakeup t
 118:.\Generated_Source\PSoC4/cyPm.h ****     #define CY_PM_STOP_WAKEUP_ACTIVE_HIGH       ((uint32)(0x1u))    /**< Logical one will wakeup th
 119:.\Generated_Source\PSoC4/cyPm.h ****     #define CY_PM_STOP_WAKEUP_POLARITY          (CY_PM_STOP_WAKEUP_ACTIVE_LOW)
 120:.\Generated_Source\PSoC4/cyPm.h **** 
 121:.\Generated_Source\PSoC4/cyPm.h ****     /* CySysPmGetResetReason() */
 122:.\Generated_Source\PSoC4/cyPm.h ****     #define CY_PM_RESET_REASON_UNKN             (0u)    /**< Unknown reset reason. */
 123:.\Generated_Source\PSoC4/cyPm.h ****     #define CY_PM_RESET_REASON_XRES             (1u)    /**< Transition from OFF/XRES to RESET */
 124:.\Generated_Source\PSoC4/cyPm.h ****     #define CY_PM_RESET_REASON_WAKEUP_HIB       (2u)    /**< Transition/wakeup from HIBERNATE to RE
 125:.\Generated_Source\PSoC4/cyPm.h ****     #define CY_PM_RESET_REASON_WAKEUP_STOP      (3u)    /**< Transition/wakeup from STOP to RESET *
 126:.\Generated_Source\PSoC4/cyPm.h **** 
 127:.\Generated_Source\PSoC4/cyPm.h **** #endif /* (CY_IP_SRSSV2) */
 128:.\Generated_Source\PSoC4/cyPm.h **** 
 129:.\Generated_Source\PSoC4/cyPm.h **** 
 130:.\Generated_Source\PSoC4/cyPm.h **** /***************************************
 131:.\Generated_Source\PSoC4/cyPm.h **** *              Registers
 132:.\Generated_Source\PSoC4/cyPm.h **** ***************************************/
 133:.\Generated_Source\PSoC4/cyPm.h **** 
 134:.\Generated_Source\PSoC4/cyPm.h **** /* Power Mode Control */
 135:.\Generated_Source\PSoC4/cyPm.h **** #define CY_PM_PWR_CONTROL_REG               (*(reg32 *) CYREG_PWR_CONTROL)
 136:.\Generated_Source\PSoC4/cyPm.h **** #define CY_PM_PWR_CONTROL_PTR               ( (reg32 *) CYREG_PWR_CONTROL)
 137:.\Generated_Source\PSoC4/cyPm.h **** 
 138:.\Generated_Source\PSoC4/cyPm.h **** /* CPU System Control Register */
 139:.\Generated_Source\PSoC4/cyPm.h **** #if (CY_IP_CPUSS_CM0)
 140:.\Generated_Source\PSoC4/cyPm.h ****     #define CY_PM_CPU_SCR_REG                   (*(reg32 *) CYREG_CM0_SCR)
 141:.\Generated_Source\PSoC4/cyPm.h ****     #define CY_PM_CPU_SCR_PTR                   ( (reg32 *) CYREG_CM0_SCR)
 142:.\Generated_Source\PSoC4/cyPm.h **** #else /* CY_IP_CPUSS_CM0PLUS */
 143:.\Generated_Source\PSoC4/cyPm.h ****     #define CY_PM_CPU_SCR_REG                   (*(reg32 *) CYREG_CM0P_SCR)
 144:.\Generated_Source\PSoC4/cyPm.h ****     #define CY_PM_CPU_SCR_PTR                   ( (reg32 *) CYREG_CM0P_SCR)
 145:.\Generated_Source\PSoC4/cyPm.h **** #endif /* (CY_IP_CPUSS_CM0) */
 146:.\Generated_Source\PSoC4/cyPm.h **** 
 147:.\Generated_Source\PSoC4/cyPm.h **** /* Power System Key & Delay Register */
 148:.\Generated_Source\PSoC4/cyPm.h **** #define CY_PM_PWR_KEY_DELAY_REG             (*(reg32 *) CYREG_PWR_KEY_DELAY)
 149:.\Generated_Source\PSoC4/cyPm.h **** #define CY_PM_PWR_KEY_DELAY_PTR             ( (reg32 *) CYREG_PWR_KEY_DELAY)
 150:.\Generated_Source\PSoC4/cyPm.h **** 
 151:.\Generated_Source\PSoC4/cyPm.h **** 
 152:.\Generated_Source\PSoC4/cyPm.h **** #if(CY_IP_SRSSV2)
 153:.\Generated_Source\PSoC4/cyPm.h ****     /* Hibernate wakeup value for PWR_KEY_DELAY */
 154:.\Generated_Source\PSoC4/cyPm.h ****     #define CY_SFLASH_HIB_KEY_DELAY_REG     (*(reg16 *) CYREG_SFLASH_HIB_KEY_DELAY)
 155:.\Generated_Source\PSoC4/cyPm.h ****     #define CY_SFLASH_HIB_KEY_DELAY_PTR     ( (reg16 *) CYREG_SFLASH_HIB_KEY_DELAY)
 156:.\Generated_Source\PSoC4/cyPm.h **** #endif  /* (CY_IP_SRSSV2) */
 157:.\Generated_Source\PSoC4/cyPm.h **** 
 158:.\Generated_Source\PSoC4/cyPm.h **** /* Deep Sleep wakeup value for PWR_KEY_DELAY */
ARM GAS  C:\Users\LAIR\AppData\Local\Temp\ccSTC7Mo.s 			page 9


 159:.\Generated_Source\PSoC4/cyPm.h **** #define CY_SFLASH_DPSLP_KEY_DELAY_REG       (*(reg16 *) CYREG_SFLASH_DPSLP_KEY_DELAY)
 160:.\Generated_Source\PSoC4/cyPm.h **** #define CY_SFLASH_DPSLP_KEY_DELAY_PTR       ( (reg16 *) CYREG_SFLASH_DPSLP_KEY_DELAY)
 161:.\Generated_Source\PSoC4/cyPm.h **** 
 162:.\Generated_Source\PSoC4/cyPm.h **** /* Power Stop Mode Register */
 163:.\Generated_Source\PSoC4/cyPm.h **** #if(CY_IP_SRSSV2)
 164:.\Generated_Source\PSoC4/cyPm.h ****     #define CY_PM_PWR_STOP_REG              (*(reg32 *) CYREG_PWR_STOP)
 165:.\Generated_Source\PSoC4/cyPm.h ****     #define CY_PM_PWR_STOP_PTR              ( (reg32 *) CYREG_PWR_STOP)
 166:.\Generated_Source\PSoC4/cyPm.h **** #endif /* (CY_IP_SRSSV2) */
 167:.\Generated_Source\PSoC4/cyPm.h **** 
 168:.\Generated_Source\PSoC4/cyPm.h **** #if (CY_PSOC4_4100 || CY_PSOC4_4200)
 169:.\Generated_Source\PSoC4/cyPm.h ****     /* CPU Subsystem Configuration */
 170:.\Generated_Source\PSoC4/cyPm.h ****     #define CY_PM_CPUSS_CONFIG_REG             (*(reg32 *) CYREG_CPUSS_CONFIG)
 171:.\Generated_Source\PSoC4/cyPm.h ****     #define CY_PM_CPUSS_CONFIG_PTR             ( (reg32 *) CYREG_CPUSS_CONFIG)
 172:.\Generated_Source\PSoC4/cyPm.h **** #endif /* (CY_PSOC4_4100 || CY_PSOC4_4200) */
 173:.\Generated_Source\PSoC4/cyPm.h **** 
 174:.\Generated_Source\PSoC4/cyPm.h **** 
 175:.\Generated_Source\PSoC4/cyPm.h **** /***************************************
 176:.\Generated_Source\PSoC4/cyPm.h **** *       Register Constants
 177:.\Generated_Source\PSoC4/cyPm.h **** ***************************************/
 178:.\Generated_Source\PSoC4/cyPm.h **** 
 179:.\Generated_Source\PSoC4/cyPm.h **** /* CM0 System Control Register Constants */
 180:.\Generated_Source\PSoC4/cyPm.h **** #define CY_PM_CPU_SCR_SLEEPDEEP             ((uint32)(0x04u))
 181:.\Generated_Source\PSoC4/cyPm.h **** 
 182:.\Generated_Source\PSoC4/cyPm.h **** #if(CY_IP_SRSSV2)
 183:.\Generated_Source\PSoC4/cyPm.h ****     /* Power Mode Control Constants */
 184:.\Generated_Source\PSoC4/cyPm.h ****     #define CY_PM_PWR_CONTROL_HIBERNATE         (0x80000000u)
 185:.\Generated_Source\PSoC4/cyPm.h **** 
 186:.\Generated_Source\PSoC4/cyPm.h ****     /* Power Mode Stop Constants */
 187:.\Generated_Source\PSoC4/cyPm.h ****     #define CY_PM_PWR_STOP_POLARITY_SHIFT       (16u)
 188:.\Generated_Source\PSoC4/cyPm.h ****     #define CY_PM_PWR_STOP_POLARITY             ((uint32)((uint32)1u << CY_PM_PWR_STOP_POLARITY_SHI
 189:.\Generated_Source\PSoC4/cyPm.h ****     #define CY_PM_PWR_STOP_FREEZE_SHIFT         (17u)
 190:.\Generated_Source\PSoC4/cyPm.h ****     #define CY_PM_PWR_STOP_FREEZE               ((uint32)((uint32)1u << CY_PM_PWR_STOP_FREEZE_SHIFT
 191:.\Generated_Source\PSoC4/cyPm.h ****     #define CY_PM_PWR_STOP_UNLOCK_SHIFT         (8u)
 192:.\Generated_Source\PSoC4/cyPm.h ****     #define CY_PM_PWR_STOP_UNLOCK_MASK          ((uint32)((uint32)0xFFu << CY_PM_PWR_STOP_UNLOCK_SH
 193:.\Generated_Source\PSoC4/cyPm.h ****     #define CY_PM_PWR_STOP_UNLOCK               ((uint32)((uint32)0x3Au << CY_PM_PWR_STOP_UNLOCK_SH
 194:.\Generated_Source\PSoC4/cyPm.h ****     #define CY_PM_PWR_STOP_STOP_SHIFT           (31u)
 195:.\Generated_Source\PSoC4/cyPm.h ****     #define CY_PM_PWR_STOP_STOP                 ((uint32)((uint32)1u << CY_PM_PWR_STOP_STOP_SHIFT))
 196:.\Generated_Source\PSoC4/cyPm.h ****     #define CY_PM_PWR_STOP_TOKEN_MASK           ((uint32)(0xFFu))
 197:.\Generated_Source\PSoC4/cyPm.h ****     #define CY_PM_PWR_STOP_TOKEN_XRES           ((uint32)(0x00u))
 198:.\Generated_Source\PSoC4/cyPm.h ****     #define CY_PM_PWR_STOP_TOKEN_HIB            ((uint32)(0xF1u))
 199:.\Generated_Source\PSoC4/cyPm.h ****     #define CY_PM_PWR_STOP_TOKEN_STOP           ((uint32)(0xF2u))
 200:.\Generated_Source\PSoC4/cyPm.h **** #else
 201:.\Generated_Source\PSoC4/cyPm.h ****     #define CY_PM_PWR_KEY_DELAY_REG_DEFAULT     ((uint32) 248u)
 202:.\Generated_Source\PSoC4/cyPm.h ****     #define CY_PM_PWR_KEY_DELAY_FREQ_DEFAULT    (48u)
 203:.\Generated_Source\PSoC4/cyPm.h **** #endif /* (CY_IP_SRSSV2) */
 204:.\Generated_Source\PSoC4/cyPm.h **** 
 205:.\Generated_Source\PSoC4/cyPm.h **** #if (CY_PSOC4_4100 || CY_PSOC4_4200)
 206:.\Generated_Source\PSoC4/cyPm.h ****     /* 0 - normal operation, 1 - Flash Accelerator in bypass mode */
 207:.\Generated_Source\PSoC4/cyPm.h ****     #define CY_PM_CPUSS_CONFIG_FLSH_ACC_BYPASS      ((uint32) 0x02u)
 208:.\Generated_Source\PSoC4/cyPm.h **** #endif /* (CY_PSOC4_4100 || CY_PSOC4_4200) */
 209:.\Generated_Source\PSoC4/cyPm.h **** 
 210:.\Generated_Source\PSoC4/cyPm.h **** 
 211:.\Generated_Source\PSoC4/cyPm.h **** #if (CY_IP_SRSSV2)
 212:.\Generated_Source\PSoC4/cyPm.h ****     #if (CY_IP_HOBTO_DEVICE)
 213:.\Generated_Source\PSoC4/cyPm.h ****         /*******************************************************************************
 214:.\Generated_Source\PSoC4/cyPm.h ****         * Function Name: CySysPmHibPinsDisableInputBuf
 215:.\Generated_Source\PSoC4/cyPm.h ****         ****************************************************************************//**
ARM GAS  C:\Users\LAIR\AppData\Local\Temp\ccSTC7Mo.s 			page 10


 216:.\Generated_Source\PSoC4/cyPm.h ****         *
 217:.\Generated_Source\PSoC4/cyPm.h ****         *  Disable the input buffer for all the port. This is required before Hibernate
 218:.\Generated_Source\PSoC4/cyPm.h ****         *  mode entry as the operation of the input buffer is not guaranteed if VCCD
 219:.\Generated_Source\PSoC4/cyPm.h ****         *  drops down to 1.0 V.
 220:.\Generated_Source\PSoC4/cyPm.h ****         *
 221:.\Generated_Source\PSoC4/cyPm.h ****         *******************************************************************************/
 222:.\Generated_Source\PSoC4/cyPm.h ****         static CY_INLINE void CySysPmHibPinsDisableInputBuf(void)
 223:.\Generated_Source\PSoC4/cyPm.h ****         {
 224:.\Generated_Source\PSoC4/cyPm.h ****             #ifdef CYREG_GPIO_PRT0_PC
 225:.\Generated_Source\PSoC4/cyPm.h ****                 CY_CLEAR_REG32_FIELD(CYREG_GPIO_PRT0_PC, CYFLD_GPIO_PRT_PORT_IB_MODE_SEL);
 157              		.loc 2 225 0
 158 0006 2E4A     		ldr	r2, .L8
 159 0008 1368     		ldr	r3, [r2]
 160 000a 9B00     		lsl	r3, r3, #2
 161 000c 9B08     		lsr	r3, r3, #2
 162 000e 1360     		str	r3, [r2]
 226:.\Generated_Source\PSoC4/cyPm.h ****             #endif /* CYREG_GPIO_PRT0_PC */
 227:.\Generated_Source\PSoC4/cyPm.h **** 
 228:.\Generated_Source\PSoC4/cyPm.h ****             #ifdef CYREG_GPIO_PRT1_PC
 229:.\Generated_Source\PSoC4/cyPm.h ****                 CY_CLEAR_REG32_FIELD( CYREG_GPIO_PRT1_PC, CYFLD_GPIO_PRT_PORT_IB_MODE_SEL);
 163              		.loc 2 229 0
 164 0010 2C4A     		ldr	r2, .L8+4
 165 0012 1368     		ldr	r3, [r2]
 166 0014 9B00     		lsl	r3, r3, #2
 167 0016 9B08     		lsr	r3, r3, #2
 168 0018 1360     		str	r3, [r2]
 230:.\Generated_Source\PSoC4/cyPm.h ****             #endif /* CYREG_GPIO_PRT1_PC */
 231:.\Generated_Source\PSoC4/cyPm.h **** 
 232:.\Generated_Source\PSoC4/cyPm.h ****             #ifdef CYREG_GPIO_PRT2_PC
 233:.\Generated_Source\PSoC4/cyPm.h ****                 CY_CLEAR_REG32_FIELD( CYREG_GPIO_PRT2_PC, CYFLD_GPIO_PRT_PORT_IB_MODE_SEL);
 169              		.loc 2 233 0
 170 001a 2B4A     		ldr	r2, .L8+8
 171 001c 1368     		ldr	r3, [r2]
 172 001e 9B00     		lsl	r3, r3, #2
 173 0020 9B08     		lsr	r3, r3, #2
 174 0022 1360     		str	r3, [r2]
 234:.\Generated_Source\PSoC4/cyPm.h ****             #endif /* CYREG_GPIO_PRT2_PC */
 235:.\Generated_Source\PSoC4/cyPm.h **** 
 236:.\Generated_Source\PSoC4/cyPm.h ****             #ifdef CYREG_GPIO_PRT3_PC
 237:.\Generated_Source\PSoC4/cyPm.h ****                 CY_CLEAR_REG32_FIELD( CYREG_GPIO_PRT3_PC, CYFLD_GPIO_PRT_PORT_IB_MODE_SEL);
 175              		.loc 2 237 0
 176 0024 294A     		ldr	r2, .L8+12
 177 0026 1368     		ldr	r3, [r2]
 178 0028 9B00     		lsl	r3, r3, #2
 179 002a 9B08     		lsr	r3, r3, #2
 180 002c 1360     		str	r3, [r2]
 238:.\Generated_Source\PSoC4/cyPm.h ****             #endif /* CYREG_GPIO_PRT3_PC */
 239:.\Generated_Source\PSoC4/cyPm.h **** 
 240:.\Generated_Source\PSoC4/cyPm.h ****             #ifdef CYREG_GPIO_PRT4_PC
 241:.\Generated_Source\PSoC4/cyPm.h ****                 CY_CLEAR_REG32_FIELD( CYREG_GPIO_PRT4_PC, CYFLD_GPIO_PRT_PORT_IB_MODE_SEL);
 181              		.loc 2 241 0
 182 002e 284A     		ldr	r2, .L8+16
 183 0030 1368     		ldr	r3, [r2]
 184 0032 9B00     		lsl	r3, r3, #2
 185 0034 9B08     		lsr	r3, r3, #2
 186 0036 1360     		str	r3, [r2]
 242:.\Generated_Source\PSoC4/cyPm.h ****             #endif /* CYREG_GPIO_PRT4_PC */
ARM GAS  C:\Users\LAIR\AppData\Local\Temp\ccSTC7Mo.s 			page 11


 243:.\Generated_Source\PSoC4/cyPm.h **** 
 244:.\Generated_Source\PSoC4/cyPm.h ****             #ifdef CYREG_GPIO_PRT5_PC
 245:.\Generated_Source\PSoC4/cyPm.h ****                 CY_CLEAR_REG32_FIELD( CYREG_GPIO_PRT5_PC, CYFLD_GPIO_PRT_PORT_IB_MODE_SEL);
 187              		.loc 2 245 0
 188 0038 264A     		ldr	r2, .L8+20
 189 003a 1368     		ldr	r3, [r2]
 190 003c 9B00     		lsl	r3, r3, #2
 191 003e 9B08     		lsr	r3, r3, #2
 192 0040 1360     		str	r3, [r2]
 246:.\Generated_Source\PSoC4/cyPm.h ****             #endif /* CYREG_GPIO_PRT5_PC */
 247:.\Generated_Source\PSoC4/cyPm.h **** 
 248:.\Generated_Source\PSoC4/cyPm.h ****             #ifdef CYREG_GPIO_PRT6_PC
 249:.\Generated_Source\PSoC4/cyPm.h ****                 CY_CLEAR_REG32_FIELD( CYREG_GPIO_PRT6_PC, CYFLD_GPIO_PRT_PORT_IB_MODE_SEL);
 193              		.loc 2 249 0
 194 0042 254A     		ldr	r2, .L8+24
 195 0044 1368     		ldr	r3, [r2]
 196 0046 9B00     		lsl	r3, r3, #2
 197 0048 9B08     		lsr	r3, r3, #2
 198 004a 1360     		str	r3, [r2]
 250:.\Generated_Source\PSoC4/cyPm.h ****             #endif /* CYREG_GPIO_PRT6_PC */
 251:.\Generated_Source\PSoC4/cyPm.h **** 
 252:.\Generated_Source\PSoC4/cyPm.h ****             #ifdef CYREG_GPIO_PRT7_PC
 253:.\Generated_Source\PSoC4/cyPm.h ****                 CY_CLEAR_REG32_FIELD( CYREG_GPIO_PRT7_PC, CYFLD_GPIO_PRT_PORT_IB_MODE_SEL);
 199              		.loc 2 253 0
 200 004c 234A     		ldr	r2, .L8+28
 201 004e 1368     		ldr	r3, [r2]
 202 0050 9B00     		lsl	r3, r3, #2
 203 0052 9B08     		lsr	r3, r3, #2
 204 0054 1360     		str	r3, [r2]
 254:.\Generated_Source\PSoC4/cyPm.h ****             #endif /* CYREG_GPIO_PRT7_PC */
 255:.\Generated_Source\PSoC4/cyPm.h **** 
 256:.\Generated_Source\PSoC4/cyPm.h ****             #ifdef CYREG_GPIO_PRT8_PC
 257:.\Generated_Source\PSoC4/cyPm.h ****                 CY_CLEAR_REG32_FIELD( CYREG_GPIO_PRT8_PC, CYFLD_GPIO_PRT_PORT_IB_MODE_SEL);
 205              		.loc 2 257 0
 206 0056 224A     		ldr	r2, .L8+32
 207 0058 1368     		ldr	r3, [r2]
 208 005a 9B00     		lsl	r3, r3, #2
 209 005c 9B08     		lsr	r3, r3, #2
 210 005e 1360     		str	r3, [r2]
 258:.\Generated_Source\PSoC4/cyPm.h ****             #endif /* CYREG_GPIO_PRT8_PC */
 259:.\Generated_Source\PSoC4/cyPm.h **** 
 260:.\Generated_Source\PSoC4/cyPm.h ****             #ifdef CYREG_GPIO_PRT9_PC
 261:.\Generated_Source\PSoC4/cyPm.h ****                 CY_CLEAR_REG32_FIELD( CYREG_GPIO_PRT9_PC, CYFLD_GPIO_PRT_PORT_IB_MODE_SEL);
 211              		.loc 2 261 0
 212 0060 204A     		ldr	r2, .L8+36
 213 0062 1368     		ldr	r3, [r2]
 214 0064 9B00     		lsl	r3, r3, #2
 215 0066 9B08     		lsr	r3, r3, #2
 216 0068 1360     		str	r3, [r2]
 262:.\Generated_Source\PSoC4/cyPm.h ****             #endif /* CYREG_GPIO_PRT9_PC */
 263:.\Generated_Source\PSoC4/cyPm.h **** 
 264:.\Generated_Source\PSoC4/cyPm.h ****             #ifdef CYREG_GPIO_PRT10_PC
 265:.\Generated_Source\PSoC4/cyPm.h ****                 CY_CLEAR_REG32_FIELD(CYREG_GPIO_PRT10_PC, CYFLD_GPIO_PRT_PORT_IB_MODE_SEL);
 217              		.loc 2 265 0
 218 006a 1F4A     		ldr	r2, .L8+40
 219 006c 1368     		ldr	r3, [r2]
 220 006e 9B00     		lsl	r3, r3, #2
ARM GAS  C:\Users\LAIR\AppData\Local\Temp\ccSTC7Mo.s 			page 12


 221 0070 9B08     		lsr	r3, r3, #2
 222 0072 1360     		str	r3, [r2]
 266:.\Generated_Source\PSoC4/cyPm.h ****             #endif /* CYREG_GPIO_PRT10_PC */
 267:.\Generated_Source\PSoC4/cyPm.h **** 
 268:.\Generated_Source\PSoC4/cyPm.h ****             #ifdef CYREG_GPIO_PRT11_PC
 269:.\Generated_Source\PSoC4/cyPm.h ****                 CY_CLEAR_REG32_FIELD(CYREG_GPIO_PRT11_PC, CYFLD_GPIO_PRT_PORT_IB_MODE_SEL);
 223              		.loc 2 269 0
 224 0074 1D4A     		ldr	r2, .L8+44
 225 0076 1368     		ldr	r3, [r2]
 226 0078 9B00     		lsl	r3, r3, #2
 227 007a 9B08     		lsr	r3, r3, #2
 228 007c 1360     		str	r3, [r2]
 270:.\Generated_Source\PSoC4/cyPm.h ****             #endif /* CYREG_GPIO_PRT11_PC */
 271:.\Generated_Source\PSoC4/cyPm.h **** 
 272:.\Generated_Source\PSoC4/cyPm.h ****             #ifdef CYREG_GPIO_PRT12_PC
 273:.\Generated_Source\PSoC4/cyPm.h ****                 CY_CLEAR_REG32_FIELD(CYREG_GPIO_PRT12_PC, CYFLD_GPIO_PRT_PORT_IB_MODE_SEL);
 229              		.loc 2 273 0
 230 007e 1C4A     		ldr	r2, .L8+48
 231 0080 1368     		ldr	r3, [r2]
 232 0082 9B00     		lsl	r3, r3, #2
 233 0084 9B08     		lsr	r3, r3, #2
 234 0086 1360     		str	r3, [r2]
 235              	.LBE5:
 236              	.LBE4:
 143:.\Generated_Source\PSoC4/cyPm.c **** 
 144:.\Generated_Source\PSoC4/cyPm.c ****         #if (CY_IP_HOBTO_DEVICE)
 145:.\Generated_Source\PSoC4/cyPm.c ****             /* Disable input buffers for all ports */
 146:.\Generated_Source\PSoC4/cyPm.c ****             CySysPmHibPinsDisableInputBuf();
 147:.\Generated_Source\PSoC4/cyPm.c ****         #endif /* (CY_IP_HOBTO_DEVICE) */
 148:.\Generated_Source\PSoC4/cyPm.c **** 
 149:.\Generated_Source\PSoC4/cyPm.c ****         /* Device enters Hibernate mode when CPU asserts SLEEPDEEP signal */
 150:.\Generated_Source\PSoC4/cyPm.c ****         CY_PM_PWR_CONTROL_REG |= CY_PM_PWR_CONTROL_HIBERNATE;
 237              		.loc 1 150 0
 238 0088 1A4A     		ldr	r2, .L8+52
 239 008a 1368     		ldr	r3, [r2]
 240 008c 8021     		mov	r1, #128
 241 008e 0906     		lsl	r1, r1, #24
 242 0090 0B43     		orr	r3, r1
 243 0092 1360     		str	r3, [r2]
 151:.\Generated_Source\PSoC4/cyPm.c **** 
 152:.\Generated_Source\PSoC4/cyPm.c ****         /* Adjust delay to wait for references to settle on wakeup from hibernate */
 153:.\Generated_Source\PSoC4/cyPm.c ****         CY_PM_PWR_KEY_DELAY_REG = CY_SFLASH_HIB_KEY_DELAY_REG;
 244              		.loc 1 153 0
 245 0094 184B     		ldr	r3, .L8+56
 246 0096 1B88     		ldrh	r3, [r3]
 247 0098 9BB2     		uxth	r3, r3
 248 009a 184A     		ldr	r2, .L8+60
 249 009c 1360     		str	r3, [r2]
 154:.\Generated_Source\PSoC4/cyPm.c **** 
 155:.\Generated_Source\PSoC4/cyPm.c ****         /* CPU enters DeepSleep/Hibernate mode upon execution of WFI */
 156:.\Generated_Source\PSoC4/cyPm.c ****         CY_PM_CPU_SCR_REG |= CY_PM_CPU_SCR_SLEEPDEEP;
 250              		.loc 1 156 0
 251 009e 184A     		ldr	r2, .L8+64
 252 00a0 1168     		ldr	r1, [r2]
 253 00a2 0423     		mov	r3, #4
 254 00a4 0B43     		orr	r3, r1
 255 00a6 1360     		str	r3, [r2]
ARM GAS  C:\Users\LAIR\AppData\Local\Temp\ccSTC7Mo.s 			page 13


 157:.\Generated_Source\PSoC4/cyPm.c **** 
 158:.\Generated_Source\PSoC4/cyPm.c ****         /* Save token that will retain through a STOP/WAKEUP sequence
 159:.\Generated_Source\PSoC4/cyPm.c ****          * thus could be used by CySysPmGetResetReason() to differentiate
 160:.\Generated_Source\PSoC4/cyPm.c ****          * WAKEUP from a general RESET event.
 161:.\Generated_Source\PSoC4/cyPm.c ****          */
 162:.\Generated_Source\PSoC4/cyPm.c ****         CY_PM_PWR_STOP_REG = (CY_PM_PWR_STOP_REG & (uint32)(~CY_PM_PWR_STOP_TOKEN_MASK)) | CY_PM_PW
 256              		.loc 1 162 0
 257 00a8 1649     		ldr	r1, .L8+68
 258 00aa 0B68     		ldr	r3, [r1]
 259 00ac FF22     		mov	r2, #255
 260 00ae 9343     		bic	r3, r2
 261 00b0 0E3A     		sub	r2, r2, #14
 262 00b2 1343     		orr	r3, r2
 263 00b4 0B60     		str	r3, [r1]
 163:.\Generated_Source\PSoC4/cyPm.c **** 
 164:.\Generated_Source\PSoC4/cyPm.c ****         /* Sleep and wait for interrupt. Wakeup from Hibernate is performed
 165:.\Generated_Source\PSoC4/cyPm.c ****          * through RESET state, causing a normal Boot procedure to occur.
 166:.\Generated_Source\PSoC4/cyPm.c ****          * The WFI instruction doesn't put the core to sleep if its wake condition
 167:.\Generated_Source\PSoC4/cyPm.c ****          * is true when the instruction is executed.
 168:.\Generated_Source\PSoC4/cyPm.c ****          */
 169:.\Generated_Source\PSoC4/cyPm.c ****         CY_PM_WFI;
 264              		.loc 1 169 0
 265              	@ 169 ".\Generated_Source\PSoC4\cyPm.c" 1
 266 00b6 30BF     		WFI 
 267              	
 268              	@ 0 "" 2
 170:.\Generated_Source\PSoC4/cyPm.c **** 
 171:.\Generated_Source\PSoC4/cyPm.c ****         CyExitCriticalSection(interruptState);
 269              		.loc 1 171 0
 270              		.code	16
 271 00b8 FFF7FEFF 		bl	CyExitCriticalSection
 272              	.LVL8:
 172:.\Generated_Source\PSoC4/cyPm.c ****     }
 273              		.loc 1 172 0
 274              		@ sp needed
 275 00bc 08BD     		pop	{r3, pc}
 276              	.L9:
 277 00be C046     		.align	2
 278              	.L8:
 279 00c0 08000440 		.word	1074003976
 280 00c4 08010440 		.word	1074004232
 281 00c8 08020440 		.word	1074004488
 282 00cc 08030440 		.word	1074004744
 283 00d0 08040440 		.word	1074005000
 284 00d4 08050440 		.word	1074005256
 285 00d8 08060440 		.word	1074005512
 286 00dc 08070440 		.word	1074005768
 287 00e0 08080440 		.word	1074006024
 288 00e4 08090440 		.word	1074006280
 289 00e8 080A0440 		.word	1074006536
 290 00ec 080B0440 		.word	1074006792
 291 00f0 080C0440 		.word	1074007048
 292 00f4 00000B40 		.word	1074462720
 293 00f8 50F2FF0F 		.word	268431952
 294 00fc 0C000B40 		.word	1074462732
 295 0100 10ED00E0 		.word	-536810224
 296 0104 2C000B40 		.word	1074462764
ARM GAS  C:\Users\LAIR\AppData\Local\Temp\ccSTC7Mo.s 			page 14


 297              		.cfi_endproc
 298              	.LFE4:
 299              		.size	CySysPmHibernate, .-CySysPmHibernate
 300              		.section	.text.CySysPmSetWakeupPolarity,"ax",%progbits
 301              		.align	2
 302              		.global	CySysPmSetWakeupPolarity
 303              		.code	16
 304              		.thumb_func
 305              		.type	CySysPmSetWakeupPolarity, %function
 306              	CySysPmSetWakeupPolarity:
 307              	.LFB6:
 173:.\Generated_Source\PSoC4/cyPm.c **** 
 174:.\Generated_Source\PSoC4/cyPm.c **** 
 175:.\Generated_Source\PSoC4/cyPm.c ****     /*******************************************************************************
 176:.\Generated_Source\PSoC4/cyPm.c ****     * Function Name: CySysPmStop
 177:.\Generated_Source\PSoC4/cyPm.c ****     ****************************************************************************//**
 178:.\Generated_Source\PSoC4/cyPm.c ****     *
 179:.\Generated_Source\PSoC4/cyPm.c ****     * Puts the part into the Stop state. All internal supplies are off;
 180:.\Generated_Source\PSoC4/cyPm.c ****     * no state is retained.
 181:.\Generated_Source\PSoC4/cyPm.c ****     *
 182:.\Generated_Source\PSoC4/cyPm.c ****     * Wakeup from Stop is performed by toggling the wakeup pin, causing
 183:.\Generated_Source\PSoC4/cyPm.c ****     * a normal boot procedure to occur. To configure the wakeup pin,
 184:.\Generated_Source\PSoC4/cyPm.c ****     * the Digital Input Pin component should be placed on the schematic,
 185:.\Generated_Source\PSoC4/cyPm.c ****     * assigned to the wakeup pin, and resistively pulled up or down to the inverse
 186:.\Generated_Source\PSoC4/cyPm.c ****     * state of the wakeup polarity. To distinguish the wakeup from the Stop mode
 187:.\Generated_Source\PSoC4/cyPm.c ****     * and the general Reset event, \ref CySysPmGetResetReason() function could be
 188:.\Generated_Source\PSoC4/cyPm.c ****     * used.  The wakeup pin is active low by default. The wakeup pin polarity
 189:.\Generated_Source\PSoC4/cyPm.c ****     * could be changed with the \ref CySysPmSetWakeupPolarity() function.
 190:.\Generated_Source\PSoC4/cyPm.c ****     *
 191:.\Generated_Source\PSoC4/cyPm.c ****     * This function freezes IO cells implicitly. It is not possible to enter
 192:.\Generated_Source\PSoC4/cyPm.c ****     * the STOP mode before freezing the IO cells. The IO cells remain frozen after
 193:.\Generated_Source\PSoC4/cyPm.c ****     * awake from the Stop mode until the firmware unfreezes them after booting
 194:.\Generated_Source\PSoC4/cyPm.c ****     * explicitly with \ref CySysPmUnfreezeIo() function call.
 195:.\Generated_Source\PSoC4/cyPm.c ****     *
 196:.\Generated_Source\PSoC4/cyPm.c ****     *******************************************************************************/
 197:.\Generated_Source\PSoC4/cyPm.c ****     void CySysPmStop(void)
 198:.\Generated_Source\PSoC4/cyPm.c ****     {
 199:.\Generated_Source\PSoC4/cyPm.c ****         (void) CyEnterCriticalSection();
 200:.\Generated_Source\PSoC4/cyPm.c **** 
 201:.\Generated_Source\PSoC4/cyPm.c ****         /* Update token to indicate Stop mode transition. Preserve only polarity. */
 202:.\Generated_Source\PSoC4/cyPm.c ****         CY_PM_PWR_STOP_REG = (CY_PM_PWR_STOP_REG & CY_PM_PWR_STOP_POLARITY) | CY_PM_PWR_STOP_TOKEN_
 203:.\Generated_Source\PSoC4/cyPm.c **** 
 204:.\Generated_Source\PSoC4/cyPm.c ****         /* Freeze IO-Cells to save IO-Cell state */
 205:.\Generated_Source\PSoC4/cyPm.c ****         CySysPmFreezeIo();
 206:.\Generated_Source\PSoC4/cyPm.c **** 
 207:.\Generated_Source\PSoC4/cyPm.c ****         /* Initiates transition to Stop state */
 208:.\Generated_Source\PSoC4/cyPm.c ****         CY_PM_PWR_STOP_REG = CY_PM_PWR_STOP_REG | CY_PM_PWR_STOP_STOP;
 209:.\Generated_Source\PSoC4/cyPm.c **** 
 210:.\Generated_Source\PSoC4/cyPm.c ****         /* Depending on the clock frequency and internal timing delays,
 211:.\Generated_Source\PSoC4/cyPm.c ****          * the final AHB transaction may or may not complete. To guard against
 212:.\Generated_Source\PSoC4/cyPm.c ****          * accidentally executing an unintended instruction, it is recommended
 213:.\Generated_Source\PSoC4/cyPm.c ****          * to add 2 NOP cycles after the final write to the STOP register.
 214:.\Generated_Source\PSoC4/cyPm.c ****          */
 215:.\Generated_Source\PSoC4/cyPm.c ****         CY_NOP;
 216:.\Generated_Source\PSoC4/cyPm.c ****         CY_NOP;
 217:.\Generated_Source\PSoC4/cyPm.c **** 
 218:.\Generated_Source\PSoC4/cyPm.c ****         /* Should never get to this WFI instruction */
ARM GAS  C:\Users\LAIR\AppData\Local\Temp\ccSTC7Mo.s 			page 15


 219:.\Generated_Source\PSoC4/cyPm.c ****         CY_PM_WFI;
 220:.\Generated_Source\PSoC4/cyPm.c **** 
 221:.\Generated_Source\PSoC4/cyPm.c ****         /* Wakeup from Stop is performed by toggling of Wakeup pin,
 222:.\Generated_Source\PSoC4/cyPm.c ****          * causing a normal Boot procedure to occur. No need to exit
 223:.\Generated_Source\PSoC4/cyPm.c ****          * from the critical section.
 224:.\Generated_Source\PSoC4/cyPm.c ****          */
 225:.\Generated_Source\PSoC4/cyPm.c ****     }
 226:.\Generated_Source\PSoC4/cyPm.c **** 
 227:.\Generated_Source\PSoC4/cyPm.c **** 
 228:.\Generated_Source\PSoC4/cyPm.c ****     /*******************************************************************************
 229:.\Generated_Source\PSoC4/cyPm.c ****     * Function Name: CySysPmSetWakeupPolarity
 230:.\Generated_Source\PSoC4/cyPm.c ****     ****************************************************************************//**
 231:.\Generated_Source\PSoC4/cyPm.c ****     *
 232:.\Generated_Source\PSoC4/cyPm.c ****     * Wake up from the stop mode is performed by toggling the wakeup pin,
 233:.\Generated_Source\PSoC4/cyPm.c ****     * causing a normal boot procedure to occur. This function assigns
 234:.\Generated_Source\PSoC4/cyPm.c ****     * the wakeup pin active level. Setting the wakeup pin to this level will cause
 235:.\Generated_Source\PSoC4/cyPm.c ****     * the wakeup from stop mode. The wakeup pin is active low by default.
 236:.\Generated_Source\PSoC4/cyPm.c ****     *
 237:.\Generated_Source\PSoC4/cyPm.c ****     * \param polarity
 238:.\Generated_Source\PSoC4/cyPm.c ****     * - \ref CY_PM_STOP_WAKEUP_ACTIVE_LOW Logical zero will wakeup the chip
 239:.\Generated_Source\PSoC4/cyPm.c ****     * - \ref CY_PM_STOP_WAKEUP_ACTIVE_HIGH Logical one will wakeup the chip
 240:.\Generated_Source\PSoC4/cyPm.c ****     *
 241:.\Generated_Source\PSoC4/cyPm.c ****     *******************************************************************************/
 242:.\Generated_Source\PSoC4/cyPm.c ****     void CySysPmSetWakeupPolarity(uint32 polarity)
 243:.\Generated_Source\PSoC4/cyPm.c ****     {
 308              		.loc 1 243 0
 309              		.cfi_startproc
 310              	.LVL9:
 311 0000 10B5     		push	{r4, lr}
 312              		.cfi_def_cfa_offset 8
 313              		.cfi_offset 4, -8
 314              		.cfi_offset 14, -4
 315 0002 041C     		mov	r4, r0
 244:.\Generated_Source\PSoC4/cyPm.c ****         uint8 interruptState;
 245:.\Generated_Source\PSoC4/cyPm.c **** 
 246:.\Generated_Source\PSoC4/cyPm.c ****         interruptState = CyEnterCriticalSection();
 316              		.loc 1 246 0
 317 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 318              	.LVL10:
 247:.\Generated_Source\PSoC4/cyPm.c **** 
 248:.\Generated_Source\PSoC4/cyPm.c ****         CY_PM_PWR_STOP_REG = (CY_PM_STOP_WAKEUP_ACTIVE_LOW != polarity) ?
 249:.\Generated_Source\PSoC4/cyPm.c ****                             (CY_PM_PWR_STOP_REG | CY_PM_PWR_STOP_POLARITY) :
 319              		.loc 1 249 0
 320 0008 002C     		cmp	r4, #0
 321 000a 05D0     		beq	.L11
 322              		.loc 1 249 0 is_stmt 0 discriminator 1
 323 000c 074B     		ldr	r3, .L13
 324 000e 1B68     		ldr	r3, [r3]
 325 0010 8022     		mov	r2, #128
 326 0012 5202     		lsl	r2, r2, #9
 327 0014 1343     		orr	r3, r2
 328 0016 03E0     		b	.L12
 329              	.L11:
 250:.\Generated_Source\PSoC4/cyPm.c ****                             (CY_PM_PWR_STOP_REG & (uint32) (~CY_PM_PWR_STOP_POLARITY));
 330              		.loc 1 250 0 is_stmt 1 discriminator 2
 331 0018 044B     		ldr	r3, .L13
 332 001a 1A68     		ldr	r2, [r3]
ARM GAS  C:\Users\LAIR\AppData\Local\Temp\ccSTC7Mo.s 			page 16


 249:.\Generated_Source\PSoC4/cyPm.c ****                             (CY_PM_PWR_STOP_REG & (uint32) (~CY_PM_PWR_STOP_POLARITY));
 333              		.loc 1 249 0 discriminator 2
 334 001c 044B     		ldr	r3, .L13+4
 335 001e 1340     		and	r3, r2
 336              	.L12:
 248:.\Generated_Source\PSoC4/cyPm.c ****                             (CY_PM_PWR_STOP_REG | CY_PM_PWR_STOP_POLARITY) :
 337              		.loc 1 248 0
 338 0020 024A     		ldr	r2, .L13
 339 0022 1360     		str	r3, [r2]
 251:.\Generated_Source\PSoC4/cyPm.c **** 
 252:.\Generated_Source\PSoC4/cyPm.c ****         CyExitCriticalSection(interruptState);
 340              		.loc 1 252 0
 341 0024 FFF7FEFF 		bl	CyExitCriticalSection
 342              	.LVL11:
 253:.\Generated_Source\PSoC4/cyPm.c ****     }
 343              		.loc 1 253 0
 344              		@ sp needed
 345              	.LVL12:
 346 0028 10BD     		pop	{r4, pc}
 347              	.L14:
 348 002a C046     		.align	2
 349              	.L13:
 350 002c 2C000B40 		.word	1074462764
 351 0030 FFFFFEFF 		.word	-65537
 352              		.cfi_endproc
 353              	.LFE6:
 354              		.size	CySysPmSetWakeupPolarity, .-CySysPmSetWakeupPolarity
 355              		.section	.text.CySysPmGetResetReason,"ax",%progbits
 356              		.align	2
 357              		.global	CySysPmGetResetReason
 358              		.code	16
 359              		.thumb_func
 360              		.type	CySysPmGetResetReason, %function
 361              	CySysPmGetResetReason:
 362              	.LFB7:
 254:.\Generated_Source\PSoC4/cyPm.c **** 
 255:.\Generated_Source\PSoC4/cyPm.c **** 
 256:.\Generated_Source\PSoC4/cyPm.c ****     /*******************************************************************************
 257:.\Generated_Source\PSoC4/cyPm.c ****     * Function Name: CySysPmGetResetReason
 258:.\Generated_Source\PSoC4/cyPm.c ****     ****************************************************************************//**
 259:.\Generated_Source\PSoC4/cyPm.c ****     *
 260:.\Generated_Source\PSoC4/cyPm.c ****     * Retrieves the last reset reason - transition from OFF/XRES/STOP/HIBERNATE to
 261:.\Generated_Source\PSoC4/cyPm.c ****     * the RESET state. Note that waking up from STOP using XRES will be perceived
 262:.\Generated_Source\PSoC4/cyPm.c ****     * as a general RESET.
 263:.\Generated_Source\PSoC4/cyPm.c ****     *
 264:.\Generated_Source\PSoC4/cyPm.c ****     * \return CY_PM_RESET_REASON_UNKN          Unknown reset reason.
 265:.\Generated_Source\PSoC4/cyPm.c ****     * \return CY_PM_RESET_REASON_XRES          Transition from OFF/XRES to RESET
 266:.\Generated_Source\PSoC4/cyPm.c ****     * \return CY_PM_RESET_REASON_WAKEUP_HIB    Transition/wakeup from HIBERNATE to RESET
 267:.\Generated_Source\PSoC4/cyPm.c ****     * \return CY_PM_RESET_REASON_WAKEUP_STOP   Transition/wakeup from STOP to RESET
 268:.\Generated_Source\PSoC4/cyPm.c ****     *
 269:.\Generated_Source\PSoC4/cyPm.c ****     *******************************************************************************/
 270:.\Generated_Source\PSoC4/cyPm.c ****     uint32 CySysPmGetResetReason(void)
 271:.\Generated_Source\PSoC4/cyPm.c ****     {
 363              		.loc 1 271 0
 364              		.cfi_startproc
 365              	.LVL13:
 272:.\Generated_Source\PSoC4/cyPm.c ****         uint32 reason = CY_PM_RESET_REASON_UNKN;
ARM GAS  C:\Users\LAIR\AppData\Local\Temp\ccSTC7Mo.s 			page 17


 273:.\Generated_Source\PSoC4/cyPm.c **** 
 274:.\Generated_Source\PSoC4/cyPm.c ****         switch(CY_PM_PWR_STOP_REG & CY_PM_PWR_STOP_TOKEN_MASK)
 366              		.loc 1 274 0
 367 0000 084B     		ldr	r3, .L21
 368 0002 1B68     		ldr	r3, [r3]
 369 0004 FF22     		mov	r2, #255
 370 0006 1340     		and	r3, r2
 371 0008 F12B     		cmp	r3, #241
 372 000a 05D0     		beq	.L17
 373 000c F22B     		cmp	r3, #242
 374 000e 05D0     		beq	.L18
 375 0010 002B     		cmp	r3, #0
 376 0012 05D0     		beq	.L20
 272:.\Generated_Source\PSoC4/cyPm.c ****         uint32 reason = CY_PM_RESET_REASON_UNKN;
 377              		.loc 1 272 0
 378 0014 0020     		mov	r0, #0
 379 0016 04E0     		b	.L19
 380              	.L17:
 381              	.LVL14:
 275:.\Generated_Source\PSoC4/cyPm.c ****         {
 276:.\Generated_Source\PSoC4/cyPm.c ****         /* Power up, XRES */
 277:.\Generated_Source\PSoC4/cyPm.c ****         case CY_PM_PWR_STOP_TOKEN_XRES:
 278:.\Generated_Source\PSoC4/cyPm.c ****             reason = CY_PM_RESET_REASON_XRES;
 279:.\Generated_Source\PSoC4/cyPm.c ****             break;
 280:.\Generated_Source\PSoC4/cyPm.c **** 
 281:.\Generated_Source\PSoC4/cyPm.c ****         /* Wakeup from Hibernate */
 282:.\Generated_Source\PSoC4/cyPm.c ****         case CY_PM_PWR_STOP_TOKEN_HIB:
 283:.\Generated_Source\PSoC4/cyPm.c ****             reason = CY_PM_RESET_REASON_WAKEUP_HIB;
 382              		.loc 1 283 0
 383 0018 0220     		mov	r0, #2
 284:.\Generated_Source\PSoC4/cyPm.c ****             break;
 384              		.loc 1 284 0
 385 001a 02E0     		b	.L19
 386              	.LVL15:
 387              	.L18:
 285:.\Generated_Source\PSoC4/cyPm.c **** 
 286:.\Generated_Source\PSoC4/cyPm.c ****         /* Wakeup from Stop (through WAKEUP pin assert) */
 287:.\Generated_Source\PSoC4/cyPm.c ****         case CY_PM_PWR_STOP_TOKEN_STOP:
 288:.\Generated_Source\PSoC4/cyPm.c ****             reason = CY_PM_RESET_REASON_WAKEUP_STOP;
 388              		.loc 1 288 0
 389 001c 0320     		mov	r0, #3
 289:.\Generated_Source\PSoC4/cyPm.c ****             break;
 390              		.loc 1 289 0
 391 001e 00E0     		b	.L19
 392              	.LVL16:
 393              	.L20:
 278:.\Generated_Source\PSoC4/cyPm.c ****             break;
 394              		.loc 1 278 0
 395 0020 0120     		mov	r0, #1
 396              	.LVL17:
 397              	.L19:
 290:.\Generated_Source\PSoC4/cyPm.c **** 
 291:.\Generated_Source\PSoC4/cyPm.c ****         /* Unknown reason */
 292:.\Generated_Source\PSoC4/cyPm.c ****         default:
 293:.\Generated_Source\PSoC4/cyPm.c ****             break;
 294:.\Generated_Source\PSoC4/cyPm.c ****         }
 295:.\Generated_Source\PSoC4/cyPm.c **** 
ARM GAS  C:\Users\LAIR\AppData\Local\Temp\ccSTC7Mo.s 			page 18


 296:.\Generated_Source\PSoC4/cyPm.c ****         return (reason);
 297:.\Generated_Source\PSoC4/cyPm.c ****     }
 398              		.loc 1 297 0
 399              		@ sp needed
 400 0022 7047     		bx	lr
 401              	.L22:
 402              		.align	2
 403              	.L21:
 404 0024 2C000B40 		.word	1074462764
 405              		.cfi_endproc
 406              	.LFE7:
 407              		.size	CySysPmGetResetReason, .-CySysPmGetResetReason
 408              		.section	.text.CySysPmFreezeIo,"ax",%progbits
 409              		.align	2
 410              		.global	CySysPmFreezeIo
 411              		.code	16
 412              		.thumb_func
 413              		.type	CySysPmFreezeIo, %function
 414              	CySysPmFreezeIo:
 415              	.LFB8:
 298:.\Generated_Source\PSoC4/cyPm.c **** 
 299:.\Generated_Source\PSoC4/cyPm.c **** 
 300:.\Generated_Source\PSoC4/cyPm.c ****     /*******************************************************************************
 301:.\Generated_Source\PSoC4/cyPm.c ****     * Function Name: CySysPmFreezeIo
 302:.\Generated_Source\PSoC4/cyPm.c ****     ****************************************************************************//**
 303:.\Generated_Source\PSoC4/cyPm.c ****     *
 304:.\Generated_Source\PSoC4/cyPm.c ****     * Freezes IO-Cells directly to save the IO-Cell state on wake up from the
 305:.\Generated_Source\PSoC4/cyPm.c ****     * Hibernate or Stop state. It is not required to call this function before
 306:.\Generated_Source\PSoC4/cyPm.c ****     * entering the Stop mode, since \ref CySysPmStop() function freezes IO-Cells
 307:.\Generated_Source\PSoC4/cyPm.c ****     * implicitly.
 308:.\Generated_Source\PSoC4/cyPm.c ****     *
 309:.\Generated_Source\PSoC4/cyPm.c ****     * This API is not available for PSoC 4000 family of devices.
 310:.\Generated_Source\PSoC4/cyPm.c ****     *
 311:.\Generated_Source\PSoC4/cyPm.c ****     *******************************************************************************/
 312:.\Generated_Source\PSoC4/cyPm.c ****     void CySysPmFreezeIo(void)
 313:.\Generated_Source\PSoC4/cyPm.c ****     {
 416              		.loc 1 313 0
 417              		.cfi_startproc
 418 0000 08B5     		push	{r3, lr}
 419              		.cfi_def_cfa_offset 8
 420              		.cfi_offset 3, -8
 421              		.cfi_offset 14, -4
 314:.\Generated_Source\PSoC4/cyPm.c ****         uint8 interruptState;
 315:.\Generated_Source\PSoC4/cyPm.c **** 
 316:.\Generated_Source\PSoC4/cyPm.c ****         interruptState = CyEnterCriticalSection();
 422              		.loc 1 316 0
 423 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 424              	.LVL18:
 317:.\Generated_Source\PSoC4/cyPm.c **** 
 318:.\Generated_Source\PSoC4/cyPm.c ****         /* Check FREEZE state to avoid recurrent IO-Cells freeze attempt,
 319:.\Generated_Source\PSoC4/cyPm.c ****          * since the second call to this function will cause accidental switch
 320:.\Generated_Source\PSoC4/cyPm.c ****          * to the STOP mode (the system will enter STOP mode immediately after
 321:.\Generated_Source\PSoC4/cyPm.c ****          * writing to STOP bit since both UNLOCK and FREEZE have been set correctly
 322:.\Generated_Source\PSoC4/cyPm.c ****          * in a previous call to this function).
 323:.\Generated_Source\PSoC4/cyPm.c ****          */
 324:.\Generated_Source\PSoC4/cyPm.c ****         if (0u == (CY_PM_PWR_STOP_REG & CY_PM_PWR_STOP_FREEZE))
 425              		.loc 1 324 0
ARM GAS  C:\Users\LAIR\AppData\Local\Temp\ccSTC7Mo.s 			page 19


 426 0006 094B     		ldr	r3, .L25
 427 0008 1B68     		ldr	r3, [r3]
 428 000a 9B03     		lsl	r3, r3, #14
 429 000c 0AD4     		bmi	.L24
 325:.\Generated_Source\PSoC4/cyPm.c ****         {
 326:.\Generated_Source\PSoC4/cyPm.c ****             /* Preserve last reset reason and disable overrides the next freeze command by peripher
 327:.\Generated_Source\PSoC4/cyPm.c ****             CY_PM_PWR_STOP_REG = CY_PM_PWR_STOP_STOP | CY_PM_PWR_STOP_FREEZE | CY_PM_PWR_STOP_UNLOC
 328:.\Generated_Source\PSoC4/cyPm.c ****                                 (CY_PM_PWR_STOP_REG & (CY_PM_PWR_STOP_TOKEN_MASK | CY_PM_PWR_STOP_P
 430              		.loc 1 328 0
 431 000e 074B     		ldr	r3, .L25
 432 0010 1968     		ldr	r1, [r3]
 433 0012 074A     		ldr	r2, .L25+4
 434 0014 0A40     		and	r2, r1
 327:.\Generated_Source\PSoC4/cyPm.c ****                                 (CY_PM_PWR_STOP_REG & (CY_PM_PWR_STOP_TOKEN_MASK | CY_PM_PWR_STOP_P
 435              		.loc 1 327 0
 436 0016 0749     		ldr	r1, .L25+8
 437 0018 0A43     		orr	r2, r1
 438 001a 1A60     		str	r2, [r3]
 329:.\Generated_Source\PSoC4/cyPm.c **** 
 330:.\Generated_Source\PSoC4/cyPm.c ****             /* If reading after writing, read this register three times to delay
 331:.\Generated_Source\PSoC4/cyPm.c ****             *  enough time for internal settling.
 332:.\Generated_Source\PSoC4/cyPm.c ****             */
 333:.\Generated_Source\PSoC4/cyPm.c ****             (void) CY_PM_PWR_STOP_REG;
 439              		.loc 1 333 0
 440 001c 1A68     		ldr	r2, [r3]
 334:.\Generated_Source\PSoC4/cyPm.c ****             (void) CY_PM_PWR_STOP_REG;
 441              		.loc 1 334 0
 442 001e 1A68     		ldr	r2, [r3]
 335:.\Generated_Source\PSoC4/cyPm.c **** 
 336:.\Generated_Source\PSoC4/cyPm.c ****             /* Second write causes the freeze of IO-Cells to save IO-Cell state */
 337:.\Generated_Source\PSoC4/cyPm.c ****             CY_PM_PWR_STOP_REG = CY_PM_PWR_STOP_REG;
 443              		.loc 1 337 0
 444 0020 1A68     		ldr	r2, [r3]
 445 0022 1A60     		str	r2, [r3]
 446              	.L24:
 338:.\Generated_Source\PSoC4/cyPm.c ****         }
 339:.\Generated_Source\PSoC4/cyPm.c **** 
 340:.\Generated_Source\PSoC4/cyPm.c ****         CyExitCriticalSection(interruptState);
 447              		.loc 1 340 0
 448 0024 FFF7FEFF 		bl	CyExitCriticalSection
 449              	.LVL19:
 341:.\Generated_Source\PSoC4/cyPm.c ****     }
 450              		.loc 1 341 0
 451              		@ sp needed
 452 0028 08BD     		pop	{r3, pc}
 453              	.L26:
 454 002a C046     		.align	2
 455              	.L25:
 456 002c 2C000B40 		.word	1074462764
 457 0030 FF000100 		.word	65791
 458 0034 003A0280 		.word	-2147337728
 459              		.cfi_endproc
 460              	.LFE8:
 461              		.size	CySysPmFreezeIo, .-CySysPmFreezeIo
 462              		.section	.text.CySysPmStop,"ax",%progbits
 463              		.align	2
 464              		.global	CySysPmStop
ARM GAS  C:\Users\LAIR\AppData\Local\Temp\ccSTC7Mo.s 			page 20


 465              		.code	16
 466              		.thumb_func
 467              		.type	CySysPmStop, %function
 468              	CySysPmStop:
 469              	.LFB5:
 198:.\Generated_Source\PSoC4/cyPm.c ****         (void) CyEnterCriticalSection();
 470              		.loc 1 198 0
 471              		.cfi_startproc
 472 0000 10B5     		push	{r4, lr}
 473              		.cfi_def_cfa_offset 8
 474              		.cfi_offset 4, -8
 475              		.cfi_offset 14, -4
 199:.\Generated_Source\PSoC4/cyPm.c **** 
 476              		.loc 1 199 0
 477 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 478              	.LVL20:
 202:.\Generated_Source\PSoC4/cyPm.c **** 
 479              		.loc 1 202 0
 480 0006 094C     		ldr	r4, .L28
 481 0008 2268     		ldr	r2, [r4]
 482 000a 8023     		mov	r3, #128
 483 000c 5B02     		lsl	r3, r3, #9
 484 000e 1340     		and	r3, r2
 485 0010 F222     		mov	r2, #242
 486 0012 1343     		orr	r3, r2
 487 0014 2360     		str	r3, [r4]
 205:.\Generated_Source\PSoC4/cyPm.c **** 
 488              		.loc 1 205 0
 489 0016 FFF7FEFF 		bl	CySysPmFreezeIo
 490              	.LVL21:
 208:.\Generated_Source\PSoC4/cyPm.c **** 
 491              		.loc 1 208 0
 492 001a 2368     		ldr	r3, [r4]
 493 001c 8022     		mov	r2, #128
 494 001e 1206     		lsl	r2, r2, #24
 495 0020 1343     		orr	r3, r2
 496 0022 2360     		str	r3, [r4]
 215:.\Generated_Source\PSoC4/cyPm.c ****         CY_NOP;
 497              		.loc 1 215 0
 498              	@ 215 ".\Generated_Source\PSoC4\cyPm.c" 1
 499 0024 C046     		NOP
 500              	
 501              	@ 0 "" 2
 216:.\Generated_Source\PSoC4/cyPm.c **** 
 502              		.loc 1 216 0
 503              	@ 216 ".\Generated_Source\PSoC4\cyPm.c" 1
 504 0026 C046     		NOP
 505              	
 506              	@ 0 "" 2
 219:.\Generated_Source\PSoC4/cyPm.c **** 
 507              		.loc 1 219 0
 508              	@ 219 ".\Generated_Source\PSoC4\cyPm.c" 1
 509 0028 30BF     		WFI 
 510              	
 511              	@ 0 "" 2
 225:.\Generated_Source\PSoC4/cyPm.c **** 
 512              		.loc 1 225 0
ARM GAS  C:\Users\LAIR\AppData\Local\Temp\ccSTC7Mo.s 			page 21


 513              		.code	16
 514              		@ sp needed
 515 002a 10BD     		pop	{r4, pc}
 516              	.L29:
 517              		.align	2
 518              	.L28:
 519 002c 2C000B40 		.word	1074462764
 520              		.cfi_endproc
 521              	.LFE5:
 522              		.size	CySysPmStop, .-CySysPmStop
 523              		.section	.text.CySysPmUnfreezeIo,"ax",%progbits
 524              		.align	2
 525              		.global	CySysPmUnfreezeIo
 526              		.code	16
 527              		.thumb_func
 528              		.type	CySysPmUnfreezeIo, %function
 529              	CySysPmUnfreezeIo:
 530              	.LFB9:
 342:.\Generated_Source\PSoC4/cyPm.c **** 
 343:.\Generated_Source\PSoC4/cyPm.c **** 
 344:.\Generated_Source\PSoC4/cyPm.c ****     /*******************************************************************************
 345:.\Generated_Source\PSoC4/cyPm.c ****     * Function Name: CySysPmUnfreezeIo
 346:.\Generated_Source\PSoC4/cyPm.c ****     ****************************************************************************//**
 347:.\Generated_Source\PSoC4/cyPm.c ****     *
 348:.\Generated_Source\PSoC4/cyPm.c ****     * The IO-Cells remain frozen after awake from Hibernate or Stop mode until
 349:.\Generated_Source\PSoC4/cyPm.c ****     * the firmware unfreezes them after booting. The call of this function
 350:.\Generated_Source\PSoC4/cyPm.c ****     * unfreezes IO-Cells explicitly.
 351:.\Generated_Source\PSoC4/cyPm.c ****     *
 352:.\Generated_Source\PSoC4/cyPm.c ****     * If the firmware intent is to retain the data value on the port, then the
 353:.\Generated_Source\PSoC4/cyPm.c ****     * value must be read and re-written to the data register before calling this
 354:.\Generated_Source\PSoC4/cyPm.c ****     * API. Furthermore, the drive mode must be re-programmed.  If this is not done,
 355:.\Generated_Source\PSoC4/cyPm.c ****     * the pin state will change to default state the moment the freeze is removed.
 356:.\Generated_Source\PSoC4/cyPm.c ****     *
 357:.\Generated_Source\PSoC4/cyPm.c ****     * This API is not available for PSoC 4000 family of devices.
 358:.\Generated_Source\PSoC4/cyPm.c ****     *
 359:.\Generated_Source\PSoC4/cyPm.c ****     *******************************************************************************/
 360:.\Generated_Source\PSoC4/cyPm.c ****     void CySysPmUnfreezeIo(void)
 361:.\Generated_Source\PSoC4/cyPm.c ****     {
 531              		.loc 1 361 0
 532              		.cfi_startproc
 533 0000 10B5     		push	{r4, lr}
 534              		.cfi_def_cfa_offset 8
 535              		.cfi_offset 4, -8
 536              		.cfi_offset 14, -4
 362:.\Generated_Source\PSoC4/cyPm.c ****         uint8 interruptState;
 363:.\Generated_Source\PSoC4/cyPm.c **** 
 364:.\Generated_Source\PSoC4/cyPm.c ****         interruptState = CyEnterCriticalSection();
 537              		.loc 1 364 0
 538 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 539              	.LVL22:
 365:.\Generated_Source\PSoC4/cyPm.c **** 
 366:.\Generated_Source\PSoC4/cyPm.c ****         /* Preserve last reset reason and wakeup polarity. Then, unfreeze I/O:
 367:.\Generated_Source\PSoC4/cyPm.c ****          * write PWR_STOP.FREEZE=0, .UNLOCK=0x3A, .STOP=0, .TOKEN
 368:.\Generated_Source\PSoC4/cyPm.c ****          */
 369:.\Generated_Source\PSoC4/cyPm.c ****         CY_PM_PWR_STOP_REG = CY_PM_PWR_STOP_UNLOCK |
 370:.\Generated_Source\PSoC4/cyPm.c ****                             (CY_PM_PWR_STOP_REG & (CY_PM_PWR_STOP_TOKEN_MASK | CY_PM_PWR_STOP_POLAR
 540              		.loc 1 370 0
ARM GAS  C:\Users\LAIR\AppData\Local\Temp\ccSTC7Mo.s 			page 22


 541 0006 084B     		ldr	r3, .L31
 542 0008 1A68     		ldr	r2, [r3]
 543 000a 0849     		ldr	r1, .L31+4
 544 000c 0A40     		and	r2, r1
 369:.\Generated_Source\PSoC4/cyPm.c ****                             (CY_PM_PWR_STOP_REG & (CY_PM_PWR_STOP_TOKEN_MASK | CY_PM_PWR_STOP_POLAR
 545              		.loc 1 369 0
 546 000e E824     		mov	r4, #232
 547 0010 A401     		lsl	r4, r4, #6
 548 0012 2243     		orr	r2, r4
 549 0014 1A60     		str	r2, [r3]
 371:.\Generated_Source\PSoC4/cyPm.c **** 
 372:.\Generated_Source\PSoC4/cyPm.c ****         /* If reading after writing, read this register three times to delay
 373:.\Generated_Source\PSoC4/cyPm.c ****         *  enough time for internal settling.
 374:.\Generated_Source\PSoC4/cyPm.c ****         */
 375:.\Generated_Source\PSoC4/cyPm.c ****         (void) CY_PM_PWR_STOP_REG;
 550              		.loc 1 375 0
 551 0016 1A68     		ldr	r2, [r3]
 376:.\Generated_Source\PSoC4/cyPm.c ****         (void) CY_PM_PWR_STOP_REG;
 552              		.loc 1 376 0
 553 0018 1A68     		ldr	r2, [r3]
 377:.\Generated_Source\PSoC4/cyPm.c **** 
 378:.\Generated_Source\PSoC4/cyPm.c ****         /* Lock STOP mode: write PWR_STOP.FREEZE=0, UNLOCK=0x00, STOP=0, .TOKEN */
 379:.\Generated_Source\PSoC4/cyPm.c ****         CY_PM_PWR_STOP_REG &= (CY_PM_PWR_STOP_TOKEN_MASK | CY_PM_PWR_STOP_POLARITY);
 554              		.loc 1 379 0
 555 001a 1A68     		ldr	r2, [r3]
 556 001c 1140     		and	r1, r2
 557 001e 1960     		str	r1, [r3]
 380:.\Generated_Source\PSoC4/cyPm.c **** 
 381:.\Generated_Source\PSoC4/cyPm.c ****         CyExitCriticalSection(interruptState);
 558              		.loc 1 381 0
 559 0020 FFF7FEFF 		bl	CyExitCriticalSection
 560              	.LVL23:
 382:.\Generated_Source\PSoC4/cyPm.c ****     }
 561              		.loc 1 382 0
 562              		@ sp needed
 563 0024 10BD     		pop	{r4, pc}
 564              	.L32:
 565 0026 C046     		.align	2
 566              	.L31:
 567 0028 2C000B40 		.word	1074462764
 568 002c FF000100 		.word	65791
 569              		.cfi_endproc
 570              	.LFE9:
 571              		.size	CySysPmUnfreezeIo, .-CySysPmUnfreezeIo
 572              		.text
 573              	.Letext0:
 574              		.file 3 ".\\Generated_Source\\PSoC4\\cytypes.h"
 575              		.file 4 ".\\Generated_Source\\PSoC4\\CyLib.h"
 576              		.section	.debug_info,"",%progbits
 577              	.Ldebug_info0:
 578 0000 E2020000 		.4byte	0x2e2
 579 0004 0400     		.2byte	0x4
 580 0006 00000000 		.4byte	.Ldebug_abbrev0
 581 000a 04       		.byte	0x4
 582 000b 01       		.uleb128 0x1
 583 000c DC010000 		.4byte	.LASF28
 584 0010 01       		.byte	0x1
ARM GAS  C:\Users\LAIR\AppData\Local\Temp\ccSTC7Mo.s 			page 23


 585 0011 6A020000 		.4byte	.LASF29
 586 0015 87010000 		.4byte	.LASF30
 587 0019 00000000 		.4byte	.Ldebug_ranges0+0
 588 001d 00000000 		.4byte	0
 589 0021 00000000 		.4byte	.Ldebug_line0
 590 0025 02       		.uleb128 0x2
 591 0026 01       		.byte	0x1
 592 0027 06       		.byte	0x6
 593 0028 B3020000 		.4byte	.LASF0
 594 002c 02       		.uleb128 0x2
 595 002d 01       		.byte	0x1
 596 002e 08       		.byte	0x8
 597 002f 91000000 		.4byte	.LASF1
 598 0033 02       		.uleb128 0x2
 599 0034 02       		.byte	0x2
 600 0035 05       		.byte	0x5
 601 0036 8A020000 		.4byte	.LASF2
 602 003a 02       		.uleb128 0x2
 603 003b 02       		.byte	0x2
 604 003c 07       		.byte	0x7
 605 003d 32000000 		.4byte	.LASF3
 606 0041 02       		.uleb128 0x2
 607 0042 04       		.byte	0x4
 608 0043 05       		.byte	0x5
 609 0044 A5020000 		.4byte	.LASF4
 610 0048 02       		.uleb128 0x2
 611 0049 04       		.byte	0x4
 612 004a 07       		.byte	0x7
 613 004b AE000000 		.4byte	.LASF5
 614 004f 02       		.uleb128 0x2
 615 0050 08       		.byte	0x8
 616 0051 05       		.byte	0x5
 617 0052 79010000 		.4byte	.LASF6
 618 0056 02       		.uleb128 0x2
 619 0057 08       		.byte	0x8
 620 0058 07       		.byte	0x7
 621 0059 7A000000 		.4byte	.LASF7
 622 005d 03       		.uleb128 0x3
 623 005e 04       		.byte	0x4
 624 005f 05       		.byte	0x5
 625 0060 696E7400 		.ascii	"int\000"
 626 0064 02       		.uleb128 0x2
 627 0065 04       		.byte	0x4
 628 0066 07       		.byte	0x7
 629 0067 10010000 		.4byte	.LASF8
 630 006b 04       		.uleb128 0x4
 631 006c C0000000 		.4byte	.LASF9
 632 0070 03       		.byte	0x3
 633 0071 9801     		.2byte	0x198
 634 0073 2C000000 		.4byte	0x2c
 635 0077 04       		.uleb128 0x4
 636 0078 EB000000 		.4byte	.LASF10
 637 007c 03       		.byte	0x3
 638 007d 9901     		.2byte	0x199
 639 007f 3A000000 		.4byte	0x3a
 640 0083 04       		.uleb128 0x4
 641 0084 F2000000 		.4byte	.LASF11
ARM GAS  C:\Users\LAIR\AppData\Local\Temp\ccSTC7Mo.s 			page 24


 642 0088 03       		.byte	0x3
 643 0089 9A01     		.2byte	0x19a
 644 008b 48000000 		.4byte	0x48
 645 008f 02       		.uleb128 0x2
 646 0090 04       		.byte	0x4
 647 0091 04       		.byte	0x4
 648 0092 74000000 		.4byte	.LASF12
 649 0096 02       		.uleb128 0x2
 650 0097 08       		.byte	0x8
 651 0098 04       		.byte	0x4
 652 0099 D2000000 		.4byte	.LASF13
 653 009d 02       		.uleb128 0x2
 654 009e 01       		.byte	0x1
 655 009f 08       		.byte	0x8
 656 00a0 AE020000 		.4byte	.LASF14
 657 00a4 04       		.uleb128 0x4
 658 00a5 00000000 		.4byte	.LASF15
 659 00a9 03       		.byte	0x3
 660 00aa 4302     		.2byte	0x243
 661 00ac B0000000 		.4byte	0xb0
 662 00b0 05       		.uleb128 0x5
 663 00b1 77000000 		.4byte	0x77
 664 00b5 04       		.uleb128 0x4
 665 00b6 06000000 		.4byte	.LASF16
 666 00ba 03       		.byte	0x3
 667 00bb 4402     		.2byte	0x244
 668 00bd C1000000 		.4byte	0xc1
 669 00c1 05       		.uleb128 0x5
 670 00c2 83000000 		.4byte	0x83
 671 00c6 02       		.uleb128 0x2
 672 00c7 04       		.byte	0x4
 673 00c8 07       		.byte	0x7
 674 00c9 70010000 		.4byte	.LASF17
 675 00cd 06       		.uleb128 0x6
 676 00ce 25000000 		.4byte	.LASF18
 677 00d2 01       		.byte	0x1
 678 00d3 20       		.byte	0x20
 679 00d4 00000000 		.4byte	.LFB2
 680 00d8 1C000000 		.4byte	.LFE2-.LFB2
 681 00dc 01       		.uleb128 0x1
 682 00dd 9C       		.byte	0x9c
 683 00de 04010000 		.4byte	0x104
 684 00e2 07       		.uleb128 0x7
 685 00e3 9F000000 		.4byte	.LASF20
 686 00e7 01       		.byte	0x1
 687 00e8 22       		.byte	0x22
 688 00e9 6B000000 		.4byte	0x6b
 689 00ed 00000000 		.4byte	.LLST0
 690 00f1 08       		.uleb128 0x8
 691 00f2 06000000 		.4byte	.LVL0
 692 00f6 BC020000 		.4byte	0x2bc
 693 00fa 08       		.uleb128 0x8
 694 00fb 16000000 		.4byte	.LVL1
 695 00ff C7020000 		.4byte	0x2c7
 696 0103 00       		.byte	0
 697 0104 06       		.uleb128 0x6
 698 0105 94020000 		.4byte	.LASF19
ARM GAS  C:\Users\LAIR\AppData\Local\Temp\ccSTC7Mo.s 			page 25


 699 0109 01       		.byte	0x1
 700 010a 3F       		.byte	0x3f
 701 010b 00000000 		.4byte	.LFB3
 702 010f 58000000 		.4byte	.LFE3-.LFB3
 703 0113 01       		.uleb128 0x1
 704 0114 9C       		.byte	0x9c
 705 0115 63010000 		.4byte	0x163
 706 0119 07       		.uleb128 0x7
 707 011a 9F000000 		.4byte	.LASF20
 708 011e 01       		.byte	0x1
 709 011f 41       		.byte	0x41
 710 0120 6B000000 		.4byte	0x6b
 711 0124 13000000 		.4byte	.LLST1
 712 0128 09       		.uleb128 0x9
 713 0129 CF010000 		.4byte	.LASF21
 714 012d 01       		.byte	0x1
 715 012e 43       		.byte	0x43
 716 012f C1000000 		.4byte	0xc1
 717 0133 02       		.uleb128 0x2
 718 0134 91       		.byte	0x91
 719 0135 6C       		.sleb128 -20
 720 0136 08       		.uleb128 0x8
 721 0137 08000000 		.4byte	.LVL2
 722 013b BC020000 		.4byte	0x2bc
 723 013f 0A       		.uleb128 0xa
 724 0140 34000000 		.4byte	.LVL4
 725 0144 D8020000 		.4byte	0x2d8
 726 0148 52010000 		.4byte	0x152
 727 014c 0B       		.uleb128 0xb
 728 014d 01       		.uleb128 0x1
 729 014e 50       		.byte	0x50
 730 014f 01       		.uleb128 0x1
 731 0150 32       		.byte	0x32
 732 0151 00       		.byte	0
 733 0152 0C       		.uleb128 0xc
 734 0153 40000000 		.4byte	.LVL5
 735 0157 C7020000 		.4byte	0x2c7
 736 015b 0B       		.uleb128 0xb
 737 015c 01       		.uleb128 0x1
 738 015d 50       		.byte	0x50
 739 015e 02       		.uleb128 0x2
 740 015f 74       		.byte	0x74
 741 0160 00       		.sleb128 0
 742 0161 00       		.byte	0
 743 0162 00       		.byte	0
 744 0163 0D       		.uleb128 0xd
 745 0164 56000000 		.4byte	.LASF31
 746 0168 02       		.byte	0x2
 747 0169 DE       		.byte	0xde
 748 016a 03       		.byte	0x3
 749 016b 06       		.uleb128 0x6
 750 016c 45000000 		.4byte	.LASF22
 751 0170 01       		.byte	0x1
 752 0171 8A       		.byte	0x8a
 753 0172 00000000 		.4byte	.LFB4
 754 0176 08010000 		.4byte	.LFE4-.LFB4
 755 017a 01       		.uleb128 0x1
ARM GAS  C:\Users\LAIR\AppData\Local\Temp\ccSTC7Mo.s 			page 26


 756 017b 9C       		.byte	0x9c
 757 017c B1010000 		.4byte	0x1b1
 758 0180 07       		.uleb128 0x7
 759 0181 9F000000 		.4byte	.LASF20
 760 0185 01       		.byte	0x1
 761 0186 8C       		.byte	0x8c
 762 0187 6B000000 		.4byte	0x6b
 763 018b 26000000 		.4byte	.LLST2
 764 018f 0E       		.uleb128 0xe
 765 0190 63010000 		.4byte	0x163
 766 0194 06000000 		.4byte	.LBB4
 767 0198 82000000 		.4byte	.LBE4-.LBB4
 768 019c 01       		.byte	0x1
 769 019d 92       		.byte	0x92
 770 019e 08       		.uleb128 0x8
 771 019f 06000000 		.4byte	.LVL7
 772 01a3 BC020000 		.4byte	0x2bc
 773 01a7 08       		.uleb128 0x8
 774 01a8 BC000000 		.4byte	.LVL8
 775 01ac C7020000 		.4byte	0x2c7
 776 01b0 00       		.byte	0
 777 01b1 06       		.uleb128 0x6
 778 01b2 0C000000 		.4byte	.LASF23
 779 01b6 01       		.byte	0x1
 780 01b7 F2       		.byte	0xf2
 781 01b8 00000000 		.4byte	.LFB6
 782 01bc 34000000 		.4byte	.LFE6-.LFB6
 783 01c0 01       		.uleb128 0x1
 784 01c1 9C       		.byte	0x9c
 785 01c2 F7010000 		.4byte	0x1f7
 786 01c6 0F       		.uleb128 0xf
 787 01c7 51010000 		.4byte	.LASF32
 788 01cb 01       		.byte	0x1
 789 01cc F2       		.byte	0xf2
 790 01cd 83000000 		.4byte	0x83
 791 01d1 39000000 		.4byte	.LLST3
 792 01d5 07       		.uleb128 0x7
 793 01d6 9F000000 		.4byte	.LASF20
 794 01da 01       		.byte	0x1
 795 01db F4       		.byte	0xf4
 796 01dc 6B000000 		.4byte	0x6b
 797 01e0 65000000 		.4byte	.LLST4
 798 01e4 08       		.uleb128 0x8
 799 01e5 08000000 		.4byte	.LVL10
 800 01e9 BC020000 		.4byte	0x2bc
 801 01ed 08       		.uleb128 0x8
 802 01ee 28000000 		.4byte	.LVL11
 803 01f2 C7020000 		.4byte	0x2c7
 804 01f6 00       		.byte	0
 805 01f7 10       		.uleb128 0x10
 806 01f8 5A010000 		.4byte	.LASF33
 807 01fc 01       		.byte	0x1
 808 01fd 0E01     		.2byte	0x10e
 809 01ff 83000000 		.4byte	0x83
 810 0203 00000000 		.4byte	.LFB7
 811 0207 28000000 		.4byte	.LFE7-.LFB7
 812 020b 01       		.uleb128 0x1
ARM GAS  C:\Users\LAIR\AppData\Local\Temp\ccSTC7Mo.s 			page 27


 813 020c 9C       		.byte	0x9c
 814 020d 22020000 		.4byte	0x222
 815 0211 11       		.uleb128 0x11
 816 0212 4A010000 		.4byte	.LASF24
 817 0216 01       		.byte	0x1
 818 0217 1001     		.2byte	0x110
 819 0219 83000000 		.4byte	0x83
 820 021d 78000000 		.4byte	.LLST5
 821 0221 00       		.byte	0
 822 0222 12       		.uleb128 0x12
 823 0223 BF020000 		.4byte	.LASF25
 824 0227 01       		.byte	0x1
 825 0228 3801     		.2byte	0x138
 826 022a 00000000 		.4byte	.LFB8
 827 022e 38000000 		.4byte	.LFE8-.LFB8
 828 0232 01       		.uleb128 0x1
 829 0233 9C       		.byte	0x9c
 830 0234 5B020000 		.4byte	0x25b
 831 0238 11       		.uleb128 0x11
 832 0239 9F000000 		.4byte	.LASF20
 833 023d 01       		.byte	0x1
 834 023e 3A01     		.2byte	0x13a
 835 0240 6B000000 		.4byte	0x6b
 836 0244 BB000000 		.4byte	.LLST6
 837 0248 08       		.uleb128 0x8
 838 0249 06000000 		.4byte	.LVL18
 839 024d BC020000 		.4byte	0x2bc
 840 0251 08       		.uleb128 0x8
 841 0252 28000000 		.4byte	.LVL19
 842 0256 C7020000 		.4byte	0x2c7
 843 025a 00       		.byte	0
 844 025b 06       		.uleb128 0x6
 845 025c C6000000 		.4byte	.LASF26
 846 0260 01       		.byte	0x1
 847 0261 C5       		.byte	0xc5
 848 0262 00000000 		.4byte	.LFB5
 849 0266 30000000 		.4byte	.LFE5-.LFB5
 850 026a 01       		.uleb128 0x1
 851 026b 9C       		.byte	0x9c
 852 026c 83020000 		.4byte	0x283
 853 0270 08       		.uleb128 0x8
 854 0271 06000000 		.4byte	.LVL20
 855 0275 BC020000 		.4byte	0x2bc
 856 0279 08       		.uleb128 0x8
 857 027a 1A000000 		.4byte	.LVL21
 858 027e 22020000 		.4byte	0x222
 859 0282 00       		.byte	0
 860 0283 12       		.uleb128 0x12
 861 0284 D9000000 		.4byte	.LASF27
 862 0288 01       		.byte	0x1
 863 0289 6801     		.2byte	0x168
 864 028b 00000000 		.4byte	.LFB9
 865 028f 30000000 		.4byte	.LFE9-.LFB9
 866 0293 01       		.uleb128 0x1
 867 0294 9C       		.byte	0x9c
 868 0295 BC020000 		.4byte	0x2bc
 869 0299 11       		.uleb128 0x11
ARM GAS  C:\Users\LAIR\AppData\Local\Temp\ccSTC7Mo.s 			page 28


 870 029a 9F000000 		.4byte	.LASF20
 871 029e 01       		.byte	0x1
 872 029f 6A01     		.2byte	0x16a
 873 02a1 6B000000 		.4byte	0x6b
 874 02a5 CE000000 		.4byte	.LLST7
 875 02a9 08       		.uleb128 0x8
 876 02aa 06000000 		.4byte	.LVL22
 877 02ae BC020000 		.4byte	0x2bc
 878 02b2 08       		.uleb128 0x8
 879 02b3 24000000 		.4byte	.LVL23
 880 02b7 C7020000 		.4byte	0x2c7
 881 02bb 00       		.byte	0
 882 02bc 13       		.uleb128 0x13
 883 02bd F9000000 		.4byte	.LASF34
 884 02c1 04       		.byte	0x4
 885 02c2 E3       		.byte	0xe3
 886 02c3 6B000000 		.4byte	0x6b
 887 02c7 14       		.uleb128 0x14
 888 02c8 1D010000 		.4byte	.LASF35
 889 02cc 04       		.byte	0x4
 890 02cd E4       		.byte	0xe4
 891 02ce D8020000 		.4byte	0x2d8
 892 02d2 15       		.uleb128 0x15
 893 02d3 6B000000 		.4byte	0x6b
 894 02d7 00       		.byte	0
 895 02d8 16       		.uleb128 0x16
 896 02d9 33010000 		.4byte	.LASF36
 897 02dd 04       		.byte	0x4
 898 02de 6B       		.byte	0x6b
 899 02df 15       		.uleb128 0x15
 900 02e0 83000000 		.4byte	0x83
 901 02e4 00       		.byte	0
 902 02e5 00       		.byte	0
 903              		.section	.debug_abbrev,"",%progbits
 904              	.Ldebug_abbrev0:
 905 0000 01       		.uleb128 0x1
 906 0001 11       		.uleb128 0x11
 907 0002 01       		.byte	0x1
 908 0003 25       		.uleb128 0x25
 909 0004 0E       		.uleb128 0xe
 910 0005 13       		.uleb128 0x13
 911 0006 0B       		.uleb128 0xb
 912 0007 03       		.uleb128 0x3
 913 0008 0E       		.uleb128 0xe
 914 0009 1B       		.uleb128 0x1b
 915 000a 0E       		.uleb128 0xe
 916 000b 55       		.uleb128 0x55
 917 000c 17       		.uleb128 0x17
 918 000d 11       		.uleb128 0x11
 919 000e 01       		.uleb128 0x1
 920 000f 10       		.uleb128 0x10
 921 0010 17       		.uleb128 0x17
 922 0011 00       		.byte	0
 923 0012 00       		.byte	0
 924 0013 02       		.uleb128 0x2
 925 0014 24       		.uleb128 0x24
 926 0015 00       		.byte	0
ARM GAS  C:\Users\LAIR\AppData\Local\Temp\ccSTC7Mo.s 			page 29


 927 0016 0B       		.uleb128 0xb
 928 0017 0B       		.uleb128 0xb
 929 0018 3E       		.uleb128 0x3e
 930 0019 0B       		.uleb128 0xb
 931 001a 03       		.uleb128 0x3
 932 001b 0E       		.uleb128 0xe
 933 001c 00       		.byte	0
 934 001d 00       		.byte	0
 935 001e 03       		.uleb128 0x3
 936 001f 24       		.uleb128 0x24
 937 0020 00       		.byte	0
 938 0021 0B       		.uleb128 0xb
 939 0022 0B       		.uleb128 0xb
 940 0023 3E       		.uleb128 0x3e
 941 0024 0B       		.uleb128 0xb
 942 0025 03       		.uleb128 0x3
 943 0026 08       		.uleb128 0x8
 944 0027 00       		.byte	0
 945 0028 00       		.byte	0
 946 0029 04       		.uleb128 0x4
 947 002a 16       		.uleb128 0x16
 948 002b 00       		.byte	0
 949 002c 03       		.uleb128 0x3
 950 002d 0E       		.uleb128 0xe
 951 002e 3A       		.uleb128 0x3a
 952 002f 0B       		.uleb128 0xb
 953 0030 3B       		.uleb128 0x3b
 954 0031 05       		.uleb128 0x5
 955 0032 49       		.uleb128 0x49
 956 0033 13       		.uleb128 0x13
 957 0034 00       		.byte	0
 958 0035 00       		.byte	0
 959 0036 05       		.uleb128 0x5
 960 0037 35       		.uleb128 0x35
 961 0038 00       		.byte	0
 962 0039 49       		.uleb128 0x49
 963 003a 13       		.uleb128 0x13
 964 003b 00       		.byte	0
 965 003c 00       		.byte	0
 966 003d 06       		.uleb128 0x6
 967 003e 2E       		.uleb128 0x2e
 968 003f 01       		.byte	0x1
 969 0040 3F       		.uleb128 0x3f
 970 0041 19       		.uleb128 0x19
 971 0042 03       		.uleb128 0x3
 972 0043 0E       		.uleb128 0xe
 973 0044 3A       		.uleb128 0x3a
 974 0045 0B       		.uleb128 0xb
 975 0046 3B       		.uleb128 0x3b
 976 0047 0B       		.uleb128 0xb
 977 0048 27       		.uleb128 0x27
 978 0049 19       		.uleb128 0x19
 979 004a 11       		.uleb128 0x11
 980 004b 01       		.uleb128 0x1
 981 004c 12       		.uleb128 0x12
 982 004d 06       		.uleb128 0x6
 983 004e 40       		.uleb128 0x40
ARM GAS  C:\Users\LAIR\AppData\Local\Temp\ccSTC7Mo.s 			page 30


 984 004f 18       		.uleb128 0x18
 985 0050 9742     		.uleb128 0x2117
 986 0052 19       		.uleb128 0x19
 987 0053 01       		.uleb128 0x1
 988 0054 13       		.uleb128 0x13
 989 0055 00       		.byte	0
 990 0056 00       		.byte	0
 991 0057 07       		.uleb128 0x7
 992 0058 34       		.uleb128 0x34
 993 0059 00       		.byte	0
 994 005a 03       		.uleb128 0x3
 995 005b 0E       		.uleb128 0xe
 996 005c 3A       		.uleb128 0x3a
 997 005d 0B       		.uleb128 0xb
 998 005e 3B       		.uleb128 0x3b
 999 005f 0B       		.uleb128 0xb
 1000 0060 49       		.uleb128 0x49
 1001 0061 13       		.uleb128 0x13
 1002 0062 02       		.uleb128 0x2
 1003 0063 17       		.uleb128 0x17
 1004 0064 00       		.byte	0
 1005 0065 00       		.byte	0
 1006 0066 08       		.uleb128 0x8
 1007 0067 898201   		.uleb128 0x4109
 1008 006a 00       		.byte	0
 1009 006b 11       		.uleb128 0x11
 1010 006c 01       		.uleb128 0x1
 1011 006d 31       		.uleb128 0x31
 1012 006e 13       		.uleb128 0x13
 1013 006f 00       		.byte	0
 1014 0070 00       		.byte	0
 1015 0071 09       		.uleb128 0x9
 1016 0072 34       		.uleb128 0x34
 1017 0073 00       		.byte	0
 1018 0074 03       		.uleb128 0x3
 1019 0075 0E       		.uleb128 0xe
 1020 0076 3A       		.uleb128 0x3a
 1021 0077 0B       		.uleb128 0xb
 1022 0078 3B       		.uleb128 0x3b
 1023 0079 0B       		.uleb128 0xb
 1024 007a 49       		.uleb128 0x49
 1025 007b 13       		.uleb128 0x13
 1026 007c 02       		.uleb128 0x2
 1027 007d 18       		.uleb128 0x18
 1028 007e 00       		.byte	0
 1029 007f 00       		.byte	0
 1030 0080 0A       		.uleb128 0xa
 1031 0081 898201   		.uleb128 0x4109
 1032 0084 01       		.byte	0x1
 1033 0085 11       		.uleb128 0x11
 1034 0086 01       		.uleb128 0x1
 1035 0087 31       		.uleb128 0x31
 1036 0088 13       		.uleb128 0x13
 1037 0089 01       		.uleb128 0x1
 1038 008a 13       		.uleb128 0x13
 1039 008b 00       		.byte	0
 1040 008c 00       		.byte	0
ARM GAS  C:\Users\LAIR\AppData\Local\Temp\ccSTC7Mo.s 			page 31


 1041 008d 0B       		.uleb128 0xb
 1042 008e 8A8201   		.uleb128 0x410a
 1043 0091 00       		.byte	0
 1044 0092 02       		.uleb128 0x2
 1045 0093 18       		.uleb128 0x18
 1046 0094 9142     		.uleb128 0x2111
 1047 0096 18       		.uleb128 0x18
 1048 0097 00       		.byte	0
 1049 0098 00       		.byte	0
 1050 0099 0C       		.uleb128 0xc
 1051 009a 898201   		.uleb128 0x4109
 1052 009d 01       		.byte	0x1
 1053 009e 11       		.uleb128 0x11
 1054 009f 01       		.uleb128 0x1
 1055 00a0 31       		.uleb128 0x31
 1056 00a1 13       		.uleb128 0x13
 1057 00a2 00       		.byte	0
 1058 00a3 00       		.byte	0
 1059 00a4 0D       		.uleb128 0xd
 1060 00a5 2E       		.uleb128 0x2e
 1061 00a6 00       		.byte	0
 1062 00a7 03       		.uleb128 0x3
 1063 00a8 0E       		.uleb128 0xe
 1064 00a9 3A       		.uleb128 0x3a
 1065 00aa 0B       		.uleb128 0xb
 1066 00ab 3B       		.uleb128 0x3b
 1067 00ac 0B       		.uleb128 0xb
 1068 00ad 27       		.uleb128 0x27
 1069 00ae 19       		.uleb128 0x19
 1070 00af 20       		.uleb128 0x20
 1071 00b0 0B       		.uleb128 0xb
 1072 00b1 00       		.byte	0
 1073 00b2 00       		.byte	0
 1074 00b3 0E       		.uleb128 0xe
 1075 00b4 1D       		.uleb128 0x1d
 1076 00b5 00       		.byte	0
 1077 00b6 31       		.uleb128 0x31
 1078 00b7 13       		.uleb128 0x13
 1079 00b8 11       		.uleb128 0x11
 1080 00b9 01       		.uleb128 0x1
 1081 00ba 12       		.uleb128 0x12
 1082 00bb 06       		.uleb128 0x6
 1083 00bc 58       		.uleb128 0x58
 1084 00bd 0B       		.uleb128 0xb
 1085 00be 59       		.uleb128 0x59
 1086 00bf 0B       		.uleb128 0xb
 1087 00c0 00       		.byte	0
 1088 00c1 00       		.byte	0
 1089 00c2 0F       		.uleb128 0xf
 1090 00c3 05       		.uleb128 0x5
 1091 00c4 00       		.byte	0
 1092 00c5 03       		.uleb128 0x3
 1093 00c6 0E       		.uleb128 0xe
 1094 00c7 3A       		.uleb128 0x3a
 1095 00c8 0B       		.uleb128 0xb
 1096 00c9 3B       		.uleb128 0x3b
 1097 00ca 0B       		.uleb128 0xb
ARM GAS  C:\Users\LAIR\AppData\Local\Temp\ccSTC7Mo.s 			page 32


 1098 00cb 49       		.uleb128 0x49
 1099 00cc 13       		.uleb128 0x13
 1100 00cd 02       		.uleb128 0x2
 1101 00ce 17       		.uleb128 0x17
 1102 00cf 00       		.byte	0
 1103 00d0 00       		.byte	0
 1104 00d1 10       		.uleb128 0x10
 1105 00d2 2E       		.uleb128 0x2e
 1106 00d3 01       		.byte	0x1
 1107 00d4 3F       		.uleb128 0x3f
 1108 00d5 19       		.uleb128 0x19
 1109 00d6 03       		.uleb128 0x3
 1110 00d7 0E       		.uleb128 0xe
 1111 00d8 3A       		.uleb128 0x3a
 1112 00d9 0B       		.uleb128 0xb
 1113 00da 3B       		.uleb128 0x3b
 1114 00db 05       		.uleb128 0x5
 1115 00dc 27       		.uleb128 0x27
 1116 00dd 19       		.uleb128 0x19
 1117 00de 49       		.uleb128 0x49
 1118 00df 13       		.uleb128 0x13
 1119 00e0 11       		.uleb128 0x11
 1120 00e1 01       		.uleb128 0x1
 1121 00e2 12       		.uleb128 0x12
 1122 00e3 06       		.uleb128 0x6
 1123 00e4 40       		.uleb128 0x40
 1124 00e5 18       		.uleb128 0x18
 1125 00e6 9742     		.uleb128 0x2117
 1126 00e8 19       		.uleb128 0x19
 1127 00e9 01       		.uleb128 0x1
 1128 00ea 13       		.uleb128 0x13
 1129 00eb 00       		.byte	0
 1130 00ec 00       		.byte	0
 1131 00ed 11       		.uleb128 0x11
 1132 00ee 34       		.uleb128 0x34
 1133 00ef 00       		.byte	0
 1134 00f0 03       		.uleb128 0x3
 1135 00f1 0E       		.uleb128 0xe
 1136 00f2 3A       		.uleb128 0x3a
 1137 00f3 0B       		.uleb128 0xb
 1138 00f4 3B       		.uleb128 0x3b
 1139 00f5 05       		.uleb128 0x5
 1140 00f6 49       		.uleb128 0x49
 1141 00f7 13       		.uleb128 0x13
 1142 00f8 02       		.uleb128 0x2
 1143 00f9 17       		.uleb128 0x17
 1144 00fa 00       		.byte	0
 1145 00fb 00       		.byte	0
 1146 00fc 12       		.uleb128 0x12
 1147 00fd 2E       		.uleb128 0x2e
 1148 00fe 01       		.byte	0x1
 1149 00ff 3F       		.uleb128 0x3f
 1150 0100 19       		.uleb128 0x19
 1151 0101 03       		.uleb128 0x3
 1152 0102 0E       		.uleb128 0xe
 1153 0103 3A       		.uleb128 0x3a
 1154 0104 0B       		.uleb128 0xb
ARM GAS  C:\Users\LAIR\AppData\Local\Temp\ccSTC7Mo.s 			page 33


 1155 0105 3B       		.uleb128 0x3b
 1156 0106 05       		.uleb128 0x5
 1157 0107 27       		.uleb128 0x27
 1158 0108 19       		.uleb128 0x19
 1159 0109 11       		.uleb128 0x11
 1160 010a 01       		.uleb128 0x1
 1161 010b 12       		.uleb128 0x12
 1162 010c 06       		.uleb128 0x6
 1163 010d 40       		.uleb128 0x40
 1164 010e 18       		.uleb128 0x18
 1165 010f 9742     		.uleb128 0x2117
 1166 0111 19       		.uleb128 0x19
 1167 0112 01       		.uleb128 0x1
 1168 0113 13       		.uleb128 0x13
 1169 0114 00       		.byte	0
 1170 0115 00       		.byte	0
 1171 0116 13       		.uleb128 0x13
 1172 0117 2E       		.uleb128 0x2e
 1173 0118 00       		.byte	0
 1174 0119 3F       		.uleb128 0x3f
 1175 011a 19       		.uleb128 0x19
 1176 011b 03       		.uleb128 0x3
 1177 011c 0E       		.uleb128 0xe
 1178 011d 3A       		.uleb128 0x3a
 1179 011e 0B       		.uleb128 0xb
 1180 011f 3B       		.uleb128 0x3b
 1181 0120 0B       		.uleb128 0xb
 1182 0121 27       		.uleb128 0x27
 1183 0122 19       		.uleb128 0x19
 1184 0123 49       		.uleb128 0x49
 1185 0124 13       		.uleb128 0x13
 1186 0125 3C       		.uleb128 0x3c
 1187 0126 19       		.uleb128 0x19
 1188 0127 00       		.byte	0
 1189 0128 00       		.byte	0
 1190 0129 14       		.uleb128 0x14
 1191 012a 2E       		.uleb128 0x2e
 1192 012b 01       		.byte	0x1
 1193 012c 3F       		.uleb128 0x3f
 1194 012d 19       		.uleb128 0x19
 1195 012e 03       		.uleb128 0x3
 1196 012f 0E       		.uleb128 0xe
 1197 0130 3A       		.uleb128 0x3a
 1198 0131 0B       		.uleb128 0xb
 1199 0132 3B       		.uleb128 0x3b
 1200 0133 0B       		.uleb128 0xb
 1201 0134 27       		.uleb128 0x27
 1202 0135 19       		.uleb128 0x19
 1203 0136 3C       		.uleb128 0x3c
 1204 0137 19       		.uleb128 0x19
 1205 0138 01       		.uleb128 0x1
 1206 0139 13       		.uleb128 0x13
 1207 013a 00       		.byte	0
 1208 013b 00       		.byte	0
 1209 013c 15       		.uleb128 0x15
 1210 013d 05       		.uleb128 0x5
 1211 013e 00       		.byte	0
ARM GAS  C:\Users\LAIR\AppData\Local\Temp\ccSTC7Mo.s 			page 34


 1212 013f 49       		.uleb128 0x49
 1213 0140 13       		.uleb128 0x13
 1214 0141 00       		.byte	0
 1215 0142 00       		.byte	0
 1216 0143 16       		.uleb128 0x16
 1217 0144 2E       		.uleb128 0x2e
 1218 0145 01       		.byte	0x1
 1219 0146 3F       		.uleb128 0x3f
 1220 0147 19       		.uleb128 0x19
 1221 0148 03       		.uleb128 0x3
 1222 0149 0E       		.uleb128 0xe
 1223 014a 3A       		.uleb128 0x3a
 1224 014b 0B       		.uleb128 0xb
 1225 014c 3B       		.uleb128 0x3b
 1226 014d 0B       		.uleb128 0xb
 1227 014e 27       		.uleb128 0x27
 1228 014f 19       		.uleb128 0x19
 1229 0150 3C       		.uleb128 0x3c
 1230 0151 19       		.uleb128 0x19
 1231 0152 00       		.byte	0
 1232 0153 00       		.byte	0
 1233 0154 00       		.byte	0
 1234              		.section	.debug_loc,"",%progbits
 1235              	.Ldebug_loc0:
 1236              	.LLST0:
 1237 0000 06000000 		.4byte	.LVL0
 1238 0004 15000000 		.4byte	.LVL1-1
 1239 0008 0100     		.2byte	0x1
 1240 000a 50       		.byte	0x50
 1241 000b 00000000 		.4byte	0
 1242 000f 00000000 		.4byte	0
 1243              	.LLST1:
 1244 0013 0A000000 		.4byte	.LVL3
 1245 0017 42000000 		.4byte	.LVL6
 1246 001b 0100     		.2byte	0x1
 1247 001d 54       		.byte	0x54
 1248 001e 00000000 		.4byte	0
 1249 0022 00000000 		.4byte	0
 1250              	.LLST2:
 1251 0026 06000000 		.4byte	.LVL7
 1252 002a BB000000 		.4byte	.LVL8-1
 1253 002e 0100     		.2byte	0x1
 1254 0030 50       		.byte	0x50
 1255 0031 00000000 		.4byte	0
 1256 0035 00000000 		.4byte	0
 1257              	.LLST3:
 1258 0039 00000000 		.4byte	.LVL9
 1259 003d 07000000 		.4byte	.LVL10-1
 1260 0041 0100     		.2byte	0x1
 1261 0043 50       		.byte	0x50
 1262 0044 07000000 		.4byte	.LVL10-1
 1263 0048 28000000 		.4byte	.LVL12
 1264 004c 0100     		.2byte	0x1
 1265 004e 54       		.byte	0x54
 1266 004f 28000000 		.4byte	.LVL12
 1267 0053 34000000 		.4byte	.LFE6
 1268 0057 0400     		.2byte	0x4
ARM GAS  C:\Users\LAIR\AppData\Local\Temp\ccSTC7Mo.s 			page 35


 1269 0059 F3       		.byte	0xf3
 1270 005a 01       		.uleb128 0x1
 1271 005b 50       		.byte	0x50
 1272 005c 9F       		.byte	0x9f
 1273 005d 00000000 		.4byte	0
 1274 0061 00000000 		.4byte	0
 1275              	.LLST4:
 1276 0065 08000000 		.4byte	.LVL10
 1277 0069 27000000 		.4byte	.LVL11-1
 1278 006d 0100     		.2byte	0x1
 1279 006f 50       		.byte	0x50
 1280 0070 00000000 		.4byte	0
 1281 0074 00000000 		.4byte	0
 1282              	.LLST5:
 1283 0078 00000000 		.4byte	.LVL13
 1284 007c 18000000 		.4byte	.LVL14
 1285 0080 0200     		.2byte	0x2
 1286 0082 30       		.byte	0x30
 1287 0083 9F       		.byte	0x9f
 1288 0084 18000000 		.4byte	.LVL14
 1289 0088 1C000000 		.4byte	.LVL15
 1290 008c 0200     		.2byte	0x2
 1291 008e 32       		.byte	0x32
 1292 008f 9F       		.byte	0x9f
 1293 0090 1C000000 		.4byte	.LVL15
 1294 0094 20000000 		.4byte	.LVL16
 1295 0098 0200     		.2byte	0x2
 1296 009a 33       		.byte	0x33
 1297 009b 9F       		.byte	0x9f
 1298 009c 20000000 		.4byte	.LVL16
 1299 00a0 22000000 		.4byte	.LVL17
 1300 00a4 0200     		.2byte	0x2
 1301 00a6 30       		.byte	0x30
 1302 00a7 9F       		.byte	0x9f
 1303 00a8 22000000 		.4byte	.LVL17
 1304 00ac 28000000 		.4byte	.LFE7
 1305 00b0 0100     		.2byte	0x1
 1306 00b2 50       		.byte	0x50
 1307 00b3 00000000 		.4byte	0
 1308 00b7 00000000 		.4byte	0
 1309              	.LLST6:
 1310 00bb 06000000 		.4byte	.LVL18
 1311 00bf 27000000 		.4byte	.LVL19-1
 1312 00c3 0100     		.2byte	0x1
 1313 00c5 50       		.byte	0x50
 1314 00c6 00000000 		.4byte	0
 1315 00ca 00000000 		.4byte	0
 1316              	.LLST7:
 1317 00ce 06000000 		.4byte	.LVL22
 1318 00d2 23000000 		.4byte	.LVL23-1
 1319 00d6 0100     		.2byte	0x1
 1320 00d8 50       		.byte	0x50
 1321 00d9 00000000 		.4byte	0
 1322 00dd 00000000 		.4byte	0
 1323              		.section	.debug_aranges,"",%progbits
 1324 0000 54000000 		.4byte	0x54
 1325 0004 0200     		.2byte	0x2
ARM GAS  C:\Users\LAIR\AppData\Local\Temp\ccSTC7Mo.s 			page 36


 1326 0006 00000000 		.4byte	.Ldebug_info0
 1327 000a 04       		.byte	0x4
 1328 000b 00       		.byte	0
 1329 000c 0000     		.2byte	0
 1330 000e 0000     		.2byte	0
 1331 0010 00000000 		.4byte	.LFB2
 1332 0014 1C000000 		.4byte	.LFE2-.LFB2
 1333 0018 00000000 		.4byte	.LFB3
 1334 001c 58000000 		.4byte	.LFE3-.LFB3
 1335 0020 00000000 		.4byte	.LFB4
 1336 0024 08010000 		.4byte	.LFE4-.LFB4
 1337 0028 00000000 		.4byte	.LFB6
 1338 002c 34000000 		.4byte	.LFE6-.LFB6
 1339 0030 00000000 		.4byte	.LFB7
 1340 0034 28000000 		.4byte	.LFE7-.LFB7
 1341 0038 00000000 		.4byte	.LFB8
 1342 003c 38000000 		.4byte	.LFE8-.LFB8
 1343 0040 00000000 		.4byte	.LFB5
 1344 0044 30000000 		.4byte	.LFE5-.LFB5
 1345 0048 00000000 		.4byte	.LFB9
 1346 004c 30000000 		.4byte	.LFE9-.LFB9
 1347 0050 00000000 		.4byte	0
 1348 0054 00000000 		.4byte	0
 1349              		.section	.debug_ranges,"",%progbits
 1350              	.Ldebug_ranges0:
 1351 0000 00000000 		.4byte	.LFB2
 1352 0004 1C000000 		.4byte	.LFE2
 1353 0008 00000000 		.4byte	.LFB3
 1354 000c 58000000 		.4byte	.LFE3
 1355 0010 00000000 		.4byte	.LFB4
 1356 0014 08010000 		.4byte	.LFE4
 1357 0018 00000000 		.4byte	.LFB6
 1358 001c 34000000 		.4byte	.LFE6
 1359 0020 00000000 		.4byte	.LFB7
 1360 0024 28000000 		.4byte	.LFE7
 1361 0028 00000000 		.4byte	.LFB8
 1362 002c 38000000 		.4byte	.LFE8
 1363 0030 00000000 		.4byte	.LFB5
 1364 0034 30000000 		.4byte	.LFE5
 1365 0038 00000000 		.4byte	.LFB9
 1366 003c 30000000 		.4byte	.LFE9
 1367 0040 00000000 		.4byte	0
 1368 0044 00000000 		.4byte	0
 1369              		.section	.debug_line,"",%progbits
 1370              	.Ldebug_line0:
 1371 0000 47010000 		.section	.debug_str,"MS",%progbits,1
 1371      02005800 
 1371      00000201 
 1371      FB0E0D00 
 1371      01010101 
 1372              	.LASF15:
 1373 0000 72656731 		.ascii	"reg16\000"
 1373      3600
 1374              	.LASF16:
 1375 0006 72656733 		.ascii	"reg32\000"
 1375      3200
 1376              	.LASF23:
ARM GAS  C:\Users\LAIR\AppData\Local\Temp\ccSTC7Mo.s 			page 37


 1377 000c 43795379 		.ascii	"CySysPmSetWakeupPolarity\000"
 1377      73506D53 
 1377      65745761 
 1377      6B657570 
 1377      506F6C61 
 1378              	.LASF18:
 1379 0025 43795379 		.ascii	"CySysPmSleep\000"
 1379      73506D53 
 1379      6C656570 
 1379      00
 1380              	.LASF3:
 1381 0032 73686F72 		.ascii	"short unsigned int\000"
 1381      7420756E 
 1381      7369676E 
 1381      65642069 
 1381      6E7400
 1382              	.LASF22:
 1383 0045 43795379 		.ascii	"CySysPmHibernate\000"
 1383      73506D48 
 1383      69626572 
 1383      6E617465 
 1383      00
 1384              	.LASF31:
 1385 0056 43795379 		.ascii	"CySysPmHibPinsDisableInputBuf\000"
 1385      73506D48 
 1385      69625069 
 1385      6E734469 
 1385      7361626C 
 1386              	.LASF12:
 1387 0074 666C6F61 		.ascii	"float\000"
 1387      7400
 1388              	.LASF7:
 1389 007a 6C6F6E67 		.ascii	"long long unsigned int\000"
 1389      206C6F6E 
 1389      6720756E 
 1389      7369676E 
 1389      65642069 
 1390              	.LASF1:
 1391 0091 756E7369 		.ascii	"unsigned char\000"
 1391      676E6564 
 1391      20636861 
 1391      7200
 1392              	.LASF20:
 1393 009f 696E7465 		.ascii	"interruptState\000"
 1393      72727570 
 1393      74537461 
 1393      746500
 1394              	.LASF5:
 1395 00ae 6C6F6E67 		.ascii	"long unsigned int\000"
 1395      20756E73 
 1395      69676E65 
 1395      6420696E 
 1395      7400
 1396              	.LASF9:
 1397 00c0 75696E74 		.ascii	"uint8\000"
 1397      3800
 1398              	.LASF26:
ARM GAS  C:\Users\LAIR\AppData\Local\Temp\ccSTC7Mo.s 			page 38


 1399 00c6 43795379 		.ascii	"CySysPmStop\000"
 1399      73506D53 
 1399      746F7000 
 1400              	.LASF13:
 1401 00d2 646F7562 		.ascii	"double\000"
 1401      6C6500
 1402              	.LASF27:
 1403 00d9 43795379 		.ascii	"CySysPmUnfreezeIo\000"
 1403      73506D55 
 1403      6E667265 
 1403      657A6549 
 1403      6F00
 1404              	.LASF10:
 1405 00eb 75696E74 		.ascii	"uint16\000"
 1405      313600
 1406              	.LASF11:
 1407 00f2 75696E74 		.ascii	"uint32\000"
 1407      333200
 1408              	.LASF34:
 1409 00f9 4379456E 		.ascii	"CyEnterCriticalSection\000"
 1409      74657243 
 1409      72697469 
 1409      63616C53 
 1409      65637469 
 1410              	.LASF8:
 1411 0110 756E7369 		.ascii	"unsigned int\000"
 1411      676E6564 
 1411      20696E74 
 1411      00
 1412              	.LASF35:
 1413 011d 43794578 		.ascii	"CyExitCriticalSection\000"
 1413      69744372 
 1413      69746963 
 1413      616C5365 
 1413      6374696F 
 1414              	.LASF36:
 1415 0133 43795379 		.ascii	"CySysClkWriteSysclkDiv\000"
 1415      73436C6B 
 1415      57726974 
 1415      65537973 
 1415      636C6B44 
 1416              	.LASF24:
 1417 014a 72656173 		.ascii	"reason\000"
 1417      6F6E00
 1418              	.LASF32:
 1419 0151 706F6C61 		.ascii	"polarity\000"
 1419      72697479 
 1419      00
 1420              	.LASF33:
 1421 015a 43795379 		.ascii	"CySysPmGetResetReason\000"
 1421      73506D47 
 1421      65745265 
 1421      73657452 
 1421      6561736F 
 1422              	.LASF17:
 1423 0170 73697A65 		.ascii	"sizetype\000"
 1423      74797065 
ARM GAS  C:\Users\LAIR\AppData\Local\Temp\ccSTC7Mo.s 			page 39


 1423      00
 1424              	.LASF6:
 1425 0179 6C6F6E67 		.ascii	"long long int\000"
 1425      206C6F6E 
 1425      6720696E 
 1425      7400
 1426              	.LASF30:
 1427 0187 433A5C55 		.ascii	"C:\\Users\\LAIR\\Documents\\GitHub\\ARC-Controller\\"
 1427      73657273 
 1427      5C4C4149 
 1427      525C446F 
 1427      63756D65 
 1428 01b5 50536F43 		.ascii	"PSoC-Code\\ARC-EMBED.cydsn\000"
 1428      2D436F64 
 1428      655C4152 
 1428      432D454D 
 1428      4245442E 
 1429              	.LASF21:
 1430 01cf 636C6B53 		.ascii	"clkSelectReg\000"
 1430      656C6563 
 1430      74526567 
 1430      00
 1431              	.LASF28:
 1432 01dc 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 1432      4320342E 
 1432      392E3320 
 1432      32303135 
 1432      30333033 
 1433 020f 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 1433      20726576 
 1433      6973696F 
 1433      6E203232 
 1433      31323230 
 1434 0242 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 1434      66756E63 
 1434      74696F6E 
 1434      2D736563 
 1434      74696F6E 
 1435              	.LASF29:
 1436 026a 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\cyPm.c\000"
 1436      6E657261 
 1436      7465645F 
 1436      536F7572 
 1436      63655C50 
 1437              	.LASF2:
 1438 028a 73686F72 		.ascii	"short int\000"
 1438      7420696E 
 1438      7400
 1439              	.LASF19:
 1440 0294 43795379 		.ascii	"CySysPmDeepSleep\000"
 1440      73506D44 
 1440      65657053 
 1440      6C656570 
 1440      00
 1441              	.LASF4:
 1442 02a5 6C6F6E67 		.ascii	"long int\000"
 1442      20696E74 
ARM GAS  C:\Users\LAIR\AppData\Local\Temp\ccSTC7Mo.s 			page 40


 1442      00
 1443              	.LASF14:
 1444 02ae 63686172 		.ascii	"char\000"
 1444      00
 1445              	.LASF0:
 1446 02b3 7369676E 		.ascii	"signed char\000"
 1446      65642063 
 1446      68617200 
 1447              	.LASF25:
 1448 02bf 43795379 		.ascii	"CySysPmFreezeIo\000"
 1448      73506D46 
 1448      7265657A 
 1448      65496F00 
 1449              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
