ARM GAS  C:\Users\LAIR\AppData\Local\Temp\ccb9lIqg.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"USBFS_episr.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.USBFS_EP_1_ISR,"ax",%progbits
  18              		.align	2
  19              		.global	USBFS_EP_1_ISR
  20              		.code	16
  21              		.thumb_func
  22              		.type	USBFS_EP_1_ISR, %function
  23              	USBFS_EP_1_ISR:
  24              	.LFB65:
  25              		.file 1 ".\\Generated_Source\\PSoC4\\USBFS_episr.c"
   1:.\Generated_Source\PSoC4/USBFS_episr.c **** /***************************************************************************//**
   2:.\Generated_Source\PSoC4/USBFS_episr.c **** * \file USBFS_episr.c
   3:.\Generated_Source\PSoC4/USBFS_episr.c **** * \version 3.0
   4:.\Generated_Source\PSoC4/USBFS_episr.c **** *
   5:.\Generated_Source\PSoC4/USBFS_episr.c **** * \brief
   6:.\Generated_Source\PSoC4/USBFS_episr.c **** *  This file contains the Data endpoint Interrupt Service Routines.
   7:.\Generated_Source\PSoC4/USBFS_episr.c **** *
   8:.\Generated_Source\PSoC4/USBFS_episr.c **** ********************************************************************************
   9:.\Generated_Source\PSoC4/USBFS_episr.c **** * \copyright
  10:.\Generated_Source\PSoC4/USBFS_episr.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  11:.\Generated_Source\PSoC4/USBFS_episr.c **** * You may use this file only in accordance with the license, terms, conditions,
  12:.\Generated_Source\PSoC4/USBFS_episr.c **** * disclaimers, and limitations in the end user license agreement accompanying
  13:.\Generated_Source\PSoC4/USBFS_episr.c **** * the software package with which this file was provided.
  14:.\Generated_Source\PSoC4/USBFS_episr.c **** *******************************************************************************/
  15:.\Generated_Source\PSoC4/USBFS_episr.c **** 
  16:.\Generated_Source\PSoC4/USBFS_episr.c **** #include "USBFS_pvt.h"
  17:.\Generated_Source\PSoC4/USBFS_episr.c **** #include "USBFS_cydmac.h"
  18:.\Generated_Source\PSoC4/USBFS_episr.c **** #include "cyapicallbacks.h"
  19:.\Generated_Source\PSoC4/USBFS_episr.c **** 
  20:.\Generated_Source\PSoC4/USBFS_episr.c **** 
  21:.\Generated_Source\PSoC4/USBFS_episr.c **** /***************************************
  22:.\Generated_Source\PSoC4/USBFS_episr.c **** * Custom Declarations
  23:.\Generated_Source\PSoC4/USBFS_episr.c **** ***************************************/
  24:.\Generated_Source\PSoC4/USBFS_episr.c **** /* `#START CUSTOM_DECLARATIONS` Place your declaration here */
  25:.\Generated_Source\PSoC4/USBFS_episr.c **** 
  26:.\Generated_Source\PSoC4/USBFS_episr.c **** /* `#END` */
  27:.\Generated_Source\PSoC4/USBFS_episr.c **** 
  28:.\Generated_Source\PSoC4/USBFS_episr.c **** 
  29:.\Generated_Source\PSoC4/USBFS_episr.c **** #if (USBFS_EP1_ISR_ACTIVE)
  30:.\Generated_Source\PSoC4/USBFS_episr.c ****     /******************************************************************************
  31:.\Generated_Source\PSoC4/USBFS_episr.c ****     * Function Name: USBFS_EP_1_ISR
  32:.\Generated_Source\PSoC4/USBFS_episr.c ****     ***************************************************************************//**
ARM GAS  C:\Users\LAIR\AppData\Local\Temp\ccb9lIqg.s 			page 2


  33:.\Generated_Source\PSoC4/USBFS_episr.c ****     *
  34:.\Generated_Source\PSoC4/USBFS_episr.c ****     *  Endpoint 1 Interrupt Service Routine
  35:.\Generated_Source\PSoC4/USBFS_episr.c ****     *
  36:.\Generated_Source\PSoC4/USBFS_episr.c ****     ******************************************************************************/
  37:.\Generated_Source\PSoC4/USBFS_episr.c ****     CY_ISR(USBFS_EP_1_ISR)
  38:.\Generated_Source\PSoC4/USBFS_episr.c ****     {
  26              		.loc 1 38 0
  27              		.cfi_startproc
  39:.\Generated_Source\PSoC4/USBFS_episr.c **** 
  40:.\Generated_Source\PSoC4/USBFS_episr.c ****     #ifdef USBFS_EP_1_ISR_ENTRY_CALLBACK
  41:.\Generated_Source\PSoC4/USBFS_episr.c ****         USBFS_EP_1_ISR_EntryCallback();
  42:.\Generated_Source\PSoC4/USBFS_episr.c ****     #endif /* (USBFS_EP_1_ISR_ENTRY_CALLBACK) */
  43:.\Generated_Source\PSoC4/USBFS_episr.c **** 
  44:.\Generated_Source\PSoC4/USBFS_episr.c ****         /* `#START EP1_USER_CODE` Place your code here */
  45:.\Generated_Source\PSoC4/USBFS_episr.c **** 
  46:.\Generated_Source\PSoC4/USBFS_episr.c ****         /* `#END` */
  47:.\Generated_Source\PSoC4/USBFS_episr.c **** 
  48:.\Generated_Source\PSoC4/USBFS_episr.c ****     #if (CY_PSOC3 && defined(USBFS_ENABLE_MIDI_STREAMING) && \
  49:.\Generated_Source\PSoC4/USBFS_episr.c ****         !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
  50:.\Generated_Source\PSoC4/USBFS_episr.c ****         {
  51:.\Generated_Source\PSoC4/USBFS_episr.c ****             uint8 intEn = EA;
  52:.\Generated_Source\PSoC4/USBFS_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
  53:.\Generated_Source\PSoC4/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
  54:.\Generated_Source\PSoC4/USBFS_episr.c ****     
  55:.\Generated_Source\PSoC4/USBFS_episr.c ****         USBFS_ClearSieEpInterruptSource(USBFS_SIE_INT_EP1_INTR);
  28              		.loc 1 55 0
  29 0000 0122     		mov	r2, #1
  30 0002 094B     		ldr	r3, .L3
  31 0004 1A60     		str	r2, [r3]
  56:.\Generated_Source\PSoC4/USBFS_episr.c ****             
  57:.\Generated_Source\PSoC4/USBFS_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
  58:.\Generated_Source\PSoC4/USBFS_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
  59:.\Generated_Source\PSoC4/USBFS_episr.c ****         * OUT endpoint: data is ready to be read from endpoint buffer. 
  60:.\Generated_Source\PSoC4/USBFS_episr.c ****         */
  61:.\Generated_Source\PSoC4/USBFS_episr.c ****     #if (CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)
  62:.\Generated_Source\PSoC4/USBFS_episr.c ****         if (0u != (USBFS_EP[USBFS_EP1].addr & USBFS_DIR_IN))
  63:.\Generated_Source\PSoC4/USBFS_episr.c ****     #endif /* (CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO) */
  64:.\Generated_Source\PSoC4/USBFS_episr.c ****         {
  65:.\Generated_Source\PSoC4/USBFS_episr.c ****             /* Read CR0 register to clear SIE lock. */
  66:.\Generated_Source\PSoC4/USBFS_episr.c ****             (void) USBFS_SIE_EP_BASE.sieEp[USBFS_EP1].epCr0;
  32              		.loc 1 66 0
  33 0006 094B     		ldr	r3, .L3+4
  34 0008 9B6C     		ldr	r3, [r3, #72]
  67:.\Generated_Source\PSoC4/USBFS_episr.c ****             
  68:.\Generated_Source\PSoC4/USBFS_episr.c ****             /* Toggle all endpoint types except ISOC. */
  69:.\Generated_Source\PSoC4/USBFS_episr.c ****             if (USBFS_GET_EP_TYPE(USBFS_EP1) != USBFS_EP_TYPE_ISOC)
  35              		.loc 1 69 0
  36 000a 094B     		ldr	r3, .L3+8
  37 000c 1A7B     		ldrb	r2, [r3, #12]
  38 000e 0323     		mov	r3, #3
  39 0010 1340     		and	r3, r2
  40 0012 012B     		cmp	r3, #1
  41 0014 04D0     		beq	.L2
  70:.\Generated_Source\PSoC4/USBFS_episr.c ****             {
  71:.\Generated_Source\PSoC4/USBFS_episr.c ****                 USBFS_EP[USBFS_EP1].epToggle ^= USBFS_EPX_CNT_DATA_TOGGLE;
  42              		.loc 1 71 0
  43 0016 064A     		ldr	r2, .L3+8
ARM GAS  C:\Users\LAIR\AppData\Local\Temp\ccb9lIqg.s 			page 3


  44 0018 D17B     		ldrb	r1, [r2, #15]
  45 001a 8023     		mov	r3, #128
  46 001c 4B40     		eor	r3, r1
  47 001e D373     		strb	r3, [r2, #15]
  48              	.L2:
  72:.\Generated_Source\PSoC4/USBFS_episr.c ****             }
  73:.\Generated_Source\PSoC4/USBFS_episr.c **** 
  74:.\Generated_Source\PSoC4/USBFS_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
  75:.\Generated_Source\PSoC4/USBFS_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
  76:.\Generated_Source\PSoC4/USBFS_episr.c ****             * Because last chunk of data is being copied.
  77:.\Generated_Source\PSoC4/USBFS_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
  78:.\Generated_Source\PSoC4/USBFS_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
  79:.\Generated_Source\PSoC4/USBFS_episr.c ****             */
  80:.\Generated_Source\PSoC4/USBFS_episr.c ****             USBFS_EP[USBFS_EP1].apiEpState = USBFS_EVENT_PENDING;
  49              		.loc 1 80 0
  50 0020 0122     		mov	r2, #1
  51 0022 034B     		ldr	r3, .L3+8
  52 0024 5A73     		strb	r2, [r3, #13]
  81:.\Generated_Source\PSoC4/USBFS_episr.c ****         }
  82:.\Generated_Source\PSoC4/USBFS_episr.c **** 
  83:.\Generated_Source\PSoC4/USBFS_episr.c ****     #if (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO))
  84:.\Generated_Source\PSoC4/USBFS_episr.c ****         #if (defined(USBFS_ENABLE_MIDI_STREAMING) && \
  85:.\Generated_Source\PSoC4/USBFS_episr.c ****             !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
  86:.\Generated_Source\PSoC4/USBFS_episr.c ****             if (USBFS_midi_out_ep == USBFS_EP1)
  87:.\Generated_Source\PSoC4/USBFS_episr.c ****             {
  88:.\Generated_Source\PSoC4/USBFS_episr.c ****                 USBFS_MIDI_OUT_Service();
  89:.\Generated_Source\PSoC4/USBFS_episr.c ****             }
  90:.\Generated_Source\PSoC4/USBFS_episr.c ****         #endif /* (USBFS_ISR_SERVICE_MIDI_OUT) */
  91:.\Generated_Source\PSoC4/USBFS_episr.c ****     #endif /* (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)) */
  92:.\Generated_Source\PSoC4/USBFS_episr.c ****     
  93:.\Generated_Source\PSoC4/USBFS_episr.c ****         /* `#START EP1_END_USER_CODE` Place your code here */
  94:.\Generated_Source\PSoC4/USBFS_episr.c **** 
  95:.\Generated_Source\PSoC4/USBFS_episr.c ****         /* `#END` */
  96:.\Generated_Source\PSoC4/USBFS_episr.c **** 
  97:.\Generated_Source\PSoC4/USBFS_episr.c ****     #ifdef USBFS_EP_1_ISR_EXIT_CALLBACK
  98:.\Generated_Source\PSoC4/USBFS_episr.c ****         USBFS_EP_1_ISR_ExitCallback();
  99:.\Generated_Source\PSoC4/USBFS_episr.c ****     #endif /* (USBFS_EP_1_ISR_EXIT_CALLBACK) */
 100:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 101:.\Generated_Source\PSoC4/USBFS_episr.c ****     #if (CY_PSOC3 && defined(USBFS_ENABLE_MIDI_STREAMING) && \
 102:.\Generated_Source\PSoC4/USBFS_episr.c ****         !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 103:.\Generated_Source\PSoC4/USBFS_episr.c ****         
 104:.\Generated_Source\PSoC4/USBFS_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 105:.\Generated_Source\PSoC4/USBFS_episr.c ****         }
 106:.\Generated_Source\PSoC4/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
 107:.\Generated_Source\PSoC4/USBFS_episr.c ****     }
  53              		.loc 1 107 0
  54              		@ sp needed
  55 0026 7047     		bx	lr
  56              	.L4:
  57              		.align	2
  58              	.L3:
  59 0028 2C002C40 		.word	1076625452
  60 002c F0FF2B40 		.word	1076625392
  61 0030 00000000 		.word	USBFS_EP
  62              		.cfi_endproc
  63              	.LFE65:
  64              		.size	USBFS_EP_1_ISR, .-USBFS_EP_1_ISR
ARM GAS  C:\Users\LAIR\AppData\Local\Temp\ccb9lIqg.s 			page 4


  65              		.section	.text.USBFS_EP_2_ISR,"ax",%progbits
  66              		.align	2
  67              		.global	USBFS_EP_2_ISR
  68              		.code	16
  69              		.thumb_func
  70              		.type	USBFS_EP_2_ISR, %function
  71              	USBFS_EP_2_ISR:
  72              	.LFB66:
 108:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 109:.\Generated_Source\PSoC4/USBFS_episr.c **** #endif /* (USBFS_EP1_ISR_ACTIVE) */
 110:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 111:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 112:.\Generated_Source\PSoC4/USBFS_episr.c **** #if (USBFS_EP2_ISR_ACTIVE)
 113:.\Generated_Source\PSoC4/USBFS_episr.c ****     /*******************************************************************************
 114:.\Generated_Source\PSoC4/USBFS_episr.c ****     * Function Name: USBFS_EP_2_ISR
 115:.\Generated_Source\PSoC4/USBFS_episr.c ****     ****************************************************************************//**
 116:.\Generated_Source\PSoC4/USBFS_episr.c ****     *
 117:.\Generated_Source\PSoC4/USBFS_episr.c ****     *  Endpoint 2 Interrupt Service Routine.
 118:.\Generated_Source\PSoC4/USBFS_episr.c ****     *
 119:.\Generated_Source\PSoC4/USBFS_episr.c ****     *******************************************************************************/
 120:.\Generated_Source\PSoC4/USBFS_episr.c ****     CY_ISR(USBFS_EP_2_ISR)
 121:.\Generated_Source\PSoC4/USBFS_episr.c ****     {
  73              		.loc 1 121 0
  74              		.cfi_startproc
 122:.\Generated_Source\PSoC4/USBFS_episr.c ****     #ifdef USBFS_EP_2_ISR_ENTRY_CALLBACK
 123:.\Generated_Source\PSoC4/USBFS_episr.c ****         USBFS_EP_2_ISR_EntryCallback();
 124:.\Generated_Source\PSoC4/USBFS_episr.c ****     #endif /* (USBFS_EP_2_ISR_ENTRY_CALLBACK) */
 125:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 126:.\Generated_Source\PSoC4/USBFS_episr.c ****         /* `#START EP2_USER_CODE` Place your code here */
 127:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 128:.\Generated_Source\PSoC4/USBFS_episr.c ****         /* `#END` */
 129:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 130:.\Generated_Source\PSoC4/USBFS_episr.c ****     #if (CY_PSOC3 && defined(USBFS_ENABLE_MIDI_STREAMING) && \
 131:.\Generated_Source\PSoC4/USBFS_episr.c ****         !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 132:.\Generated_Source\PSoC4/USBFS_episr.c ****         {
 133:.\Generated_Source\PSoC4/USBFS_episr.c ****             uint8 intEn = EA;
 134:.\Generated_Source\PSoC4/USBFS_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 135:.\Generated_Source\PSoC4/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
 136:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 137:.\Generated_Source\PSoC4/USBFS_episr.c ****         USBFS_ClearSieEpInterruptSource(USBFS_SIE_INT_EP2_INTR);
  75              		.loc 1 137 0
  76 0000 0222     		mov	r2, #2
  77 0002 0A4B     		ldr	r3, .L7
  78 0004 1A60     		str	r2, [r3]
 138:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 139:.\Generated_Source\PSoC4/USBFS_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 140:.\Generated_Source\PSoC4/USBFS_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 141:.\Generated_Source\PSoC4/USBFS_episr.c ****         * OUT endpoint: data is ready to be read from endpoint buffer. 
 142:.\Generated_Source\PSoC4/USBFS_episr.c ****         */
 143:.\Generated_Source\PSoC4/USBFS_episr.c ****     #if (CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)
 144:.\Generated_Source\PSoC4/USBFS_episr.c ****         if (0u != (USBFS_EP[USBFS_EP2].addr & USBFS_DIR_IN))
 145:.\Generated_Source\PSoC4/USBFS_episr.c ****     #endif /* (CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO) */
 146:.\Generated_Source\PSoC4/USBFS_episr.c ****         {            
 147:.\Generated_Source\PSoC4/USBFS_episr.c ****             /* Read CR0 register to clear SIE lock. */
 148:.\Generated_Source\PSoC4/USBFS_episr.c ****             (void) USBFS_SIE_EP_BASE.sieEp[USBFS_EP2].epCr0;
  79              		.loc 1 148 0
  80 0006 8823     		mov	r3, #136
ARM GAS  C:\Users\LAIR\AppData\Local\Temp\ccb9lIqg.s 			page 5


  81 0008 094A     		ldr	r2, .L7+4
  82 000a D358     		ldr	r3, [r2, r3]
 149:.\Generated_Source\PSoC4/USBFS_episr.c ****             
 150:.\Generated_Source\PSoC4/USBFS_episr.c ****             /* Toggle all endpoint types except ISOC. */
 151:.\Generated_Source\PSoC4/USBFS_episr.c ****             if (USBFS_GET_EP_TYPE(USBFS_EP2) != USBFS_EP_TYPE_ISOC)
  83              		.loc 1 151 0
  84 000c 094B     		ldr	r3, .L7+8
  85 000e 1A7E     		ldrb	r2, [r3, #24]
  86 0010 0323     		mov	r3, #3
  87 0012 1340     		and	r3, r2
  88 0014 012B     		cmp	r3, #1
  89 0016 04D0     		beq	.L6
 152:.\Generated_Source\PSoC4/USBFS_episr.c ****             {
 153:.\Generated_Source\PSoC4/USBFS_episr.c ****                 USBFS_EP[USBFS_EP2].epToggle ^= USBFS_EPX_CNT_DATA_TOGGLE;
  90              		.loc 1 153 0
  91 0018 064A     		ldr	r2, .L7+8
  92 001a D17E     		ldrb	r1, [r2, #27]
  93 001c 8023     		mov	r3, #128
  94 001e 4B40     		eor	r3, r1
  95 0020 D376     		strb	r3, [r2, #27]
  96              	.L6:
 154:.\Generated_Source\PSoC4/USBFS_episr.c ****             }
 155:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 156:.\Generated_Source\PSoC4/USBFS_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 157:.\Generated_Source\PSoC4/USBFS_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 158:.\Generated_Source\PSoC4/USBFS_episr.c ****             * Because last chunk of data is being copied.
 159:.\Generated_Source\PSoC4/USBFS_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 160:.\Generated_Source\PSoC4/USBFS_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 161:.\Generated_Source\PSoC4/USBFS_episr.c ****             */
 162:.\Generated_Source\PSoC4/USBFS_episr.c ****             USBFS_EP[USBFS_EP2].apiEpState = USBFS_EVENT_PENDING;
  97              		.loc 1 162 0
  98 0022 0122     		mov	r2, #1
  99 0024 034B     		ldr	r3, .L7+8
 100 0026 5A76     		strb	r2, [r3, #25]
 163:.\Generated_Source\PSoC4/USBFS_episr.c ****         }
 164:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 165:.\Generated_Source\PSoC4/USBFS_episr.c ****     #if (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO))
 166:.\Generated_Source\PSoC4/USBFS_episr.c ****         #if (defined(USBFS_ENABLE_MIDI_STREAMING) && \
 167:.\Generated_Source\PSoC4/USBFS_episr.c ****             !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 168:.\Generated_Source\PSoC4/USBFS_episr.c ****             if (USBFS_midi_out_ep == USBFS_EP2)
 169:.\Generated_Source\PSoC4/USBFS_episr.c ****             {
 170:.\Generated_Source\PSoC4/USBFS_episr.c ****                 USBFS_MIDI_OUT_Service();
 171:.\Generated_Source\PSoC4/USBFS_episr.c ****             }
 172:.\Generated_Source\PSoC4/USBFS_episr.c ****         #endif /* (USBFS_ISR_SERVICE_MIDI_OUT) */
 173:.\Generated_Source\PSoC4/USBFS_episr.c ****     #endif /* (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)) */        
 174:.\Generated_Source\PSoC4/USBFS_episr.c ****     
 175:.\Generated_Source\PSoC4/USBFS_episr.c ****         /* `#START EP2_END_USER_CODE` Place your code here */
 176:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 177:.\Generated_Source\PSoC4/USBFS_episr.c ****         /* `#END` */
 178:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 179:.\Generated_Source\PSoC4/USBFS_episr.c ****     #ifdef USBFS_EP_2_ISR_EXIT_CALLBACK
 180:.\Generated_Source\PSoC4/USBFS_episr.c ****         USBFS_EP_2_ISR_ExitCallback();
 181:.\Generated_Source\PSoC4/USBFS_episr.c ****     #endif /* (USBFS_EP_2_ISR_EXIT_CALLBACK) */
 182:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 183:.\Generated_Source\PSoC4/USBFS_episr.c ****     #if (CY_PSOC3 && defined(USBFS_ENABLE_MIDI_STREAMING) && \
 184:.\Generated_Source\PSoC4/USBFS_episr.c ****         !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 185:.\Generated_Source\PSoC4/USBFS_episr.c ****         
ARM GAS  C:\Users\LAIR\AppData\Local\Temp\ccb9lIqg.s 			page 6


 186:.\Generated_Source\PSoC4/USBFS_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 187:.\Generated_Source\PSoC4/USBFS_episr.c ****         }
 188:.\Generated_Source\PSoC4/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
 189:.\Generated_Source\PSoC4/USBFS_episr.c ****     }
 101              		.loc 1 189 0
 102              		@ sp needed
 103 0028 7047     		bx	lr
 104              	.L8:
 105 002a C046     		.align	2
 106              	.L7:
 107 002c 2C002C40 		.word	1076625452
 108 0030 F0FF2B40 		.word	1076625392
 109 0034 00000000 		.word	USBFS_EP
 110              		.cfi_endproc
 111              	.LFE66:
 112              		.size	USBFS_EP_2_ISR, .-USBFS_EP_2_ISR
 113              		.section	.text.USBFS_ARB_ISR,"ax",%progbits
 114              		.align	2
 115              		.global	USBFS_ARB_ISR
 116              		.code	16
 117              		.thumb_func
 118              		.type	USBFS_ARB_ISR, %function
 119              	USBFS_ARB_ISR:
 120              	.LFB68:
 190:.\Generated_Source\PSoC4/USBFS_episr.c **** #endif /* (USBFS_EP2_ISR_ACTIVE) */
 191:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 192:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 193:.\Generated_Source\PSoC4/USBFS_episr.c **** #if (USBFS_EP3_ISR_ACTIVE)
 194:.\Generated_Source\PSoC4/USBFS_episr.c ****     /*******************************************************************************
 195:.\Generated_Source\PSoC4/USBFS_episr.c ****     * Function Name: USBFS_EP_3_ISR
 196:.\Generated_Source\PSoC4/USBFS_episr.c ****     ****************************************************************************//**
 197:.\Generated_Source\PSoC4/USBFS_episr.c ****     *
 198:.\Generated_Source\PSoC4/USBFS_episr.c ****     *  Endpoint 3 Interrupt Service Routine.
 199:.\Generated_Source\PSoC4/USBFS_episr.c ****     *
 200:.\Generated_Source\PSoC4/USBFS_episr.c ****     *******************************************************************************/
 201:.\Generated_Source\PSoC4/USBFS_episr.c ****     CY_ISR(USBFS_EP_3_ISR)
 202:.\Generated_Source\PSoC4/USBFS_episr.c ****     {
 203:.\Generated_Source\PSoC4/USBFS_episr.c ****     #ifdef USBFS_EP_3_ISR_ENTRY_CALLBACK
 204:.\Generated_Source\PSoC4/USBFS_episr.c ****         USBFS_EP_3_ISR_EntryCallback();
 205:.\Generated_Source\PSoC4/USBFS_episr.c ****     #endif /* (USBFS_EP_3_ISR_ENTRY_CALLBACK) */
 206:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 207:.\Generated_Source\PSoC4/USBFS_episr.c ****         /* `#START EP3_USER_CODE` Place your code here */
 208:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 209:.\Generated_Source\PSoC4/USBFS_episr.c ****         /* `#END` */
 210:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 211:.\Generated_Source\PSoC4/USBFS_episr.c ****     #if (CY_PSOC3 && defined(USBFS_ENABLE_MIDI_STREAMING) && \
 212:.\Generated_Source\PSoC4/USBFS_episr.c ****         !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 213:.\Generated_Source\PSoC4/USBFS_episr.c ****         {
 214:.\Generated_Source\PSoC4/USBFS_episr.c ****             uint8 intEn = EA;
 215:.\Generated_Source\PSoC4/USBFS_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 216:.\Generated_Source\PSoC4/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
 217:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 218:.\Generated_Source\PSoC4/USBFS_episr.c ****         USBFS_ClearSieEpInterruptSource(USBFS_SIE_INT_EP3_INTR);    
 219:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 220:.\Generated_Source\PSoC4/USBFS_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 221:.\Generated_Source\PSoC4/USBFS_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 222:.\Generated_Source\PSoC4/USBFS_episr.c ****         * OUT endpoint: data is ready to be read from endpoint buffer. 
ARM GAS  C:\Users\LAIR\AppData\Local\Temp\ccb9lIqg.s 			page 7


 223:.\Generated_Source\PSoC4/USBFS_episr.c ****         */
 224:.\Generated_Source\PSoC4/USBFS_episr.c ****     #if (CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)
 225:.\Generated_Source\PSoC4/USBFS_episr.c ****         if (0u != (USBFS_EP[USBFS_EP3].addr & USBFS_DIR_IN))
 226:.\Generated_Source\PSoC4/USBFS_episr.c ****     #endif /* (USBFS_EP_MANAGEMENT_DMA_AUTO) */
 227:.\Generated_Source\PSoC4/USBFS_episr.c ****         {            
 228:.\Generated_Source\PSoC4/USBFS_episr.c ****             /* Read CR0 register to clear SIE lock. */
 229:.\Generated_Source\PSoC4/USBFS_episr.c ****             (void) USBFS_SIE_EP_BASE.sieEp[USBFS_EP3].epCr0;
 230:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 231:.\Generated_Source\PSoC4/USBFS_episr.c ****             /* Toggle all endpoint types except ISOC. */
 232:.\Generated_Source\PSoC4/USBFS_episr.c ****             if (USBFS_GET_EP_TYPE(USBFS_EP3) != USBFS_EP_TYPE_ISOC)
 233:.\Generated_Source\PSoC4/USBFS_episr.c ****             {
 234:.\Generated_Source\PSoC4/USBFS_episr.c ****                 USBFS_EP[USBFS_EP3].epToggle ^= USBFS_EPX_CNT_DATA_TOGGLE;
 235:.\Generated_Source\PSoC4/USBFS_episr.c ****             }
 236:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 237:.\Generated_Source\PSoC4/USBFS_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 238:.\Generated_Source\PSoC4/USBFS_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 239:.\Generated_Source\PSoC4/USBFS_episr.c ****             * Because last chunk of data is being copied.
 240:.\Generated_Source\PSoC4/USBFS_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 241:.\Generated_Source\PSoC4/USBFS_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 242:.\Generated_Source\PSoC4/USBFS_episr.c ****             */
 243:.\Generated_Source\PSoC4/USBFS_episr.c ****             USBFS_EP[USBFS_EP3].apiEpState = USBFS_EVENT_PENDING;
 244:.\Generated_Source\PSoC4/USBFS_episr.c ****         }
 245:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 246:.\Generated_Source\PSoC4/USBFS_episr.c ****     #if (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO))
 247:.\Generated_Source\PSoC4/USBFS_episr.c ****         #if (defined(USBFS_ENABLE_MIDI_STREAMING) && \
 248:.\Generated_Source\PSoC4/USBFS_episr.c ****             !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 249:.\Generated_Source\PSoC4/USBFS_episr.c ****             if (USBFS_midi_out_ep == USBFS_EP3)
 250:.\Generated_Source\PSoC4/USBFS_episr.c ****             {
 251:.\Generated_Source\PSoC4/USBFS_episr.c ****                 USBFS_MIDI_OUT_Service();
 252:.\Generated_Source\PSoC4/USBFS_episr.c ****             }
 253:.\Generated_Source\PSoC4/USBFS_episr.c ****         #endif /* (USBFS_ISR_SERVICE_MIDI_OUT) */
 254:.\Generated_Source\PSoC4/USBFS_episr.c ****     #endif /* (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)) */        
 255:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 256:.\Generated_Source\PSoC4/USBFS_episr.c ****         /* `#START EP3_END_USER_CODE` Place your code here */
 257:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 258:.\Generated_Source\PSoC4/USBFS_episr.c ****         /* `#END` */
 259:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 260:.\Generated_Source\PSoC4/USBFS_episr.c ****     #ifdef USBFS_EP_3_ISR_EXIT_CALLBACK
 261:.\Generated_Source\PSoC4/USBFS_episr.c ****         USBFS_EP_3_ISR_ExitCallback();
 262:.\Generated_Source\PSoC4/USBFS_episr.c ****     #endif /* (USBFS_EP_3_ISR_EXIT_CALLBACK) */
 263:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 264:.\Generated_Source\PSoC4/USBFS_episr.c ****     #if (CY_PSOC3 && defined(USBFS_ENABLE_MIDI_STREAMING) && \
 265:.\Generated_Source\PSoC4/USBFS_episr.c ****         !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 266:.\Generated_Source\PSoC4/USBFS_episr.c ****         
 267:.\Generated_Source\PSoC4/USBFS_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 268:.\Generated_Source\PSoC4/USBFS_episr.c ****         }
 269:.\Generated_Source\PSoC4/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
 270:.\Generated_Source\PSoC4/USBFS_episr.c ****     }
 271:.\Generated_Source\PSoC4/USBFS_episr.c **** #endif /* (USBFS_EP3_ISR_ACTIVE) */
 272:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 273:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 274:.\Generated_Source\PSoC4/USBFS_episr.c **** #if (USBFS_EP4_ISR_ACTIVE)
 275:.\Generated_Source\PSoC4/USBFS_episr.c ****     /*******************************************************************************
 276:.\Generated_Source\PSoC4/USBFS_episr.c ****     * Function Name: USBFS_EP_4_ISR
 277:.\Generated_Source\PSoC4/USBFS_episr.c ****     ****************************************************************************//**
 278:.\Generated_Source\PSoC4/USBFS_episr.c ****     *
 279:.\Generated_Source\PSoC4/USBFS_episr.c ****     *  Endpoint 4 Interrupt Service Routine.
ARM GAS  C:\Users\LAIR\AppData\Local\Temp\ccb9lIqg.s 			page 8


 280:.\Generated_Source\PSoC4/USBFS_episr.c ****     *
 281:.\Generated_Source\PSoC4/USBFS_episr.c ****     *******************************************************************************/
 282:.\Generated_Source\PSoC4/USBFS_episr.c ****     CY_ISR(USBFS_EP_4_ISR)
 283:.\Generated_Source\PSoC4/USBFS_episr.c ****     {
 284:.\Generated_Source\PSoC4/USBFS_episr.c ****     #ifdef USBFS_EP_4_ISR_ENTRY_CALLBACK
 285:.\Generated_Source\PSoC4/USBFS_episr.c ****         USBFS_EP_4_ISR_EntryCallback();
 286:.\Generated_Source\PSoC4/USBFS_episr.c ****     #endif /* (USBFS_EP_4_ISR_ENTRY_CALLBACK) */
 287:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 288:.\Generated_Source\PSoC4/USBFS_episr.c ****         /* `#START EP4_USER_CODE` Place your code here */
 289:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 290:.\Generated_Source\PSoC4/USBFS_episr.c ****         /* `#END` */
 291:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 292:.\Generated_Source\PSoC4/USBFS_episr.c ****     #if (CY_PSOC3 && defined(USBFS_ENABLE_MIDI_STREAMING) && \
 293:.\Generated_Source\PSoC4/USBFS_episr.c ****         !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 294:.\Generated_Source\PSoC4/USBFS_episr.c ****         {
 295:.\Generated_Source\PSoC4/USBFS_episr.c ****             uint8 intEn = EA;
 296:.\Generated_Source\PSoC4/USBFS_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 297:.\Generated_Source\PSoC4/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
 298:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 299:.\Generated_Source\PSoC4/USBFS_episr.c ****         USBFS_ClearSieEpInterruptSource(USBFS_SIE_INT_EP4_INTR);
 300:.\Generated_Source\PSoC4/USBFS_episr.c ****         
 301:.\Generated_Source\PSoC4/USBFS_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 302:.\Generated_Source\PSoC4/USBFS_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 303:.\Generated_Source\PSoC4/USBFS_episr.c ****         * OUT endpoint: data is ready to read from endpoint buffer. 
 304:.\Generated_Source\PSoC4/USBFS_episr.c ****         */
 305:.\Generated_Source\PSoC4/USBFS_episr.c ****     #if (CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)
 306:.\Generated_Source\PSoC4/USBFS_episr.c ****         if (0u != (USBFS_EP[USBFS_EP4].addr & USBFS_DIR_IN))
 307:.\Generated_Source\PSoC4/USBFS_episr.c ****     #endif /* (USBFS_EP_MANAGEMENT_DMA_AUTO) */
 308:.\Generated_Source\PSoC4/USBFS_episr.c ****         {
 309:.\Generated_Source\PSoC4/USBFS_episr.c ****             /* Read CR0 register to clear SIE lock. */
 310:.\Generated_Source\PSoC4/USBFS_episr.c ****             (void) USBFS_SIE_EP_BASE.sieEp[USBFS_EP4].epCr0;
 311:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 312:.\Generated_Source\PSoC4/USBFS_episr.c ****             /* Toggle all endpoint types except ISOC. */
 313:.\Generated_Source\PSoC4/USBFS_episr.c ****             if (USBFS_GET_EP_TYPE(USBFS_EP4) != USBFS_EP_TYPE_ISOC)
 314:.\Generated_Source\PSoC4/USBFS_episr.c ****             {
 315:.\Generated_Source\PSoC4/USBFS_episr.c ****                 USBFS_EP[USBFS_EP4].epToggle ^= USBFS_EPX_CNT_DATA_TOGGLE;
 316:.\Generated_Source\PSoC4/USBFS_episr.c ****             }
 317:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 318:.\Generated_Source\PSoC4/USBFS_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 319:.\Generated_Source\PSoC4/USBFS_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 320:.\Generated_Source\PSoC4/USBFS_episr.c ****             * Because last chunk of data is being copied.
 321:.\Generated_Source\PSoC4/USBFS_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 322:.\Generated_Source\PSoC4/USBFS_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 323:.\Generated_Source\PSoC4/USBFS_episr.c ****             */
 324:.\Generated_Source\PSoC4/USBFS_episr.c ****             USBFS_EP[USBFS_EP4].apiEpState = USBFS_EVENT_PENDING;
 325:.\Generated_Source\PSoC4/USBFS_episr.c ****         }
 326:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 327:.\Generated_Source\PSoC4/USBFS_episr.c ****     #if (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO))
 328:.\Generated_Source\PSoC4/USBFS_episr.c ****         #if (defined(USBFS_ENABLE_MIDI_STREAMING) && \
 329:.\Generated_Source\PSoC4/USBFS_episr.c ****             !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 330:.\Generated_Source\PSoC4/USBFS_episr.c ****             if(USBFS_midi_out_ep == USBFS_EP4)
 331:.\Generated_Source\PSoC4/USBFS_episr.c ****             {
 332:.\Generated_Source\PSoC4/USBFS_episr.c ****                 USBFS_MIDI_OUT_Service();
 333:.\Generated_Source\PSoC4/USBFS_episr.c ****             }
 334:.\Generated_Source\PSoC4/USBFS_episr.c ****         #endif /* (USBFS_ISR_SERVICE_MIDI_OUT) */
 335:.\Generated_Source\PSoC4/USBFS_episr.c ****     #endif /* (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)) */        
 336:.\Generated_Source\PSoC4/USBFS_episr.c **** 
ARM GAS  C:\Users\LAIR\AppData\Local\Temp\ccb9lIqg.s 			page 9


 337:.\Generated_Source\PSoC4/USBFS_episr.c ****         /* `#START EP4_END_USER_CODE` Place your code here */
 338:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 339:.\Generated_Source\PSoC4/USBFS_episr.c ****         /* `#END` */
 340:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 341:.\Generated_Source\PSoC4/USBFS_episr.c ****     #ifdef USBFS_EP_4_ISR_EXIT_CALLBACK
 342:.\Generated_Source\PSoC4/USBFS_episr.c ****         USBFS_EP_4_ISR_ExitCallback();
 343:.\Generated_Source\PSoC4/USBFS_episr.c ****     #endif /* (USBFS_EP_4_ISR_EXIT_CALLBACK) */
 344:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 345:.\Generated_Source\PSoC4/USBFS_episr.c ****     #if (CY_PSOC3 && defined(USBFS_ENABLE_MIDI_STREAMING) && \
 346:.\Generated_Source\PSoC4/USBFS_episr.c ****         !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 347:.\Generated_Source\PSoC4/USBFS_episr.c ****         
 348:.\Generated_Source\PSoC4/USBFS_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 349:.\Generated_Source\PSoC4/USBFS_episr.c ****         }
 350:.\Generated_Source\PSoC4/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
 351:.\Generated_Source\PSoC4/USBFS_episr.c ****     }
 352:.\Generated_Source\PSoC4/USBFS_episr.c **** #endif /* (USBFS_EP4_ISR_ACTIVE) */
 353:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 354:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 355:.\Generated_Source\PSoC4/USBFS_episr.c **** #if (USBFS_EP5_ISR_ACTIVE)
 356:.\Generated_Source\PSoC4/USBFS_episr.c ****     /*******************************************************************************
 357:.\Generated_Source\PSoC4/USBFS_episr.c ****     * Function Name: USBFS_EP_5_ISR
 358:.\Generated_Source\PSoC4/USBFS_episr.c ****     ****************************************************************************//**
 359:.\Generated_Source\PSoC4/USBFS_episr.c ****     *
 360:.\Generated_Source\PSoC4/USBFS_episr.c ****     *  Endpoint 5 Interrupt Service Routine
 361:.\Generated_Source\PSoC4/USBFS_episr.c ****     *
 362:.\Generated_Source\PSoC4/USBFS_episr.c ****     *
 363:.\Generated_Source\PSoC4/USBFS_episr.c ****     *******************************************************************************/
 364:.\Generated_Source\PSoC4/USBFS_episr.c ****     CY_ISR(USBFS_EP_5_ISR)
 365:.\Generated_Source\PSoC4/USBFS_episr.c ****     {
 366:.\Generated_Source\PSoC4/USBFS_episr.c ****     #ifdef USBFS_EP_5_ISR_ENTRY_CALLBACK
 367:.\Generated_Source\PSoC4/USBFS_episr.c ****         USBFS_EP_5_ISR_EntryCallback();
 368:.\Generated_Source\PSoC4/USBFS_episr.c ****     #endif /* (USBFS_EP_5_ISR_ENTRY_CALLBACK) */
 369:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 370:.\Generated_Source\PSoC4/USBFS_episr.c ****         /* `#START EP5_USER_CODE` Place your code here */
 371:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 372:.\Generated_Source\PSoC4/USBFS_episr.c ****         /* `#END` */
 373:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 374:.\Generated_Source\PSoC4/USBFS_episr.c ****     #if (defined(USBFS_ENABLE_MIDI_STREAMING) && !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && \
 375:.\Generated_Source\PSoC4/USBFS_episr.c ****                  USBFS_ISR_SERVICE_MIDI_OUT && CY_PSOC3)
 376:.\Generated_Source\PSoC4/USBFS_episr.c ****         {
 377:.\Generated_Source\PSoC4/USBFS_episr.c ****             uint8 intEn = EA;
 378:.\Generated_Source\PSoC4/USBFS_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 379:.\Generated_Source\PSoC4/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
 380:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 381:.\Generated_Source\PSoC4/USBFS_episr.c ****         USBFS_ClearSieEpInterruptSource(USBFS_SIE_INT_EP5_INTR);
 382:.\Generated_Source\PSoC4/USBFS_episr.c ****     
 383:.\Generated_Source\PSoC4/USBFS_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 384:.\Generated_Source\PSoC4/USBFS_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 385:.\Generated_Source\PSoC4/USBFS_episr.c ****         * OUT endpoint: data is ready to read from endpoint buffer. 
 386:.\Generated_Source\PSoC4/USBFS_episr.c ****         */
 387:.\Generated_Source\PSoC4/USBFS_episr.c ****     #if (CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)
 388:.\Generated_Source\PSoC4/USBFS_episr.c ****         if (0u != (USBFS_EP[USBFS_EP5].addr & USBFS_DIR_IN))
 389:.\Generated_Source\PSoC4/USBFS_episr.c ****     #endif /* (USBFS_EP_MANAGEMENT_DMA_AUTO) */
 390:.\Generated_Source\PSoC4/USBFS_episr.c ****         {            
 391:.\Generated_Source\PSoC4/USBFS_episr.c ****             /* Read CR0 register to clear SIE lock. */
 392:.\Generated_Source\PSoC4/USBFS_episr.c ****             (void) USBFS_SIE_EP_BASE.sieEp[USBFS_EP5].epCr0;
 393:.\Generated_Source\PSoC4/USBFS_episr.c **** 
ARM GAS  C:\Users\LAIR\AppData\Local\Temp\ccb9lIqg.s 			page 10


 394:.\Generated_Source\PSoC4/USBFS_episr.c ****             /* Toggle all endpoint types except ISOC. */
 395:.\Generated_Source\PSoC4/USBFS_episr.c ****             if (USBFS_GET_EP_TYPE(USBFS_EP5) != USBFS_EP_TYPE_ISOC)
 396:.\Generated_Source\PSoC4/USBFS_episr.c ****             {
 397:.\Generated_Source\PSoC4/USBFS_episr.c ****                 USBFS_EP[USBFS_EP5].epToggle ^= USBFS_EPX_CNT_DATA_TOGGLE;
 398:.\Generated_Source\PSoC4/USBFS_episr.c ****             }
 399:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 400:.\Generated_Source\PSoC4/USBFS_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 401:.\Generated_Source\PSoC4/USBFS_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 402:.\Generated_Source\PSoC4/USBFS_episr.c ****             * Because last chunk of data is being copied.
 403:.\Generated_Source\PSoC4/USBFS_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 404:.\Generated_Source\PSoC4/USBFS_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 405:.\Generated_Source\PSoC4/USBFS_episr.c ****             */
 406:.\Generated_Source\PSoC4/USBFS_episr.c ****             USBFS_EP[USBFS_EP5].apiEpState = USBFS_EVENT_PENDING;
 407:.\Generated_Source\PSoC4/USBFS_episr.c ****         }
 408:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 409:.\Generated_Source\PSoC4/USBFS_episr.c ****     #if (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO))        
 410:.\Generated_Source\PSoC4/USBFS_episr.c ****         #if (defined(USBFS_ENABLE_MIDI_STREAMING) && \
 411:.\Generated_Source\PSoC4/USBFS_episr.c ****             !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 412:.\Generated_Source\PSoC4/USBFS_episr.c ****             if (USBFS_midi_out_ep == USBFS_EP5)
 413:.\Generated_Source\PSoC4/USBFS_episr.c ****             {
 414:.\Generated_Source\PSoC4/USBFS_episr.c ****                 USBFS_MIDI_OUT_Service();
 415:.\Generated_Source\PSoC4/USBFS_episr.c ****             }
 416:.\Generated_Source\PSoC4/USBFS_episr.c ****         #endif /* (USBFS_ISR_SERVICE_MIDI_OUT) */
 417:.\Generated_Source\PSoC4/USBFS_episr.c ****     #endif /* (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)) */
 418:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 419:.\Generated_Source\PSoC4/USBFS_episr.c ****         /* `#START EP5_END_USER_CODE` Place your code here */
 420:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 421:.\Generated_Source\PSoC4/USBFS_episr.c ****         /* `#END` */
 422:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 423:.\Generated_Source\PSoC4/USBFS_episr.c ****     #ifdef USBFS_EP_5_ISR_EXIT_CALLBACK
 424:.\Generated_Source\PSoC4/USBFS_episr.c ****         USBFS_EP_5_ISR_ExitCallback();
 425:.\Generated_Source\PSoC4/USBFS_episr.c ****     #endif /* (USBFS_EP_5_ISR_EXIT_CALLBACK) */
 426:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 427:.\Generated_Source\PSoC4/USBFS_episr.c ****     #if (CY_PSOC3 && defined(USBFS_ENABLE_MIDI_STREAMING) && \
 428:.\Generated_Source\PSoC4/USBFS_episr.c ****         !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 429:.\Generated_Source\PSoC4/USBFS_episr.c ****         
 430:.\Generated_Source\PSoC4/USBFS_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 431:.\Generated_Source\PSoC4/USBFS_episr.c ****         }
 432:.\Generated_Source\PSoC4/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
 433:.\Generated_Source\PSoC4/USBFS_episr.c ****     }
 434:.\Generated_Source\PSoC4/USBFS_episr.c **** #endif /* (USBFS_EP5_ISR_ACTIVE) */
 435:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 436:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 437:.\Generated_Source\PSoC4/USBFS_episr.c **** #if (USBFS_EP6_ISR_ACTIVE)
 438:.\Generated_Source\PSoC4/USBFS_episr.c ****     /*******************************************************************************
 439:.\Generated_Source\PSoC4/USBFS_episr.c ****     * Function Name: USBFS_EP_6_ISR
 440:.\Generated_Source\PSoC4/USBFS_episr.c ****     ****************************************************************************//**
 441:.\Generated_Source\PSoC4/USBFS_episr.c ****     *
 442:.\Generated_Source\PSoC4/USBFS_episr.c ****     *  Endpoint 6 Interrupt Service Routine.
 443:.\Generated_Source\PSoC4/USBFS_episr.c ****     *
 444:.\Generated_Source\PSoC4/USBFS_episr.c ****     *
 445:.\Generated_Source\PSoC4/USBFS_episr.c ****     *******************************************************************************/
 446:.\Generated_Source\PSoC4/USBFS_episr.c ****     CY_ISR(USBFS_EP_6_ISR)
 447:.\Generated_Source\PSoC4/USBFS_episr.c ****     {
 448:.\Generated_Source\PSoC4/USBFS_episr.c ****     #ifdef USBFS_EP_6_ISR_ENTRY_CALLBACK
 449:.\Generated_Source\PSoC4/USBFS_episr.c ****         USBFS_EP_6_ISR_EntryCallback();
 450:.\Generated_Source\PSoC4/USBFS_episr.c ****     #endif /* (USBFS_EP_6_ISR_ENTRY_CALLBACK) */
ARM GAS  C:\Users\LAIR\AppData\Local\Temp\ccb9lIqg.s 			page 11


 451:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 452:.\Generated_Source\PSoC4/USBFS_episr.c ****         /* `#START EP6_USER_CODE` Place your code here */
 453:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 454:.\Generated_Source\PSoC4/USBFS_episr.c ****         /* `#END` */
 455:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 456:.\Generated_Source\PSoC4/USBFS_episr.c ****     #if (CY_PSOC3 && defined(USBFS_ENABLE_MIDI_STREAMING) && \
 457:.\Generated_Source\PSoC4/USBFS_episr.c ****         !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 458:.\Generated_Source\PSoC4/USBFS_episr.c ****         {
 459:.\Generated_Source\PSoC4/USBFS_episr.c ****             uint8 intEn = EA;
 460:.\Generated_Source\PSoC4/USBFS_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 461:.\Generated_Source\PSoC4/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
 462:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 463:.\Generated_Source\PSoC4/USBFS_episr.c ****         USBFS_ClearSieEpInterruptSource(USBFS_SIE_INT_EP6_INTR);
 464:.\Generated_Source\PSoC4/USBFS_episr.c ****         
 465:.\Generated_Source\PSoC4/USBFS_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 466:.\Generated_Source\PSoC4/USBFS_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 467:.\Generated_Source\PSoC4/USBFS_episr.c ****         * OUT endpoint: data is ready to read from endpoint buffer. 
 468:.\Generated_Source\PSoC4/USBFS_episr.c ****         */
 469:.\Generated_Source\PSoC4/USBFS_episr.c ****     #if (CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)
 470:.\Generated_Source\PSoC4/USBFS_episr.c ****         if (0u != (USBFS_EP[USBFS_EP6].addr & USBFS_DIR_IN))
 471:.\Generated_Source\PSoC4/USBFS_episr.c ****     #endif /* (USBFS_EP_MANAGEMENT_DMA_AUTO) */
 472:.\Generated_Source\PSoC4/USBFS_episr.c ****         {
 473:.\Generated_Source\PSoC4/USBFS_episr.c ****             /* Read CR0 register to clear SIE lock. */
 474:.\Generated_Source\PSoC4/USBFS_episr.c ****             (void) USBFS_SIE_EP_BASE.sieEp[USBFS_EP6].epCr0;
 475:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 476:.\Generated_Source\PSoC4/USBFS_episr.c ****             /* Toggle all endpoint types except ISOC. */
 477:.\Generated_Source\PSoC4/USBFS_episr.c ****             if (USBFS_GET_EP_TYPE(USBFS_EP6) != USBFS_EP_TYPE_ISOC)
 478:.\Generated_Source\PSoC4/USBFS_episr.c ****             {
 479:.\Generated_Source\PSoC4/USBFS_episr.c ****                 USBFS_EP[USBFS_EP6].epToggle ^= USBFS_EPX_CNT_DATA_TOGGLE;
 480:.\Generated_Source\PSoC4/USBFS_episr.c ****             }
 481:.\Generated_Source\PSoC4/USBFS_episr.c ****             
 482:.\Generated_Source\PSoC4/USBFS_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 483:.\Generated_Source\PSoC4/USBFS_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 484:.\Generated_Source\PSoC4/USBFS_episr.c ****             * Because last chunk of data is being copied.
 485:.\Generated_Source\PSoC4/USBFS_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 486:.\Generated_Source\PSoC4/USBFS_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 487:.\Generated_Source\PSoC4/USBFS_episr.c ****             */
 488:.\Generated_Source\PSoC4/USBFS_episr.c ****             USBFS_EP[USBFS_EP6].apiEpState = USBFS_EVENT_PENDING;
 489:.\Generated_Source\PSoC4/USBFS_episr.c ****         }
 490:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 491:.\Generated_Source\PSoC4/USBFS_episr.c ****     #if (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO))
 492:.\Generated_Source\PSoC4/USBFS_episr.c ****         #if (defined(USBFS_ENABLE_MIDI_STREAMING) && \
 493:.\Generated_Source\PSoC4/USBFS_episr.c ****             !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 494:.\Generated_Source\PSoC4/USBFS_episr.c ****             if (USBFS_midi_out_ep == USBFS_EP6)
 495:.\Generated_Source\PSoC4/USBFS_episr.c ****             {
 496:.\Generated_Source\PSoC4/USBFS_episr.c ****                 USBFS_MIDI_OUT_Service();
 497:.\Generated_Source\PSoC4/USBFS_episr.c ****             }
 498:.\Generated_Source\PSoC4/USBFS_episr.c ****         #endif /* (USBFS_ISR_SERVICE_MIDI_OUT) */
 499:.\Generated_Source\PSoC4/USBFS_episr.c ****     #endif /* (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)) */
 500:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 501:.\Generated_Source\PSoC4/USBFS_episr.c ****         /* `#START EP6_END_USER_CODE` Place your code here */
 502:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 503:.\Generated_Source\PSoC4/USBFS_episr.c ****         /* `#END` */
 504:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 505:.\Generated_Source\PSoC4/USBFS_episr.c ****     #ifdef USBFS_EP_6_ISR_EXIT_CALLBACK
 506:.\Generated_Source\PSoC4/USBFS_episr.c ****         USBFS_EP_6_ISR_ExitCallback();
 507:.\Generated_Source\PSoC4/USBFS_episr.c ****     #endif /* (USBFS_EP_6_ISR_EXIT_CALLBACK) */
ARM GAS  C:\Users\LAIR\AppData\Local\Temp\ccb9lIqg.s 			page 12


 508:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 509:.\Generated_Source\PSoC4/USBFS_episr.c ****     #if (CY_PSOC3 && defined(USBFS_ENABLE_MIDI_STREAMING) && \
 510:.\Generated_Source\PSoC4/USBFS_episr.c ****         !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 511:.\Generated_Source\PSoC4/USBFS_episr.c ****         
 512:.\Generated_Source\PSoC4/USBFS_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 513:.\Generated_Source\PSoC4/USBFS_episr.c ****         }
 514:.\Generated_Source\PSoC4/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
 515:.\Generated_Source\PSoC4/USBFS_episr.c ****     }
 516:.\Generated_Source\PSoC4/USBFS_episr.c **** #endif /* (USBFS_EP6_ISR_ACTIVE) */
 517:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 518:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 519:.\Generated_Source\PSoC4/USBFS_episr.c **** #if (USBFS_EP7_ISR_ACTIVE)
 520:.\Generated_Source\PSoC4/USBFS_episr.c ****     /*******************************************************************************
 521:.\Generated_Source\PSoC4/USBFS_episr.c ****     * Function Name: USBFS_EP_7_ISR
 522:.\Generated_Source\PSoC4/USBFS_episr.c ****     ****************************************************************************//**
 523:.\Generated_Source\PSoC4/USBFS_episr.c ****     *
 524:.\Generated_Source\PSoC4/USBFS_episr.c ****     *  Endpoint 7 Interrupt Service Routine.
 525:.\Generated_Source\PSoC4/USBFS_episr.c ****     *
 526:.\Generated_Source\PSoC4/USBFS_episr.c ****     *
 527:.\Generated_Source\PSoC4/USBFS_episr.c ****     *******************************************************************************/
 528:.\Generated_Source\PSoC4/USBFS_episr.c ****     CY_ISR(USBFS_EP_7_ISR)
 529:.\Generated_Source\PSoC4/USBFS_episr.c ****     {
 530:.\Generated_Source\PSoC4/USBFS_episr.c ****     #ifdef USBFS_EP_7_ISR_ENTRY_CALLBACK
 531:.\Generated_Source\PSoC4/USBFS_episr.c ****         USBFS_EP_7_ISR_EntryCallback();
 532:.\Generated_Source\PSoC4/USBFS_episr.c ****     #endif /* (USBFS_EP_7_ISR_ENTRY_CALLBACK) */
 533:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 534:.\Generated_Source\PSoC4/USBFS_episr.c ****         /* `#START EP7_USER_CODE` Place your code here */
 535:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 536:.\Generated_Source\PSoC4/USBFS_episr.c ****         /* `#END` */
 537:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 538:.\Generated_Source\PSoC4/USBFS_episr.c ****     #if (CY_PSOC3 && defined(USBFS_ENABLE_MIDI_STREAMING) && \
 539:.\Generated_Source\PSoC4/USBFS_episr.c ****         !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 540:.\Generated_Source\PSoC4/USBFS_episr.c ****         {
 541:.\Generated_Source\PSoC4/USBFS_episr.c ****             uint8 intEn = EA;
 542:.\Generated_Source\PSoC4/USBFS_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 543:.\Generated_Source\PSoC4/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
 544:.\Generated_Source\PSoC4/USBFS_episr.c ****     
 545:.\Generated_Source\PSoC4/USBFS_episr.c ****         USBFS_ClearSieEpInterruptSource(USBFS_SIE_INT_EP7_INTR);
 546:.\Generated_Source\PSoC4/USBFS_episr.c ****         
 547:.\Generated_Source\PSoC4/USBFS_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 548:.\Generated_Source\PSoC4/USBFS_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 549:.\Generated_Source\PSoC4/USBFS_episr.c ****         * OUT endpoint: data is ready to read from endpoint buffer. 
 550:.\Generated_Source\PSoC4/USBFS_episr.c ****         */
 551:.\Generated_Source\PSoC4/USBFS_episr.c ****     #if (CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)
 552:.\Generated_Source\PSoC4/USBFS_episr.c ****         if (0u != (USBFS_EP[USBFS_EP7].addr & USBFS_DIR_IN))
 553:.\Generated_Source\PSoC4/USBFS_episr.c ****     #endif /* (USBFS_EP_MANAGEMENT_DMA_AUTO) */
 554:.\Generated_Source\PSoC4/USBFS_episr.c ****         {           
 555:.\Generated_Source\PSoC4/USBFS_episr.c ****             /* Read CR0 register to clear SIE lock. */
 556:.\Generated_Source\PSoC4/USBFS_episr.c ****             (void) USBFS_SIE_EP_BASE.sieEp[USBFS_EP7].epCr0;
 557:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 558:.\Generated_Source\PSoC4/USBFS_episr.c ****             /* Toggle all endpoint types except ISOC. */
 559:.\Generated_Source\PSoC4/USBFS_episr.c ****             if (USBFS_GET_EP_TYPE(USBFS_EP7) != USBFS_EP_TYPE_ISOC)
 560:.\Generated_Source\PSoC4/USBFS_episr.c ****             {
 561:.\Generated_Source\PSoC4/USBFS_episr.c ****                 USBFS_EP[USBFS_EP7].epToggle ^= USBFS_EPX_CNT_DATA_TOGGLE;
 562:.\Generated_Source\PSoC4/USBFS_episr.c ****             }
 563:.\Generated_Source\PSoC4/USBFS_episr.c ****             
 564:.\Generated_Source\PSoC4/USBFS_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
ARM GAS  C:\Users\LAIR\AppData\Local\Temp\ccb9lIqg.s 			page 13


 565:.\Generated_Source\PSoC4/USBFS_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 566:.\Generated_Source\PSoC4/USBFS_episr.c ****             * Because last chunk of data is being copied.
 567:.\Generated_Source\PSoC4/USBFS_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 568:.\Generated_Source\PSoC4/USBFS_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 569:.\Generated_Source\PSoC4/USBFS_episr.c ****             */
 570:.\Generated_Source\PSoC4/USBFS_episr.c ****             USBFS_EP[USBFS_EP7].apiEpState = USBFS_EVENT_PENDING;
 571:.\Generated_Source\PSoC4/USBFS_episr.c ****         }
 572:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 573:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 574:.\Generated_Source\PSoC4/USBFS_episr.c ****     #if (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO))
 575:.\Generated_Source\PSoC4/USBFS_episr.c ****         #if (defined(USBFS_ENABLE_MIDI_STREAMING) && \
 576:.\Generated_Source\PSoC4/USBFS_episr.c ****             !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 577:.\Generated_Source\PSoC4/USBFS_episr.c ****             if(USBFS_midi_out_ep == USBFS_EP7)
 578:.\Generated_Source\PSoC4/USBFS_episr.c ****             {
 579:.\Generated_Source\PSoC4/USBFS_episr.c ****                 USBFS_MIDI_OUT_Service();
 580:.\Generated_Source\PSoC4/USBFS_episr.c ****             }
 581:.\Generated_Source\PSoC4/USBFS_episr.c ****         #endif /* (USBFS_ISR_SERVICE_MIDI_OUT) */
 582:.\Generated_Source\PSoC4/USBFS_episr.c ****     #endif /* (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)) */
 583:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 584:.\Generated_Source\PSoC4/USBFS_episr.c ****         /* `#START EP7_END_USER_CODE` Place your code here */
 585:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 586:.\Generated_Source\PSoC4/USBFS_episr.c ****         /* `#END` */
 587:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 588:.\Generated_Source\PSoC4/USBFS_episr.c ****     #ifdef USBFS_EP_7_ISR_EXIT_CALLBACK
 589:.\Generated_Source\PSoC4/USBFS_episr.c ****         USBFS_EP_7_ISR_ExitCallback();
 590:.\Generated_Source\PSoC4/USBFS_episr.c ****     #endif /* (USBFS_EP_7_ISR_EXIT_CALLBACK) */
 591:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 592:.\Generated_Source\PSoC4/USBFS_episr.c ****     #if (CY_PSOC3 && defined(USBFS_ENABLE_MIDI_STREAMING) && \
 593:.\Generated_Source\PSoC4/USBFS_episr.c ****         !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 594:.\Generated_Source\PSoC4/USBFS_episr.c ****         
 595:.\Generated_Source\PSoC4/USBFS_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 596:.\Generated_Source\PSoC4/USBFS_episr.c ****         }
 597:.\Generated_Source\PSoC4/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
 598:.\Generated_Source\PSoC4/USBFS_episr.c ****     }
 599:.\Generated_Source\PSoC4/USBFS_episr.c **** #endif /* (USBFS_EP7_ISR_ACTIVE) */
 600:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 601:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 602:.\Generated_Source\PSoC4/USBFS_episr.c **** #if (USBFS_EP8_ISR_ACTIVE)
 603:.\Generated_Source\PSoC4/USBFS_episr.c ****     /*******************************************************************************
 604:.\Generated_Source\PSoC4/USBFS_episr.c ****     * Function Name: USBFS_EP_8_ISR
 605:.\Generated_Source\PSoC4/USBFS_episr.c ****     ****************************************************************************//**
 606:.\Generated_Source\PSoC4/USBFS_episr.c ****     *
 607:.\Generated_Source\PSoC4/USBFS_episr.c ****     *  Endpoint 8 Interrupt Service Routine
 608:.\Generated_Source\PSoC4/USBFS_episr.c ****     *
 609:.\Generated_Source\PSoC4/USBFS_episr.c ****     *
 610:.\Generated_Source\PSoC4/USBFS_episr.c ****     *******************************************************************************/
 611:.\Generated_Source\PSoC4/USBFS_episr.c ****     CY_ISR(USBFS_EP_8_ISR)
 612:.\Generated_Source\PSoC4/USBFS_episr.c ****     {
 613:.\Generated_Source\PSoC4/USBFS_episr.c ****     #ifdef USBFS_EP_8_ISR_ENTRY_CALLBACK
 614:.\Generated_Source\PSoC4/USBFS_episr.c ****         USBFS_EP_8_ISR_EntryCallback();
 615:.\Generated_Source\PSoC4/USBFS_episr.c ****     #endif /* (USBFS_EP_8_ISR_ENTRY_CALLBACK) */
 616:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 617:.\Generated_Source\PSoC4/USBFS_episr.c ****         /* `#START EP8_USER_CODE` Place your code here */
 618:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 619:.\Generated_Source\PSoC4/USBFS_episr.c ****         /* `#END` */
 620:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 621:.\Generated_Source\PSoC4/USBFS_episr.c ****     #if (CY_PSOC3 && defined(USBFS_ENABLE_MIDI_STREAMING) && \
ARM GAS  C:\Users\LAIR\AppData\Local\Temp\ccb9lIqg.s 			page 14


 622:.\Generated_Source\PSoC4/USBFS_episr.c ****         !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 623:.\Generated_Source\PSoC4/USBFS_episr.c ****         {
 624:.\Generated_Source\PSoC4/USBFS_episr.c ****             uint8 intEn = EA;
 625:.\Generated_Source\PSoC4/USBFS_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 626:.\Generated_Source\PSoC4/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
 627:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 628:.\Generated_Source\PSoC4/USBFS_episr.c ****         USBFS_ClearSieEpInterruptSource(USBFS_SIE_INT_EP8_INTR);
 629:.\Generated_Source\PSoC4/USBFS_episr.c ****         
 630:.\Generated_Source\PSoC4/USBFS_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 631:.\Generated_Source\PSoC4/USBFS_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 632:.\Generated_Source\PSoC4/USBFS_episr.c ****         * OUT endpoint: data is ready to read from endpoint buffer. 
 633:.\Generated_Source\PSoC4/USBFS_episr.c ****         */
 634:.\Generated_Source\PSoC4/USBFS_episr.c ****     #if (CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)
 635:.\Generated_Source\PSoC4/USBFS_episr.c ****         if (0u != (USBFS_EP[USBFS_EP8].addr & USBFS_DIR_IN))
 636:.\Generated_Source\PSoC4/USBFS_episr.c ****     #endif /* (USBFS_EP_MANAGEMENT_DMA_AUTO) */
 637:.\Generated_Source\PSoC4/USBFS_episr.c ****         {
 638:.\Generated_Source\PSoC4/USBFS_episr.c ****             /* Read CR0 register to clear SIE lock. */
 639:.\Generated_Source\PSoC4/USBFS_episr.c ****             (void) USBFS_SIE_EP_BASE.sieEp[USBFS_EP8].epCr0;
 640:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 641:.\Generated_Source\PSoC4/USBFS_episr.c ****             /* Toggle all endpoint types except ISOC. */
 642:.\Generated_Source\PSoC4/USBFS_episr.c ****             if (USBFS_GET_EP_TYPE(USBFS_EP8) != USBFS_EP_TYPE_ISOC)
 643:.\Generated_Source\PSoC4/USBFS_episr.c ****             {
 644:.\Generated_Source\PSoC4/USBFS_episr.c ****                 USBFS_EP[USBFS_EP8].epToggle ^= USBFS_EPX_CNT_DATA_TOGGLE;
 645:.\Generated_Source\PSoC4/USBFS_episr.c ****             }
 646:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 647:.\Generated_Source\PSoC4/USBFS_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 648:.\Generated_Source\PSoC4/USBFS_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 649:.\Generated_Source\PSoC4/USBFS_episr.c ****             * Because last chunk of data is being copied.
 650:.\Generated_Source\PSoC4/USBFS_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 651:.\Generated_Source\PSoC4/USBFS_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 652:.\Generated_Source\PSoC4/USBFS_episr.c ****             */
 653:.\Generated_Source\PSoC4/USBFS_episr.c ****             USBFS_EP[USBFS_EP8].apiEpState = USBFS_EVENT_PENDING;
 654:.\Generated_Source\PSoC4/USBFS_episr.c ****         }
 655:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 656:.\Generated_Source\PSoC4/USBFS_episr.c ****     #if (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO))
 657:.\Generated_Source\PSoC4/USBFS_episr.c ****         #if (defined(USBFS_ENABLE_MIDI_STREAMING) && \
 658:.\Generated_Source\PSoC4/USBFS_episr.c ****             !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 659:.\Generated_Source\PSoC4/USBFS_episr.c ****             if (USBFS_midi_out_ep == USBFS_EP8)
 660:.\Generated_Source\PSoC4/USBFS_episr.c ****             {
 661:.\Generated_Source\PSoC4/USBFS_episr.c ****                 USBFS_MIDI_OUT_Service();
 662:.\Generated_Source\PSoC4/USBFS_episr.c ****             }
 663:.\Generated_Source\PSoC4/USBFS_episr.c ****         #endif /* (USBFS_ISR_SERVICE_MIDI_OUT) */
 664:.\Generated_Source\PSoC4/USBFS_episr.c ****     #endif /* (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)) */
 665:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 666:.\Generated_Source\PSoC4/USBFS_episr.c ****         /* `#START EP8_END_USER_CODE` Place your code here */
 667:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 668:.\Generated_Source\PSoC4/USBFS_episr.c ****         /* `#END` */
 669:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 670:.\Generated_Source\PSoC4/USBFS_episr.c ****     #ifdef USBFS_EP_8_ISR_EXIT_CALLBACK
 671:.\Generated_Source\PSoC4/USBFS_episr.c ****         USBFS_EP_8_ISR_ExitCallback();
 672:.\Generated_Source\PSoC4/USBFS_episr.c ****     #endif /* (USBFS_EP_8_ISR_EXIT_CALLBACK) */
 673:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 674:.\Generated_Source\PSoC4/USBFS_episr.c ****     #if (CY_PSOC3 && defined(USBFS_ENABLE_MIDI_STREAMING) && \
 675:.\Generated_Source\PSoC4/USBFS_episr.c ****         !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 676:.\Generated_Source\PSoC4/USBFS_episr.c ****         
 677:.\Generated_Source\PSoC4/USBFS_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 678:.\Generated_Source\PSoC4/USBFS_episr.c ****         }
ARM GAS  C:\Users\LAIR\AppData\Local\Temp\ccb9lIqg.s 			page 15


 679:.\Generated_Source\PSoC4/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
 680:.\Generated_Source\PSoC4/USBFS_episr.c ****     }
 681:.\Generated_Source\PSoC4/USBFS_episr.c **** #endif /* (USBFS_EP8_ISR_ACTIVE) */
 682:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 683:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 684:.\Generated_Source\PSoC4/USBFS_episr.c **** #if (USBFS_SOF_ISR_ACTIVE)
 685:.\Generated_Source\PSoC4/USBFS_episr.c ****     /*******************************************************************************
 686:.\Generated_Source\PSoC4/USBFS_episr.c ****     * Function Name: USBFS_SOF_ISR
 687:.\Generated_Source\PSoC4/USBFS_episr.c ****     ****************************************************************************//**
 688:.\Generated_Source\PSoC4/USBFS_episr.c ****     *
 689:.\Generated_Source\PSoC4/USBFS_episr.c ****     *  Start of Frame Interrupt Service Routine.
 690:.\Generated_Source\PSoC4/USBFS_episr.c ****     *
 691:.\Generated_Source\PSoC4/USBFS_episr.c ****     *
 692:.\Generated_Source\PSoC4/USBFS_episr.c ****     *******************************************************************************/
 693:.\Generated_Source\PSoC4/USBFS_episr.c ****     CY_ISR(USBFS_SOF_ISR)
 694:.\Generated_Source\PSoC4/USBFS_episr.c ****     {
 695:.\Generated_Source\PSoC4/USBFS_episr.c ****     #ifdef USBFS_SOF_ISR_ENTRY_CALLBACK
 696:.\Generated_Source\PSoC4/USBFS_episr.c ****         USBFS_SOF_ISR_EntryCallback();
 697:.\Generated_Source\PSoC4/USBFS_episr.c ****     #endif /* (USBFS_SOF_ISR_ENTRY_CALLBACK) */
 698:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 699:.\Generated_Source\PSoC4/USBFS_episr.c ****         /* `#START SOF_USER_CODE` Place your code here */
 700:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 701:.\Generated_Source\PSoC4/USBFS_episr.c ****         /* `#END` */
 702:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 703:.\Generated_Source\PSoC4/USBFS_episr.c ****         USBFS_ClearSieInterruptSource(USBFS_INTR_SIE_SOF_INTR);
 704:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 705:.\Generated_Source\PSoC4/USBFS_episr.c ****     #ifdef USBFS_SOF_ISR_EXIT_CALLBACK
 706:.\Generated_Source\PSoC4/USBFS_episr.c ****         USBFS_SOF_ISR_ExitCallback();
 707:.\Generated_Source\PSoC4/USBFS_episr.c ****     #endif /* (USBFS_SOF_ISR_EXIT_CALLBACK) */
 708:.\Generated_Source\PSoC4/USBFS_episr.c ****     }
 709:.\Generated_Source\PSoC4/USBFS_episr.c **** #endif /* (USBFS_SOF_ISR_ACTIVE) */
 710:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 711:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 712:.\Generated_Source\PSoC4/USBFS_episr.c **** #if (USBFS_BUS_RESET_ISR_ACTIVE)
 713:.\Generated_Source\PSoC4/USBFS_episr.c **** /*******************************************************************************
 714:.\Generated_Source\PSoC4/USBFS_episr.c **** * Function Name: USBFS_BUS_RESET_ISR
 715:.\Generated_Source\PSoC4/USBFS_episr.c **** ****************************************************************************//**
 716:.\Generated_Source\PSoC4/USBFS_episr.c **** *
 717:.\Generated_Source\PSoC4/USBFS_episr.c **** *  USB Bus Reset Interrupt Service Routine.  Calls _Start with the same
 718:.\Generated_Source\PSoC4/USBFS_episr.c **** *  parameters as the last USER call to _Start
 719:.\Generated_Source\PSoC4/USBFS_episr.c **** *
 720:.\Generated_Source\PSoC4/USBFS_episr.c **** *
 721:.\Generated_Source\PSoC4/USBFS_episr.c **** *******************************************************************************/
 722:.\Generated_Source\PSoC4/USBFS_episr.c **** CY_ISR(USBFS_BUS_RESET_ISR)
 723:.\Generated_Source\PSoC4/USBFS_episr.c **** {
 724:.\Generated_Source\PSoC4/USBFS_episr.c **** #ifdef USBFS_BUS_RESET_ISR_ENTRY_CALLBACK
 725:.\Generated_Source\PSoC4/USBFS_episr.c ****     USBFS_BUS_RESET_ISR_EntryCallback();
 726:.\Generated_Source\PSoC4/USBFS_episr.c **** #endif /* (USBFS_BUS_RESET_ISR_ENTRY_CALLBACK) */
 727:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 728:.\Generated_Source\PSoC4/USBFS_episr.c ****     /* `#START BUS_RESET_USER_CODE` Place your code here */
 729:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 730:.\Generated_Source\PSoC4/USBFS_episr.c ****     /* `#END` */
 731:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 732:.\Generated_Source\PSoC4/USBFS_episr.c ****     USBFS_ClearSieInterruptSource(USBFS_INTR_SIE_BUS_RESET_INTR);
 733:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 734:.\Generated_Source\PSoC4/USBFS_episr.c ****     USBFS_ReInitComponent();
 735:.\Generated_Source\PSoC4/USBFS_episr.c **** 
ARM GAS  C:\Users\LAIR\AppData\Local\Temp\ccb9lIqg.s 			page 16


 736:.\Generated_Source\PSoC4/USBFS_episr.c **** #ifdef USBFS_BUS_RESET_ISR_EXIT_CALLBACK
 737:.\Generated_Source\PSoC4/USBFS_episr.c ****     USBFS_BUS_RESET_ISR_ExitCallback();
 738:.\Generated_Source\PSoC4/USBFS_episr.c **** #endif /* (USBFS_BUS_RESET_ISR_EXIT_CALLBACK) */
 739:.\Generated_Source\PSoC4/USBFS_episr.c **** }
 740:.\Generated_Source\PSoC4/USBFS_episr.c **** #endif /* (USBFS_BUS_RESET_ISR_ACTIVE) */
 741:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 742:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 743:.\Generated_Source\PSoC4/USBFS_episr.c **** #if (USBFS_LPM_ACTIVE)
 744:.\Generated_Source\PSoC4/USBFS_episr.c **** /***************************************************************************
 745:.\Generated_Source\PSoC4/USBFS_episr.c **** * Function Name: USBFS_INTR_LPM_ISR
 746:.\Generated_Source\PSoC4/USBFS_episr.c **** ************************************************************************//**
 747:.\Generated_Source\PSoC4/USBFS_episr.c **** *
 748:.\Generated_Source\PSoC4/USBFS_episr.c **** *   Interrupt Service Routine for LPM of the interrupt sources.
 749:.\Generated_Source\PSoC4/USBFS_episr.c **** *
 750:.\Generated_Source\PSoC4/USBFS_episr.c **** *
 751:.\Generated_Source\PSoC4/USBFS_episr.c **** ***************************************************************************/
 752:.\Generated_Source\PSoC4/USBFS_episr.c **** CY_ISR(USBFS_LPM_ISR)
 753:.\Generated_Source\PSoC4/USBFS_episr.c **** {
 754:.\Generated_Source\PSoC4/USBFS_episr.c **** #ifdef USBFS_LPM_ISR_ENTRY_CALLBACK
 755:.\Generated_Source\PSoC4/USBFS_episr.c ****     USBFS_LPM_ISR_EntryCallback();
 756:.\Generated_Source\PSoC4/USBFS_episr.c **** #endif /* (USBFS_LPM_ISR_ENTRY_CALLBACK) */
 757:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 758:.\Generated_Source\PSoC4/USBFS_episr.c ****     /* `#START LPM_BEGIN_USER_CODE` Place your code here */
 759:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 760:.\Generated_Source\PSoC4/USBFS_episr.c ****     /* `#END` */
 761:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 762:.\Generated_Source\PSoC4/USBFS_episr.c ****     USBFS_ClearSieInterruptSource(USBFS_INTR_SIE_LPM_INTR);
 763:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 764:.\Generated_Source\PSoC4/USBFS_episr.c ****     /* `#START LPM_END_USER_CODE` Place your code here */
 765:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 766:.\Generated_Source\PSoC4/USBFS_episr.c ****     /* `#END` */
 767:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 768:.\Generated_Source\PSoC4/USBFS_episr.c **** #ifdef USBFS_LPM_ISR_EXIT_CALLBACK
 769:.\Generated_Source\PSoC4/USBFS_episr.c ****     USBFS_LPM_ISR_ExitCallback();
 770:.\Generated_Source\PSoC4/USBFS_episr.c **** #endif /* (USBFS_LPM_ISR_EXIT_CALLBACK) */
 771:.\Generated_Source\PSoC4/USBFS_episr.c **** }
 772:.\Generated_Source\PSoC4/USBFS_episr.c **** #endif /* (USBFS_LPM_ACTIVE) */
 773:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 774:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 775:.\Generated_Source\PSoC4/USBFS_episr.c **** #if (USBFS_EP_MANAGEMENT_DMA && USBFS_ARB_ISR_ACTIVE)
 776:.\Generated_Source\PSoC4/USBFS_episr.c ****     /***************************************************************************
 777:.\Generated_Source\PSoC4/USBFS_episr.c ****     * Function Name: USBFS_ARB_ISR
 778:.\Generated_Source\PSoC4/USBFS_episr.c ****     ************************************************************************//**
 779:.\Generated_Source\PSoC4/USBFS_episr.c ****     *
 780:.\Generated_Source\PSoC4/USBFS_episr.c ****     *  Arbiter Interrupt Service Routine.
 781:.\Generated_Source\PSoC4/USBFS_episr.c ****     *
 782:.\Generated_Source\PSoC4/USBFS_episr.c ****     *
 783:.\Generated_Source\PSoC4/USBFS_episr.c ****     ***************************************************************************/
 784:.\Generated_Source\PSoC4/USBFS_episr.c ****     CY_ISR(USBFS_ARB_ISR)
 785:.\Generated_Source\PSoC4/USBFS_episr.c ****     {
 121              		.loc 1 785 0
 122              		.cfi_startproc
 123 0000 70B5     		push	{r4, r5, r6, lr}
 124              		.cfi_def_cfa_offset 16
 125              		.cfi_offset 4, -16
 126              		.cfi_offset 5, -12
 127              		.cfi_offset 6, -8
ARM GAS  C:\Users\LAIR\AppData\Local\Temp\ccb9lIqg.s 			page 17


 128              		.cfi_offset 14, -4
 129              	.LVL0:
 786:.\Generated_Source\PSoC4/USBFS_episr.c ****         uint32 arbIntrStatus;
 787:.\Generated_Source\PSoC4/USBFS_episr.c ****         uint32 epStatus;
 788:.\Generated_Source\PSoC4/USBFS_episr.c ****         uint32 ep = USBFS_EP1;
 789:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 790:.\Generated_Source\PSoC4/USBFS_episr.c ****     #ifdef USBFS_ARB_ISR_ENTRY_CALLBACK
 791:.\Generated_Source\PSoC4/USBFS_episr.c ****         USBFS_ARB_ISR_EntryCallback();
 792:.\Generated_Source\PSoC4/USBFS_episr.c ****     #endif /* (USBFS_ARB_ISR_ENTRY_CALLBACK) */
 793:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 794:.\Generated_Source\PSoC4/USBFS_episr.c ****         /* `#START ARB_BEGIN_USER_CODE` Place your code here */
 795:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 796:.\Generated_Source\PSoC4/USBFS_episr.c ****         /* `#END` */
 797:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 798:.\Generated_Source\PSoC4/USBFS_episr.c ****         /* Get pending ARB interrupt sources. */
 799:.\Generated_Source\PSoC4/USBFS_episr.c ****         arbIntrStatus = USBFS_ARB_INT_SR_REG;
 130              		.loc 1 799 0
 131 0002 224B     		ldr	r3, .L15
 132 0004 1A68     		ldr	r2, [r3]
 133              	.LVL1:
 788:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 134              		.loc 1 788 0
 135 0006 0123     		mov	r3, #1
 800:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 801:.\Generated_Source\PSoC4/USBFS_episr.c ****         while (0u != arbIntrStatus)
 136              		.loc 1 801 0
 137 0008 3CE0     		b	.L10
 138              	.LVL2:
 139              	.L14:
 802:.\Generated_Source\PSoC4/USBFS_episr.c ****         {
 803:.\Generated_Source\PSoC4/USBFS_episr.c ****             /* Check which EP is interrupt source. */
 804:.\Generated_Source\PSoC4/USBFS_episr.c ****             if (0u != (arbIntrStatus & 0x01u))
 140              		.loc 1 804 0
 141 000a D107     		lsl	r1, r2, #31
 142 000c 38D5     		bpl	.L11
 805:.\Generated_Source\PSoC4/USBFS_episr.c ****             {
 806:.\Generated_Source\PSoC4/USBFS_episr.c ****                 /* Get endpoint enable interrupt sources. */
 807:.\Generated_Source\PSoC4/USBFS_episr.c ****                 epStatus = (USBFS_ARB_EP_BASE.arbEp[ep].epSr & USBFS_ARB_EP_BASE.arbEp[ep].epIntEn)
 143              		.loc 1 807 0
 144 000e 9801     		lsl	r0, r3, #6
 145 0010 1F49     		ldr	r1, .L15+4
 146 0012 8C46     		mov	ip, r1
 147 0014 6044     		add	r0, r0, ip
 148 0016 8168     		ldr	r1, [r0, #8]
 149 0018 4068     		ldr	r0, [r0, #4]
 150 001a 0140     		and	r1, r0
 151              	.LVL3:
 808:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 809:.\Generated_Source\PSoC4/USBFS_episr.c ****                 /* Handle IN endpoint buffer full event: happens only once when endpoint buffer is 
 810:.\Generated_Source\PSoC4/USBFS_episr.c ****                 if (0u != (epStatus & USBFS_ARB_EPX_INT_IN_BUF_FULL))
 152              		.loc 1 810 0
 153 001c C807     		lsl	r0, r1, #31
 154 001e 19D5     		bpl	.L12
 811:.\Generated_Source\PSoC4/USBFS_episr.c ****                 {
 812:.\Generated_Source\PSoC4/USBFS_episr.c ****                     if (0u != (USBFS_EP[ep].addr & USBFS_DIR_IN))
 155              		.loc 1 812 0
 156 0020 5800     		lsl	r0, r3, #1
ARM GAS  C:\Users\LAIR\AppData\Local\Temp\ccb9lIqg.s 			page 18


 157 0022 C018     		add	r0, r0, r3
 158 0024 8000     		lsl	r0, r0, #2
 159 0026 1B4C     		ldr	r4, .L15+8
 160 0028 2018     		add	r0, r4, r0
 161 002a 0079     		ldrb	r0, [r0, #4]
 162 002c 40B2     		sxtb	r0, r0
 163 002e 0028     		cmp	r0, #0
 164 0030 10DA     		bge	.L12
 813:.\Generated_Source\PSoC4/USBFS_episr.c ****                     {
 814:.\Generated_Source\PSoC4/USBFS_episr.c ****                         /* Clear data ready status. */
 815:.\Generated_Source\PSoC4/USBFS_episr.c ****                         USBFS_ARB_EP_BASE.arbEp[ep].epCfg &= (uint32) ~USBFS_ARB_EPX_CFG_IN_DATA_RD
 165              		.loc 1 815 0
 166 0032 6546     		mov	r5, ip
 167 0034 9C01     		lsl	r4, r3, #6
 168 0036 6059     		ldr	r0, [r4, r5]
 169 0038 0126     		mov	r6, #1
 170 003a B043     		bic	r0, r6
 171 003c 6051     		str	r0, [r4, r5]
 816:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 817:.\Generated_Source\PSoC4/USBFS_episr.c ****                     #if (CY_PSOC3 || CY_PSOC5LP)
 818:.\Generated_Source\PSoC4/USBFS_episr.c ****                         #if (USBFS_EP_MANAGEMENT_DMA_AUTO && (USBFS_EP_DMA_AUTO_OPT == 0u))
 819:.\Generated_Source\PSoC4/USBFS_episr.c ****                             /* Set up common area DMA with rest of data. */
 820:.\Generated_Source\PSoC4/USBFS_episr.c ****                             if(USBFS_inLength[ep] > USBFS_DMA_BYTES_PER_BURST)
 821:.\Generated_Source\PSoC4/USBFS_episr.c ****                             {
 822:.\Generated_Source\PSoC4/USBFS_episr.c ****                                 USBFS_LoadNextInEP(ep, 0u);
 823:.\Generated_Source\PSoC4/USBFS_episr.c ****                             }
 824:.\Generated_Source\PSoC4/USBFS_episr.c ****                             else
 825:.\Generated_Source\PSoC4/USBFS_episr.c ****                             {
 826:.\Generated_Source\PSoC4/USBFS_episr.c ****                                 USBFS_inBufFull[ep] = 1u;
 827:.\Generated_Source\PSoC4/USBFS_episr.c ****                             }
 828:.\Generated_Source\PSoC4/USBFS_episr.c ****                         #endif /* (USBFS_EP_MANAGEMENT_DMA_AUTO && (USBFS_EP_DMA_AUTO_OPT == 0u)) *
 829:.\Generated_Source\PSoC4/USBFS_episr.c ****                     #endif /* (CY_PSOC3 || CY_PSOC5LP) */
 830:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 831:.\Generated_Source\PSoC4/USBFS_episr.c ****                         /* Arm IN endpoint. */
 832:.\Generated_Source\PSoC4/USBFS_episr.c ****                         USBFS_SIE_EP_BASE.sieEp[ep].epCr0 = USBFS_EP[ep].epMode;
 172              		.loc 1 832 0
 173 003e 5800     		lsl	r0, r3, #1
 174 0040 C018     		add	r0, r0, r3
 175 0042 8000     		lsl	r0, r0, #2
 176 0044 134D     		ldr	r5, .L15+8
 177 0046 2818     		add	r0, r5, r0
 178 0048 4079     		ldrb	r0, [r0, #5]
 179 004a C0B2     		uxtb	r0, r0
 180 004c 124D     		ldr	r5, .L15+12
 181 004e AC46     		mov	ip, r5
 182 0050 6444     		add	r4, r4, ip
 183 0052 A060     		str	r0, [r4, #8]
 184              	.L12:
 833:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 834:.\Generated_Source\PSoC4/USBFS_episr.c ****                     #if (defined(USBFS_ENABLE_MIDI_STREAMING) && USBFS_ISR_SERVICE_MIDI_IN)
 835:.\Generated_Source\PSoC4/USBFS_episr.c ****                         if (ep == USBFS_midi_in_ep)
 836:.\Generated_Source\PSoC4/USBFS_episr.c ****                         {
 837:.\Generated_Source\PSoC4/USBFS_episr.c ****                             /* Clear MIDI input pointer. */
 838:.\Generated_Source\PSoC4/USBFS_episr.c ****                             USBFS_midiInPointer = 0u;
 839:.\Generated_Source\PSoC4/USBFS_episr.c ****                         }
 840:.\Generated_Source\PSoC4/USBFS_episr.c ****                     #endif /* (USBFS_ENABLE_MIDI_STREAMING) */
 841:.\Generated_Source\PSoC4/USBFS_episr.c ****                     }
ARM GAS  C:\Users\LAIR\AppData\Local\Temp\ccb9lIqg.s 			page 19


 842:.\Generated_Source\PSoC4/USBFS_episr.c ****                 }
 843:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 844:.\Generated_Source\PSoC4/USBFS_episr.c ****             #if (USBFS_EP_MANAGEMENT_DMA_MANUAL)
 845:.\Generated_Source\PSoC4/USBFS_episr.c ****                 /* Handle DMA completion event for OUT endpoints. */
 846:.\Generated_Source\PSoC4/USBFS_episr.c ****                 if (0u != (epStatus & USBFS_ARB_EPX_SR_DMA_GNT))
 185              		.loc 1 846 0
 186 0054 8807     		lsl	r0, r1, #30
 187 0056 0ED5     		bpl	.L13
 847:.\Generated_Source\PSoC4/USBFS_episr.c ****                 {
 848:.\Generated_Source\PSoC4/USBFS_episr.c ****                     if (0u == (USBFS_EP[ep].addr & USBFS_DIR_IN))
 188              		.loc 1 848 0
 189 0058 5800     		lsl	r0, r3, #1
 190 005a C018     		add	r0, r0, r3
 191 005c 8000     		lsl	r0, r0, #2
 192 005e 0D4C     		ldr	r4, .L15+8
 193 0060 2018     		add	r0, r4, r0
 194 0062 0079     		ldrb	r0, [r0, #4]
 195 0064 40B2     		sxtb	r0, r0
 196 0066 0028     		cmp	r0, #0
 197 0068 05DB     		blt	.L13
 849:.\Generated_Source\PSoC4/USBFS_episr.c ****                     {
 850:.\Generated_Source\PSoC4/USBFS_episr.c ****                         /* Notify user that data has been copied from endpoint buffer. */
 851:.\Generated_Source\PSoC4/USBFS_episr.c ****                         USBFS_EP[ep].apiEpState = USBFS_NO_EVENT_PENDING;
 198              		.loc 1 851 0
 199 006a 5800     		lsl	r0, r3, #1
 200 006c C018     		add	r0, r0, r3
 201 006e 8000     		lsl	r0, r0, #2
 202 0070 2018     		add	r0, r4, r0
 203 0072 0024     		mov	r4, #0
 204 0074 4470     		strb	r4, [r0, #1]
 205              	.L13:
 852:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 853:.\Generated_Source\PSoC4/USBFS_episr.c ****                         /* DMA done coping data: OUT endpoint has to be re-armed by user. */
 854:.\Generated_Source\PSoC4/USBFS_episr.c ****                     }
 855:.\Generated_Source\PSoC4/USBFS_episr.c ****                 }
 856:.\Generated_Source\PSoC4/USBFS_episr.c ****             #endif /* (USBFS_EP_MANAGEMENT_DMA_MANUAL) */
 857:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 858:.\Generated_Source\PSoC4/USBFS_episr.c ****             #if (CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)
 859:.\Generated_Source\PSoC4/USBFS_episr.c ****                 /* Handle DMA completion event for OUT endpoints. */
 860:.\Generated_Source\PSoC4/USBFS_episr.c ****                 if (0u != (epStatus & USBFS_ARB_EPX_INT_DMA_TERMIN))
 861:.\Generated_Source\PSoC4/USBFS_episr.c ****                 {
 862:.\Generated_Source\PSoC4/USBFS_episr.c ****                     uint32 channelNum = USBFS_DmaChan[ep];
 863:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 864:.\Generated_Source\PSoC4/USBFS_episr.c ****                     /* Restore burst counter for endpoint. */
 865:.\Generated_Source\PSoC4/USBFS_episr.c ****                     USBFS_DmaEpBurstCnt[ep] = USBFS_DmaEpBurstCntBackup[ep];
 866:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 867:.\Generated_Source\PSoC4/USBFS_episr.c ****                     /* Disable DMA channel to restore descriptor configuration. The on-going transf
 868:.\Generated_Source\PSoC4/USBFS_episr.c ****                     USBFS_CyDmaChDisable(channelNum);
 869:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 870:.\Generated_Source\PSoC4/USBFS_episr.c ****                     /* Generate DMA tr_out signal to notify USB IP that DMA is done. This signal is
 871:.\Generated_Source\PSoC4/USBFS_episr.c ****                     * when transfer was aborted (it occurs when host writes less bytes than buffer 
 872:.\Generated_Source\PSoC4/USBFS_episr.c ****                     */
 873:.\Generated_Source\PSoC4/USBFS_episr.c ****                     USBFS_CyDmaTriggerOut(USBFS_DmaBurstEndOut[ep]);
 874:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 875:.\Generated_Source\PSoC4/USBFS_episr.c ****                     /* Restore destination address for output endpoint. */
 876:.\Generated_Source\PSoC4/USBFS_episr.c ****                     USBFS_CyDmaSetDstAddress(channelNum, USBFS_DMA_DESCR0, (void*) ((uint32) USBFS_
 877:.\Generated_Source\PSoC4/USBFS_episr.c ****                     USBFS_CyDmaSetDstAddress(channelNum, USBFS_DMA_DESCR1, (void*) ((uint32) USBFS_
ARM GAS  C:\Users\LAIR\AppData\Local\Temp\ccb9lIqg.s 			page 20


 878:.\Generated_Source\PSoC4/USBFS_episr.c ****                                                                                                    
 879:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 880:.\Generated_Source\PSoC4/USBFS_episr.c ****                     /* Restore number of data elements to transfer which was adjusted for last burs
 881:.\Generated_Source\PSoC4/USBFS_episr.c ****                     if (0u != (USBFS_DmaEpLastBurstEl[ep] & USBFS_DMA_DESCR_REVERT))
 882:.\Generated_Source\PSoC4/USBFS_episr.c ****                     {
 883:.\Generated_Source\PSoC4/USBFS_episr.c ****                         USBFS_CyDmaSetNumDataElements(channelNum, (USBFS_DmaEpLastBurstEl[ep] >> US
 884:.\Generated_Source\PSoC4/USBFS_episr.c ****                                                                              USBFS_DMA_GET_MAX_ELEM
 885:.\Generated_Source\PSoC4/USBFS_episr.c ****                     }
 886:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 887:.\Generated_Source\PSoC4/USBFS_episr.c ****                     /* Validate descriptor 0 and 1 (also reset current state). Command to start wit
 888:.\Generated_Source\PSoC4/USBFS_episr.c ****                     USBFS_CyDmaValidateDescriptor(channelNum, USBFS_DMA_DESCR0);
 889:.\Generated_Source\PSoC4/USBFS_episr.c ****                     USBFS_CyDmaValidateDescriptor(channelNum, USBFS_DMA_DESCR1);
 890:.\Generated_Source\PSoC4/USBFS_episr.c ****                     USBFS_CyDmaSetDescriptor0Next(channelNum);
 891:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 892:.\Generated_Source\PSoC4/USBFS_episr.c ****                     /* Enable DMA channel: configuration complete. */
 893:.\Generated_Source\PSoC4/USBFS_episr.c ****                     USBFS_CyDmaChEnable(channelNum);
 894:.\Generated_Source\PSoC4/USBFS_episr.c ****                     
 895:.\Generated_Source\PSoC4/USBFS_episr.c ****                     
 896:.\Generated_Source\PSoC4/USBFS_episr.c ****                     /* Read CR0 register to clear SIE lock. */
 897:.\Generated_Source\PSoC4/USBFS_episr.c ****                     (void) USBFS_SIE_EP_BASE.sieEp[ep].epCr0;
 898:.\Generated_Source\PSoC4/USBFS_episr.c ****                     
 899:.\Generated_Source\PSoC4/USBFS_episr.c ****                     /* Toggle all endpoint types except ISOC. */
 900:.\Generated_Source\PSoC4/USBFS_episr.c ****                     if (USBFS_GET_EP_TYPE(ep) != USBFS_EP_TYPE_ISOC)
 901:.\Generated_Source\PSoC4/USBFS_episr.c ****                     {
 902:.\Generated_Source\PSoC4/USBFS_episr.c ****                         USBFS_EP[ep].epToggle ^= USBFS_EPX_CNT_DATA_TOGGLE;
 903:.\Generated_Source\PSoC4/USBFS_episr.c ****                     }
 904:.\Generated_Source\PSoC4/USBFS_episr.c ****             
 905:.\Generated_Source\PSoC4/USBFS_episr.c ****                     /* Notify user that data has been copied from endpoint buffer. */
 906:.\Generated_Source\PSoC4/USBFS_episr.c ****                     USBFS_EP[ep].apiEpState = USBFS_EVENT_PENDING;
 907:.\Generated_Source\PSoC4/USBFS_episr.c ****                     
 908:.\Generated_Source\PSoC4/USBFS_episr.c ****                 #if (defined(USBFS_ENABLE_MIDI_STREAMING) && \
 909:.\Generated_Source\PSoC4/USBFS_episr.c ****                     !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 910:.\Generated_Source\PSoC4/USBFS_episr.c ****                     if (USBFS_midi_out_ep == ep)
 911:.\Generated_Source\PSoC4/USBFS_episr.c ****                     {
 912:.\Generated_Source\PSoC4/USBFS_episr.c ****                         USBFS_MIDI_OUT_Service();
 913:.\Generated_Source\PSoC4/USBFS_episr.c ****                     }
 914:.\Generated_Source\PSoC4/USBFS_episr.c ****                 #endif /* (USBFS_ISR_SERVICE_MIDI_OUT) */
 915:.\Generated_Source\PSoC4/USBFS_episr.c ****                 }
 916:.\Generated_Source\PSoC4/USBFS_episr.c ****             #endif /* (CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO) */
 917:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 918:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 919:.\Generated_Source\PSoC4/USBFS_episr.c ****                 /* `#START ARB_USER_CODE` Place your code here for handle Buffer Underflow/Overflow
 920:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 921:.\Generated_Source\PSoC4/USBFS_episr.c ****                 /* `#END` */
 922:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 923:.\Generated_Source\PSoC4/USBFS_episr.c ****             #ifdef USBFS_ARB_ISR_CALLBACK
 924:.\Generated_Source\PSoC4/USBFS_episr.c ****                 USBFS_ARB_ISR_Callback(ep, epStatus);
 925:.\Generated_Source\PSoC4/USBFS_episr.c ****             #endif /* (USBFS_ARB_ISR_CALLBACK) */
 926:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 927:.\Generated_Source\PSoC4/USBFS_episr.c ****                 /* Clear serviced endpoint interrupt sources. */
 928:.\Generated_Source\PSoC4/USBFS_episr.c ****                 USBFS_ARB_EP_BASE.arbEp[ep].epSr = epStatus;
 206              		.loc 1 928 0
 207 0076 9801     		lsl	r0, r3, #6
 208 0078 054C     		ldr	r4, .L15+4
 209 007a A446     		mov	ip, r4
 210 007c 6044     		add	r0, r0, ip
 211 007e 8160     		str	r1, [r0, #8]
ARM GAS  C:\Users\LAIR\AppData\Local\Temp\ccb9lIqg.s 			page 21


 212              	.LVL4:
 213              	.L11:
 929:.\Generated_Source\PSoC4/USBFS_episr.c ****             }
 930:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 931:.\Generated_Source\PSoC4/USBFS_episr.c ****             ++ep;
 214              		.loc 1 931 0
 215 0080 0133     		add	r3, r3, #1
 216              	.LVL5:
 932:.\Generated_Source\PSoC4/USBFS_episr.c ****             arbIntrStatus >>= 1u;
 217              		.loc 1 932 0
 218 0082 5208     		lsr	r2, r2, #1
 219              	.LVL6:
 220              	.L10:
 801:.\Generated_Source\PSoC4/USBFS_episr.c ****         {
 221              		.loc 1 801 0
 222 0084 002A     		cmp	r2, #0
 223 0086 C0D1     		bne	.L14
 933:.\Generated_Source\PSoC4/USBFS_episr.c ****         }
 934:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 935:.\Generated_Source\PSoC4/USBFS_episr.c ****         /* `#START ARB_END_USER_CODE` Place your code here */
 936:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 937:.\Generated_Source\PSoC4/USBFS_episr.c ****         /* `#END` */
 938:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 939:.\Generated_Source\PSoC4/USBFS_episr.c ****     #ifdef USBFS_ARB_ISR_EXIT_CALLBACK
 940:.\Generated_Source\PSoC4/USBFS_episr.c ****         USBFS_ARB_ISR_ExitCallback();
 941:.\Generated_Source\PSoC4/USBFS_episr.c ****     #endif /* (USBFS_ARB_ISR_EXIT_CALLBACK) */
 942:.\Generated_Source\PSoC4/USBFS_episr.c ****     }
 224              		.loc 1 942 0
 225              		@ sp needed
 226 0088 70BD     		pop	{r4, r5, r6, pc}
 227              	.L16:
 228 008a C046     		.align	2
 229              	.L15:
 230 008c 7C022C40 		.word	1076626044
 231 0090 C0012C40 		.word	1076625856
 232 0094 00000000 		.word	USBFS_EP
 233 0098 F0FF2B40 		.word	1076625392
 234              		.cfi_endproc
 235              	.LFE68:
 236              		.size	USBFS_ARB_ISR, .-USBFS_ARB_ISR
 237              		.section	.text.USBFS_BUS_RESET_ISR,"ax",%progbits
 238              		.align	2
 239              		.global	USBFS_BUS_RESET_ISR
 240              		.code	16
 241              		.thumb_func
 242              		.type	USBFS_BUS_RESET_ISR, %function
 243              	USBFS_BUS_RESET_ISR:
 244              	.LFB67:
 723:.\Generated_Source\PSoC4/USBFS_episr.c **** #ifdef USBFS_BUS_RESET_ISR_ENTRY_CALLBACK
 245              		.loc 1 723 0
 246              		.cfi_startproc
 247 0000 08B5     		push	{r3, lr}
 248              		.cfi_def_cfa_offset 8
 249              		.cfi_offset 3, -8
 250              		.cfi_offset 14, -4
 732:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 251              		.loc 1 732 0
ARM GAS  C:\Users\LAIR\AppData\Local\Temp\ccb9lIqg.s 			page 22


 252 0002 0222     		mov	r2, #2
 253 0004 024B     		ldr	r3, .L18
 254 0006 1A60     		str	r2, [r3]
 734:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 255              		.loc 1 734 0
 256 0008 FFF7FEFF 		bl	USBFS_ReInitComponent
 257              	.LVL7:
 739:.\Generated_Source\PSoC4/USBFS_episr.c **** #endif /* (USBFS_BUS_RESET_ISR_ACTIVE) */
 258              		.loc 1 739 0
 259              		@ sp needed
 260 000c 08BD     		pop	{r3, pc}
 261              	.L19:
 262 000e C046     		.align	2
 263              	.L18:
 264 0010 20202C40 		.word	1076633632
 265              		.cfi_endproc
 266              	.LFE67:
 267              		.size	USBFS_BUS_RESET_ISR, .-USBFS_BUS_RESET_ISR
 268              		.section	.text.USBFS_INTR_HI_ISR,"ax",%progbits
 269              		.align	2
 270              		.global	USBFS_INTR_HI_ISR
 271              		.code	16
 272              		.thumb_func
 273              		.type	USBFS_INTR_HI_ISR, %function
 274              	USBFS_INTR_HI_ISR:
 275              	.LFB70:
 943:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 944:.\Generated_Source\PSoC4/USBFS_episr.c **** #endif /*  (USBFS_ARB_ISR_ACTIVE && USBFS_EP_MANAGEMENT_DMA) */
 945:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 946:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 947:.\Generated_Source\PSoC4/USBFS_episr.c **** #if (USBFS_EP_MANAGEMENT_DMA_AUTO)
 948:.\Generated_Source\PSoC4/USBFS_episr.c **** #if (CY_PSOC4)
 949:.\Generated_Source\PSoC4/USBFS_episr.c ****     #if (USBFS_DMA1_ACTIVE)
 950:.\Generated_Source\PSoC4/USBFS_episr.c ****         /******************************************************************************
 951:.\Generated_Source\PSoC4/USBFS_episr.c ****         * Function Name: USBFS_EP1_DMA_DONE_ISR
 952:.\Generated_Source\PSoC4/USBFS_episr.c ****         ***************************************************************************//**
 953:.\Generated_Source\PSoC4/USBFS_episr.c ****         *
 954:.\Generated_Source\PSoC4/USBFS_episr.c ****         *  Endpoint 1 DMA Done Interrupt Service Routine.
 955:.\Generated_Source\PSoC4/USBFS_episr.c ****         *
 956:.\Generated_Source\PSoC4/USBFS_episr.c ****         *
 957:.\Generated_Source\PSoC4/USBFS_episr.c ****         ******************************************************************************/
 958:.\Generated_Source\PSoC4/USBFS_episr.c ****         void USBFS_EP1_DMA_DONE_ISR(void)
 959:.\Generated_Source\PSoC4/USBFS_episr.c ****         {
 960:.\Generated_Source\PSoC4/USBFS_episr.c ****             uint32 nextAddr;
 961:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 962:.\Generated_Source\PSoC4/USBFS_episr.c ****             /* Manage data elements which remain to transfer. */
 963:.\Generated_Source\PSoC4/USBFS_episr.c ****             if (0u != USBFS_DmaEpBurstCnt[USBFS_EP1])
 964:.\Generated_Source\PSoC4/USBFS_episr.c ****             {
 965:.\Generated_Source\PSoC4/USBFS_episr.c ****                 /* Decrement burst counter. */
 966:.\Generated_Source\PSoC4/USBFS_episr.c ****                 --USBFS_DmaEpBurstCnt[USBFS_EP1];
 967:.\Generated_Source\PSoC4/USBFS_episr.c ****             }
 968:.\Generated_Source\PSoC4/USBFS_episr.c ****             else
 969:.\Generated_Source\PSoC4/USBFS_episr.c ****             {
 970:.\Generated_Source\PSoC4/USBFS_episr.c ****                 /* Adjust length of last burst. */
 971:.\Generated_Source\PSoC4/USBFS_episr.c ****                 USBFS_CyDmaSetNumDataElements(USBFS_EP1_DMA_CH,
 972:.\Generated_Source\PSoC4/USBFS_episr.c ****                                                         ((uint32) USBFS_DmaEpLastBurstEl[USBFS_EP1]
 973:.\Generated_Source\PSoC4/USBFS_episr.c ****                                                         ((uint32) USBFS_DmaEpLastBurstEl[USBFS_EP1]
ARM GAS  C:\Users\LAIR\AppData\Local\Temp\ccb9lIqg.s 			page 23


 974:.\Generated_Source\PSoC4/USBFS_episr.c ****             }
 975:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 976:.\Generated_Source\PSoC4/USBFS_episr.c ****             /* Advance source for input endpoint or destination for output endpoint. */
 977:.\Generated_Source\PSoC4/USBFS_episr.c ****             if (0u != (USBFS_EP[USBFS_EP1].addr & USBFS_DIR_IN))
 978:.\Generated_Source\PSoC4/USBFS_episr.c ****             {
 979:.\Generated_Source\PSoC4/USBFS_episr.c ****                 /* Change source for descriptor 0. */
 980:.\Generated_Source\PSoC4/USBFS_episr.c ****                 nextAddr = (uint32) USBFS_CyDmaGetSrcAddress(USBFS_EP1_DMA_CH, USBFS_DMA_DESCR0);
 981:.\Generated_Source\PSoC4/USBFS_episr.c ****                 nextAddr += (2u * USBFS_DMA_BYTES_PER_BURST);
 982:.\Generated_Source\PSoC4/USBFS_episr.c ****                 USBFS_CyDmaSetSrcAddress(USBFS_EP1_DMA_CH, USBFS_DMA_DESCR0, (void *) nextAddr);
 983:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 984:.\Generated_Source\PSoC4/USBFS_episr.c ****                 /* Change source for descriptor 1. */
 985:.\Generated_Source\PSoC4/USBFS_episr.c ****                 nextAddr += USBFS_DMA_BYTES_PER_BURST;
 986:.\Generated_Source\PSoC4/USBFS_episr.c ****                 USBFS_CyDmaSetSrcAddress(USBFS_EP1_DMA_CH, USBFS_DMA_DESCR1, (void *) nextAddr);
 987:.\Generated_Source\PSoC4/USBFS_episr.c ****             }
 988:.\Generated_Source\PSoC4/USBFS_episr.c ****             else
 989:.\Generated_Source\PSoC4/USBFS_episr.c ****             {
 990:.\Generated_Source\PSoC4/USBFS_episr.c ****                 /* Change destination for descriptor 0. */
 991:.\Generated_Source\PSoC4/USBFS_episr.c ****                 nextAddr  = (uint32) USBFS_CyDmaGetDstAddress(USBFS_EP1_DMA_CH, USBFS_DMA_DESCR0);
 992:.\Generated_Source\PSoC4/USBFS_episr.c ****                 nextAddr += (2u * USBFS_DMA_BYTES_PER_BURST);
 993:.\Generated_Source\PSoC4/USBFS_episr.c ****                 USBFS_CyDmaSetDstAddress(USBFS_EP1_DMA_CH, USBFS_DMA_DESCR0, (void *) nextAddr);
 994:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 995:.\Generated_Source\PSoC4/USBFS_episr.c ****                 /* Change destination for descriptor 1. */
 996:.\Generated_Source\PSoC4/USBFS_episr.c ****                 nextAddr += USBFS_DMA_BYTES_PER_BURST;
 997:.\Generated_Source\PSoC4/USBFS_episr.c ****                 USBFS_CyDmaSetDstAddress(USBFS_EP1_DMA_CH, USBFS_DMA_DESCR1, (void *) nextAddr);
 998:.\Generated_Source\PSoC4/USBFS_episr.c ****             }
 999:.\Generated_Source\PSoC4/USBFS_episr.c **** 
1000:.\Generated_Source\PSoC4/USBFS_episr.c ****             /* Enable DMA to execute transfer as it was disabled because there were no valid descri
1001:.\Generated_Source\PSoC4/USBFS_episr.c ****             USBFS_CyDmaValidateDescriptor(USBFS_EP1_DMA_CH, USBFS_DMA_DESCR0);
1002:.\Generated_Source\PSoC4/USBFS_episr.c ****             USBFS_CyDmaChEnable (USBFS_EP1_DMA_CH);
1003:.\Generated_Source\PSoC4/USBFS_episr.c ****             USBFS_CyDmaTriggerIn(USBFS_DmaReqOut[USBFS_EP1]);
1004:.\Generated_Source\PSoC4/USBFS_episr.c ****         }
1005:.\Generated_Source\PSoC4/USBFS_episr.c ****     #endif /* (USBFS_DMA1_ACTIVE) */
1006:.\Generated_Source\PSoC4/USBFS_episr.c **** 
1007:.\Generated_Source\PSoC4/USBFS_episr.c **** 
1008:.\Generated_Source\PSoC4/USBFS_episr.c ****     #if (USBFS_DMA2_ACTIVE)
1009:.\Generated_Source\PSoC4/USBFS_episr.c ****         /******************************************************************************
1010:.\Generated_Source\PSoC4/USBFS_episr.c ****         * Function Name: USBFS_EP2_DMA_DONE_ISR
1011:.\Generated_Source\PSoC4/USBFS_episr.c ****         ***************************************************************************//**
1012:.\Generated_Source\PSoC4/USBFS_episr.c ****         *
1013:.\Generated_Source\PSoC4/USBFS_episr.c ****         *  Endpoint 2 DMA Done Interrupt Service Routine.
1014:.\Generated_Source\PSoC4/USBFS_episr.c ****         *
1015:.\Generated_Source\PSoC4/USBFS_episr.c ****         *
1016:.\Generated_Source\PSoC4/USBFS_episr.c ****         ******************************************************************************/
1017:.\Generated_Source\PSoC4/USBFS_episr.c ****         void USBFS_EP2_DMA_DONE_ISR(void)
1018:.\Generated_Source\PSoC4/USBFS_episr.c ****         {
1019:.\Generated_Source\PSoC4/USBFS_episr.c ****             uint32 nextAddr;
1020:.\Generated_Source\PSoC4/USBFS_episr.c **** 
1021:.\Generated_Source\PSoC4/USBFS_episr.c ****             /* Manage data elements which remain to transfer. */
1022:.\Generated_Source\PSoC4/USBFS_episr.c ****             if (0u != USBFS_DmaEpBurstCnt[USBFS_EP2])
1023:.\Generated_Source\PSoC4/USBFS_episr.c ****             {
1024:.\Generated_Source\PSoC4/USBFS_episr.c ****                 /* Decrement burst counter. */
1025:.\Generated_Source\PSoC4/USBFS_episr.c ****                 --USBFS_DmaEpBurstCnt[USBFS_EP2];
1026:.\Generated_Source\PSoC4/USBFS_episr.c ****             }
1027:.\Generated_Source\PSoC4/USBFS_episr.c ****             else
1028:.\Generated_Source\PSoC4/USBFS_episr.c ****             {
1029:.\Generated_Source\PSoC4/USBFS_episr.c ****                 /* Adjust length of last burst. */
1030:.\Generated_Source\PSoC4/USBFS_episr.c ****                 USBFS_CyDmaSetNumDataElements(USBFS_EP2_DMA_CH,
ARM GAS  C:\Users\LAIR\AppData\Local\Temp\ccb9lIqg.s 			page 24


1031:.\Generated_Source\PSoC4/USBFS_episr.c ****                                                         ((uint32) USBFS_DmaEpLastBurstEl[USBFS_EP2]
1032:.\Generated_Source\PSoC4/USBFS_episr.c ****                                                         ((uint32) USBFS_DmaEpLastBurstEl[USBFS_EP2]
1033:.\Generated_Source\PSoC4/USBFS_episr.c ****             }
1034:.\Generated_Source\PSoC4/USBFS_episr.c **** 
1035:.\Generated_Source\PSoC4/USBFS_episr.c ****             /* Advance source for input endpoint or destination for output endpoint. */
1036:.\Generated_Source\PSoC4/USBFS_episr.c ****             if (0u != (USBFS_EP[USBFS_EP2].addr & USBFS_DIR_IN))
1037:.\Generated_Source\PSoC4/USBFS_episr.c ****             {
1038:.\Generated_Source\PSoC4/USBFS_episr.c ****                 /* Change source for descriptor 0. */
1039:.\Generated_Source\PSoC4/USBFS_episr.c ****                 nextAddr = (uint32) USBFS_CyDmaGetSrcAddress(USBFS_EP2_DMA_CH, USBFS_DMA_DESCR0);
1040:.\Generated_Source\PSoC4/USBFS_episr.c ****                 nextAddr += (2u * USBFS_DMA_BYTES_PER_BURST);
1041:.\Generated_Source\PSoC4/USBFS_episr.c ****                 USBFS_CyDmaSetSrcAddress(USBFS_EP2_DMA_CH, USBFS_DMA_DESCR0, (void *) nextAddr);
1042:.\Generated_Source\PSoC4/USBFS_episr.c **** 
1043:.\Generated_Source\PSoC4/USBFS_episr.c ****                 /* Change source for descriptor 1. */
1044:.\Generated_Source\PSoC4/USBFS_episr.c ****                 nextAddr += USBFS_DMA_BYTES_PER_BURST;
1045:.\Generated_Source\PSoC4/USBFS_episr.c ****                 USBFS_CyDmaSetSrcAddress(USBFS_EP2_DMA_CH, USBFS_DMA_DESCR1, (void *) nextAddr);
1046:.\Generated_Source\PSoC4/USBFS_episr.c ****             }
1047:.\Generated_Source\PSoC4/USBFS_episr.c ****             else
1048:.\Generated_Source\PSoC4/USBFS_episr.c ****             {
1049:.\Generated_Source\PSoC4/USBFS_episr.c ****                 /* Change destination for descriptor 0. */
1050:.\Generated_Source\PSoC4/USBFS_episr.c ****                 nextAddr  = (uint32) USBFS_CyDmaGetDstAddress(USBFS_EP2_DMA_CH, USBFS_DMA_DESCR0);
1051:.\Generated_Source\PSoC4/USBFS_episr.c ****                 nextAddr += (2u * USBFS_DMA_BYTES_PER_BURST);
1052:.\Generated_Source\PSoC4/USBFS_episr.c ****                 USBFS_CyDmaSetDstAddress(USBFS_EP2_DMA_CH, USBFS_DMA_DESCR0, (void *) nextAddr);
1053:.\Generated_Source\PSoC4/USBFS_episr.c **** 
1054:.\Generated_Source\PSoC4/USBFS_episr.c ****                 /* Change destination for descriptor 1. */
1055:.\Generated_Source\PSoC4/USBFS_episr.c ****                 nextAddr += USBFS_DMA_BYTES_PER_BURST;
1056:.\Generated_Source\PSoC4/USBFS_episr.c ****                 USBFS_CyDmaSetDstAddress(USBFS_EP2_DMA_CH, USBFS_DMA_DESCR1, (void *) nextAddr);
1057:.\Generated_Source\PSoC4/USBFS_episr.c ****             }
1058:.\Generated_Source\PSoC4/USBFS_episr.c **** 
1059:.\Generated_Source\PSoC4/USBFS_episr.c ****             /* Enable DMA to execute transfer as it was disabled because there were no valid descri
1060:.\Generated_Source\PSoC4/USBFS_episr.c ****             USBFS_CyDmaValidateDescriptor(USBFS_EP2_DMA_CH, USBFS_DMA_DESCR0);
1061:.\Generated_Source\PSoC4/USBFS_episr.c ****             USBFS_CyDmaChEnable (USBFS_EP2_DMA_CH);
1062:.\Generated_Source\PSoC4/USBFS_episr.c ****             USBFS_CyDmaTriggerIn(USBFS_DmaReqOut[USBFS_EP2]);
1063:.\Generated_Source\PSoC4/USBFS_episr.c ****         }
1064:.\Generated_Source\PSoC4/USBFS_episr.c ****     #endif /* (USBFS_DMA2_ACTIVE) */
1065:.\Generated_Source\PSoC4/USBFS_episr.c **** 
1066:.\Generated_Source\PSoC4/USBFS_episr.c **** 
1067:.\Generated_Source\PSoC4/USBFS_episr.c ****     #if (USBFS_DMA3_ACTIVE)
1068:.\Generated_Source\PSoC4/USBFS_episr.c ****         /******************************************************************************
1069:.\Generated_Source\PSoC4/USBFS_episr.c ****         * Function Name: USBFS_EP3_DMA_DONE_ISR
1070:.\Generated_Source\PSoC4/USBFS_episr.c ****         ***************************************************************************//**
1071:.\Generated_Source\PSoC4/USBFS_episr.c ****         *
1072:.\Generated_Source\PSoC4/USBFS_episr.c ****         *  Endpoint 3 DMA Done Interrupt Service Routine.
1073:.\Generated_Source\PSoC4/USBFS_episr.c ****         *
1074:.\Generated_Source\PSoC4/USBFS_episr.c ****         *
1075:.\Generated_Source\PSoC4/USBFS_episr.c ****         ******************************************************************************/
1076:.\Generated_Source\PSoC4/USBFS_episr.c ****         void USBFS_EP3_DMA_DONE_ISR(void)
1077:.\Generated_Source\PSoC4/USBFS_episr.c ****         {
1078:.\Generated_Source\PSoC4/USBFS_episr.c ****             uint32 nextAddr;
1079:.\Generated_Source\PSoC4/USBFS_episr.c **** 
1080:.\Generated_Source\PSoC4/USBFS_episr.c ****             /* Manage data elements which remain to transfer. */
1081:.\Generated_Source\PSoC4/USBFS_episr.c ****             if (0u != USBFS_DmaEpBurstCnt[USBFS_EP3])
1082:.\Generated_Source\PSoC4/USBFS_episr.c ****             {
1083:.\Generated_Source\PSoC4/USBFS_episr.c ****                 /* Decrement burst counter. */
1084:.\Generated_Source\PSoC4/USBFS_episr.c ****                 --USBFS_DmaEpBurstCnt[USBFS_EP3];
1085:.\Generated_Source\PSoC4/USBFS_episr.c ****             }
1086:.\Generated_Source\PSoC4/USBFS_episr.c ****             else
1087:.\Generated_Source\PSoC4/USBFS_episr.c ****             {
ARM GAS  C:\Users\LAIR\AppData\Local\Temp\ccb9lIqg.s 			page 25


1088:.\Generated_Source\PSoC4/USBFS_episr.c ****                 /* Adjust length of last burst. */
1089:.\Generated_Source\PSoC4/USBFS_episr.c ****                 USBFS_CyDmaSetNumDataElements(USBFS_EP3_DMA_CH,
1090:.\Generated_Source\PSoC4/USBFS_episr.c ****                                                         ((uint32) USBFS_DmaEpLastBurstEl[USBFS_EP3]
1091:.\Generated_Source\PSoC4/USBFS_episr.c ****                                                         ((uint32) USBFS_DmaEpLastBurstEl[USBFS_EP3]
1092:.\Generated_Source\PSoC4/USBFS_episr.c ****             }
1093:.\Generated_Source\PSoC4/USBFS_episr.c **** 
1094:.\Generated_Source\PSoC4/USBFS_episr.c ****             /* Advance source for input endpoint or destination for output endpoint. */
1095:.\Generated_Source\PSoC4/USBFS_episr.c ****             if (0u != (USBFS_EP[USBFS_EP3].addr & USBFS_DIR_IN))
1096:.\Generated_Source\PSoC4/USBFS_episr.c ****             {
1097:.\Generated_Source\PSoC4/USBFS_episr.c ****                 /* Change source for descriptor 0. */
1098:.\Generated_Source\PSoC4/USBFS_episr.c ****                 nextAddr = (uint32) USBFS_CyDmaGetSrcAddress(USBFS_EP3_DMA_CH, USBFS_DMA_DESCR0);
1099:.\Generated_Source\PSoC4/USBFS_episr.c ****                 nextAddr += (2u * USBFS_DMA_BYTES_PER_BURST);
1100:.\Generated_Source\PSoC4/USBFS_episr.c ****                 USBFS_CyDmaSetSrcAddress(USBFS_EP3_DMA_CH, USBFS_DMA_DESCR0, (void *) nextAddr);
1101:.\Generated_Source\PSoC4/USBFS_episr.c **** 
1102:.\Generated_Source\PSoC4/USBFS_episr.c ****                 /* Change source for descriptor 1. */
1103:.\Generated_Source\PSoC4/USBFS_episr.c ****                 nextAddr += USBFS_DMA_BYTES_PER_BURST;
1104:.\Generated_Source\PSoC4/USBFS_episr.c ****                 USBFS_CyDmaSetSrcAddress(USBFS_EP3_DMA_CH, USBFS_DMA_DESCR1, (void *) nextAddr);
1105:.\Generated_Source\PSoC4/USBFS_episr.c ****             }
1106:.\Generated_Source\PSoC4/USBFS_episr.c ****             else
1107:.\Generated_Source\PSoC4/USBFS_episr.c ****             {
1108:.\Generated_Source\PSoC4/USBFS_episr.c ****                 /* Change destination for descriptor 0. */
1109:.\Generated_Source\PSoC4/USBFS_episr.c ****                 nextAddr  = (uint32) USBFS_CyDmaGetDstAddress(USBFS_EP3_DMA_CH, USBFS_DMA_DESCR0);
1110:.\Generated_Source\PSoC4/USBFS_episr.c ****                 nextAddr += (2u * USBFS_DMA_BYTES_PER_BURST);
1111:.\Generated_Source\PSoC4/USBFS_episr.c ****                 USBFS_CyDmaSetDstAddress(USBFS_EP3_DMA_CH, USBFS_DMA_DESCR0, (void *) nextAddr);
1112:.\Generated_Source\PSoC4/USBFS_episr.c **** 
1113:.\Generated_Source\PSoC4/USBFS_episr.c ****                 /* Change destination for descriptor 1. */
1114:.\Generated_Source\PSoC4/USBFS_episr.c ****                 nextAddr += USBFS_DMA_BYTES_PER_BURST;
1115:.\Generated_Source\PSoC4/USBFS_episr.c ****                 USBFS_CyDmaSetDstAddress(USBFS_EP3_DMA_CH, USBFS_DMA_DESCR1, (void *) nextAddr);
1116:.\Generated_Source\PSoC4/USBFS_episr.c ****             }
1117:.\Generated_Source\PSoC4/USBFS_episr.c **** 
1118:.\Generated_Source\PSoC4/USBFS_episr.c ****             /* Enable DMA to execute transfer as it was disabled because there were no valid descri
1119:.\Generated_Source\PSoC4/USBFS_episr.c ****             USBFS_CyDmaValidateDescriptor(USBFS_EP3_DMA_CH, USBFS_DMA_DESCR0);
1120:.\Generated_Source\PSoC4/USBFS_episr.c ****             USBFS_CyDmaChEnable (USBFS_EP3_DMA_CH);
1121:.\Generated_Source\PSoC4/USBFS_episr.c ****             USBFS_CyDmaTriggerIn(USBFS_DmaReqOut[USBFS_EP3]);
1122:.\Generated_Source\PSoC4/USBFS_episr.c ****         }
1123:.\Generated_Source\PSoC4/USBFS_episr.c ****     #endif /* (USBFS_DMA3_ACTIVE) */
1124:.\Generated_Source\PSoC4/USBFS_episr.c **** 
1125:.\Generated_Source\PSoC4/USBFS_episr.c **** 
1126:.\Generated_Source\PSoC4/USBFS_episr.c ****     #if (USBFS_DMA4_ACTIVE)
1127:.\Generated_Source\PSoC4/USBFS_episr.c ****         /******************************************************************************
1128:.\Generated_Source\PSoC4/USBFS_episr.c ****         * Function Name: USBFS_EP4_DMA_DONE_ISR
1129:.\Generated_Source\PSoC4/USBFS_episr.c ****         ***************************************************************************//**
1130:.\Generated_Source\PSoC4/USBFS_episr.c ****         *
1131:.\Generated_Source\PSoC4/USBFS_episr.c ****         *  Endpoint 4 DMA Done Interrupt Service Routine.
1132:.\Generated_Source\PSoC4/USBFS_episr.c ****         *
1133:.\Generated_Source\PSoC4/USBFS_episr.c ****         *
1134:.\Generated_Source\PSoC4/USBFS_episr.c ****         ******************************************************************************/
1135:.\Generated_Source\PSoC4/USBFS_episr.c ****         void USBFS_EP4_DMA_DONE_ISR(void)
1136:.\Generated_Source\PSoC4/USBFS_episr.c ****         {
1137:.\Generated_Source\PSoC4/USBFS_episr.c ****             uint32 nextAddr;
1138:.\Generated_Source\PSoC4/USBFS_episr.c **** 
1139:.\Generated_Source\PSoC4/USBFS_episr.c ****             /* Manage data elements which remain to transfer. */
1140:.\Generated_Source\PSoC4/USBFS_episr.c ****             if (0u != USBFS_DmaEpBurstCnt[USBFS_EP4])
1141:.\Generated_Source\PSoC4/USBFS_episr.c ****             {
1142:.\Generated_Source\PSoC4/USBFS_episr.c ****                 /* Decrement burst counter. */
1143:.\Generated_Source\PSoC4/USBFS_episr.c ****                 --USBFS_DmaEpBurstCnt[USBFS_EP4];
1144:.\Generated_Source\PSoC4/USBFS_episr.c ****             }
ARM GAS  C:\Users\LAIR\AppData\Local\Temp\ccb9lIqg.s 			page 26


1145:.\Generated_Source\PSoC4/USBFS_episr.c ****             else
1146:.\Generated_Source\PSoC4/USBFS_episr.c ****             {
1147:.\Generated_Source\PSoC4/USBFS_episr.c ****                 /* Adjust length of last burst. */
1148:.\Generated_Source\PSoC4/USBFS_episr.c ****                 USBFS_CyDmaSetNumDataElements(USBFS_EP4_DMA_CH,
1149:.\Generated_Source\PSoC4/USBFS_episr.c ****                                                         ((uint32) USBFS_DmaEpLastBurstEl[USBFS_EP4]
1150:.\Generated_Source\PSoC4/USBFS_episr.c ****                                                         ((uint32) USBFS_DmaEpLastBurstEl[USBFS_EP4]
1151:.\Generated_Source\PSoC4/USBFS_episr.c ****             }
1152:.\Generated_Source\PSoC4/USBFS_episr.c **** 
1153:.\Generated_Source\PSoC4/USBFS_episr.c ****             /* Advance source for input endpoint or destination for output endpoint. */
1154:.\Generated_Source\PSoC4/USBFS_episr.c ****             if (0u != (USBFS_EP[USBFS_EP4].addr & USBFS_DIR_IN))
1155:.\Generated_Source\PSoC4/USBFS_episr.c ****             {
1156:.\Generated_Source\PSoC4/USBFS_episr.c ****                 /* Change source for descriptor 0. */
1157:.\Generated_Source\PSoC4/USBFS_episr.c ****                 nextAddr = (uint32) USBFS_CyDmaGetSrcAddress(USBFS_EP4_DMA_CH, USBFS_DMA_DESCR0);
1158:.\Generated_Source\PSoC4/USBFS_episr.c ****                 nextAddr += (2u * USBFS_DMA_BYTES_PER_BURST);
1159:.\Generated_Source\PSoC4/USBFS_episr.c ****                 USBFS_CyDmaSetSrcAddress(USBFS_EP4_DMA_CH, USBFS_DMA_DESCR0, (void *) nextAddr);
1160:.\Generated_Source\PSoC4/USBFS_episr.c **** 
1161:.\Generated_Source\PSoC4/USBFS_episr.c ****                 /* Change source for descriptor 1. */
1162:.\Generated_Source\PSoC4/USBFS_episr.c ****                 nextAddr += USBFS_DMA_BYTES_PER_BURST;
1163:.\Generated_Source\PSoC4/USBFS_episr.c ****                 USBFS_CyDmaSetSrcAddress(USBFS_EP4_DMA_CH, USBFS_DMA_DESCR1, (void *) nextAddr);
1164:.\Generated_Source\PSoC4/USBFS_episr.c ****             }
1165:.\Generated_Source\PSoC4/USBFS_episr.c ****             else
1166:.\Generated_Source\PSoC4/USBFS_episr.c ****             {
1167:.\Generated_Source\PSoC4/USBFS_episr.c ****                 /* Change destination for descriptor 0. */
1168:.\Generated_Source\PSoC4/USBFS_episr.c ****                 nextAddr  = (uint32) USBFS_CyDmaGetDstAddress(USBFS_EP4_DMA_CH, USBFS_DMA_DESCR0);
1169:.\Generated_Source\PSoC4/USBFS_episr.c ****                 nextAddr += (2u * USBFS_DMA_BYTES_PER_BURST);
1170:.\Generated_Source\PSoC4/USBFS_episr.c ****                 USBFS_CyDmaSetDstAddress(USBFS_EP4_DMA_CH, USBFS_DMA_DESCR0, (void *) nextAddr);
1171:.\Generated_Source\PSoC4/USBFS_episr.c **** 
1172:.\Generated_Source\PSoC4/USBFS_episr.c ****                 /* Change destination for descriptor 1. */
1173:.\Generated_Source\PSoC4/USBFS_episr.c ****                 nextAddr += USBFS_DMA_BYTES_PER_BURST;
1174:.\Generated_Source\PSoC4/USBFS_episr.c ****                 USBFS_CyDmaSetDstAddress(USBFS_EP4_DMA_CH, USBFS_DMA_DESCR1, (void *) nextAddr);
1175:.\Generated_Source\PSoC4/USBFS_episr.c ****             }
1176:.\Generated_Source\PSoC4/USBFS_episr.c **** 
1177:.\Generated_Source\PSoC4/USBFS_episr.c ****             /* Enable DMA to execute transfer as it was disabled because there were no valid descri
1178:.\Generated_Source\PSoC4/USBFS_episr.c ****             USBFS_CyDmaValidateDescriptor(USBFS_EP4_DMA_CH, USBFS_DMA_DESCR0);
1179:.\Generated_Source\PSoC4/USBFS_episr.c ****             USBFS_CyDmaChEnable (USBFS_EP4_DMA_CH);
1180:.\Generated_Source\PSoC4/USBFS_episr.c ****             USBFS_CyDmaTriggerIn(USBFS_DmaReqOut[USBFS_EP4]);
1181:.\Generated_Source\PSoC4/USBFS_episr.c ****         }
1182:.\Generated_Source\PSoC4/USBFS_episr.c ****     #endif /* (USBFS_DMA4_ACTIVE) */
1183:.\Generated_Source\PSoC4/USBFS_episr.c **** 
1184:.\Generated_Source\PSoC4/USBFS_episr.c **** 
1185:.\Generated_Source\PSoC4/USBFS_episr.c ****     #if (USBFS_DMA5_ACTIVE)
1186:.\Generated_Source\PSoC4/USBFS_episr.c ****         /******************************************************************************
1187:.\Generated_Source\PSoC4/USBFS_episr.c ****         * Function Name: USBFS_EP5_DMA_DONE_ISR
1188:.\Generated_Source\PSoC4/USBFS_episr.c ****         ***************************************************************************//**
1189:.\Generated_Source\PSoC4/USBFS_episr.c ****         *
1190:.\Generated_Source\PSoC4/USBFS_episr.c ****         *  Endpoint 5 DMA Done Interrupt Service Routine.
1191:.\Generated_Source\PSoC4/USBFS_episr.c ****         *
1192:.\Generated_Source\PSoC4/USBFS_episr.c ****         *
1193:.\Generated_Source\PSoC4/USBFS_episr.c ****         ******************************************************************************/
1194:.\Generated_Source\PSoC4/USBFS_episr.c ****         void USBFS_EP5_DMA_DONE_ISR(void)
1195:.\Generated_Source\PSoC4/USBFS_episr.c ****         {
1196:.\Generated_Source\PSoC4/USBFS_episr.c ****             uint32 nextAddr;
1197:.\Generated_Source\PSoC4/USBFS_episr.c **** 
1198:.\Generated_Source\PSoC4/USBFS_episr.c ****             /* Manage data elements which remain to transfer. */
1199:.\Generated_Source\PSoC4/USBFS_episr.c ****             if (0u != USBFS_DmaEpBurstCnt[USBFS_EP5])
1200:.\Generated_Source\PSoC4/USBFS_episr.c ****             {
1201:.\Generated_Source\PSoC4/USBFS_episr.c ****                 /* Decrement burst counter. */
ARM GAS  C:\Users\LAIR\AppData\Local\Temp\ccb9lIqg.s 			page 27


1202:.\Generated_Source\PSoC4/USBFS_episr.c ****                 --USBFS_DmaEpBurstCnt[USBFS_EP5];
1203:.\Generated_Source\PSoC4/USBFS_episr.c ****             }
1204:.\Generated_Source\PSoC4/USBFS_episr.c ****             else
1205:.\Generated_Source\PSoC4/USBFS_episr.c ****             {
1206:.\Generated_Source\PSoC4/USBFS_episr.c ****                 /* Adjust length of last burst. */
1207:.\Generated_Source\PSoC4/USBFS_episr.c ****                 USBFS_CyDmaSetNumDataElements(USBFS_EP5_DMA_CH,
1208:.\Generated_Source\PSoC4/USBFS_episr.c ****                                                         ((uint32) USBFS_DmaEpLastBurstEl[USBFS_EP5]
1209:.\Generated_Source\PSoC4/USBFS_episr.c ****                                                         ((uint32) USBFS_DmaEpLastBurstEl[USBFS_EP5]
1210:.\Generated_Source\PSoC4/USBFS_episr.c ****             }
1211:.\Generated_Source\PSoC4/USBFS_episr.c **** 
1212:.\Generated_Source\PSoC4/USBFS_episr.c ****             /* Advance source for input endpoint or destination for output endpoint. */
1213:.\Generated_Source\PSoC4/USBFS_episr.c ****             if (0u != (USBFS_EP[USBFS_EP5].addr & USBFS_DIR_IN))
1214:.\Generated_Source\PSoC4/USBFS_episr.c ****             {
1215:.\Generated_Source\PSoC4/USBFS_episr.c ****                 /* Change source for descriptor 0. */
1216:.\Generated_Source\PSoC4/USBFS_episr.c ****                 nextAddr = (uint32) USBFS_CyDmaGetSrcAddress(USBFS_EP5_DMA_CH, USBFS_DMA_DESCR0);
1217:.\Generated_Source\PSoC4/USBFS_episr.c ****                 nextAddr += (2u * USBFS_DMA_BYTES_PER_BURST);
1218:.\Generated_Source\PSoC4/USBFS_episr.c ****                 USBFS_CyDmaSetSrcAddress(USBFS_EP5_DMA_CH, USBFS_DMA_DESCR0, (void *) nextAddr);
1219:.\Generated_Source\PSoC4/USBFS_episr.c **** 
1220:.\Generated_Source\PSoC4/USBFS_episr.c ****                 /* Change source for descriptor 1. */
1221:.\Generated_Source\PSoC4/USBFS_episr.c ****                 nextAddr += USBFS_DMA_BYTES_PER_BURST;
1222:.\Generated_Source\PSoC4/USBFS_episr.c ****                 USBFS_CyDmaSetSrcAddress(USBFS_EP5_DMA_CH, USBFS_DMA_DESCR1, (void *) nextAddr);
1223:.\Generated_Source\PSoC4/USBFS_episr.c ****             }
1224:.\Generated_Source\PSoC4/USBFS_episr.c ****             else
1225:.\Generated_Source\PSoC4/USBFS_episr.c ****             {
1226:.\Generated_Source\PSoC4/USBFS_episr.c ****                 /* Change destination for descriptor 0. */
1227:.\Generated_Source\PSoC4/USBFS_episr.c ****                 nextAddr  = (uint32) USBFS_CyDmaGetDstAddress(USBFS_EP5_DMA_CH, USBFS_DMA_DESCR0);
1228:.\Generated_Source\PSoC4/USBFS_episr.c ****                 nextAddr += (2u * USBFS_DMA_BYTES_PER_BURST);
1229:.\Generated_Source\PSoC4/USBFS_episr.c ****                 USBFS_CyDmaSetDstAddress(USBFS_EP5_DMA_CH, USBFS_DMA_DESCR0, (void *) nextAddr);
1230:.\Generated_Source\PSoC4/USBFS_episr.c **** 
1231:.\Generated_Source\PSoC4/USBFS_episr.c ****                 /* Change destination for descriptor 1. */
1232:.\Generated_Source\PSoC4/USBFS_episr.c ****                 nextAddr += USBFS_DMA_BYTES_PER_BURST;
1233:.\Generated_Source\PSoC4/USBFS_episr.c ****                 USBFS_CyDmaSetDstAddress(USBFS_EP5_DMA_CH, USBFS_DMA_DESCR1, (void *) nextAddr);
1234:.\Generated_Source\PSoC4/USBFS_episr.c ****             }
1235:.\Generated_Source\PSoC4/USBFS_episr.c **** 
1236:.\Generated_Source\PSoC4/USBFS_episr.c ****             /* Enable DMA to execute transfer as it was disabled because there were no valid descri
1237:.\Generated_Source\PSoC4/USBFS_episr.c ****             USBFS_CyDmaValidateDescriptor(USBFS_EP5_DMA_CH, USBFS_DMA_DESCR0);
1238:.\Generated_Source\PSoC4/USBFS_episr.c ****             USBFS_CyDmaChEnable (USBFS_EP5_DMA_CH);
1239:.\Generated_Source\PSoC4/USBFS_episr.c ****             USBFS_CyDmaTriggerIn(USBFS_DmaReqOut[USBFS_EP5]);
1240:.\Generated_Source\PSoC4/USBFS_episr.c ****         }
1241:.\Generated_Source\PSoC4/USBFS_episr.c ****     #endif /* (USBFS_DMA5_ACTIVE) */
1242:.\Generated_Source\PSoC4/USBFS_episr.c **** 
1243:.\Generated_Source\PSoC4/USBFS_episr.c **** 
1244:.\Generated_Source\PSoC4/USBFS_episr.c ****     #if (USBFS_DMA6_ACTIVE)
1245:.\Generated_Source\PSoC4/USBFS_episr.c ****         /******************************************************************************
1246:.\Generated_Source\PSoC4/USBFS_episr.c ****         * Function Name: USBFS_EP6_DMA_DONE_ISR
1247:.\Generated_Source\PSoC4/USBFS_episr.c ****         ***************************************************************************//**
1248:.\Generated_Source\PSoC4/USBFS_episr.c ****         *
1249:.\Generated_Source\PSoC4/USBFS_episr.c ****         *  Endpoint 6 DMA Done Interrupt Service Routine.
1250:.\Generated_Source\PSoC4/USBFS_episr.c ****         *
1251:.\Generated_Source\PSoC4/USBFS_episr.c ****         *
1252:.\Generated_Source\PSoC4/USBFS_episr.c ****         ******************************************************************************/
1253:.\Generated_Source\PSoC4/USBFS_episr.c ****         void USBFS_EP6_DMA_DONE_ISR(void)
1254:.\Generated_Source\PSoC4/USBFS_episr.c ****         {
1255:.\Generated_Source\PSoC4/USBFS_episr.c ****             uint32 nextAddr;
1256:.\Generated_Source\PSoC4/USBFS_episr.c **** 
1257:.\Generated_Source\PSoC4/USBFS_episr.c ****             /* Manage data elements which remain to transfer. */
1258:.\Generated_Source\PSoC4/USBFS_episr.c ****             if (0u != USBFS_DmaEpBurstCnt[USBFS_EP6])
ARM GAS  C:\Users\LAIR\AppData\Local\Temp\ccb9lIqg.s 			page 28


1259:.\Generated_Source\PSoC4/USBFS_episr.c ****             {
1260:.\Generated_Source\PSoC4/USBFS_episr.c ****                 /* Decrement burst counter. */
1261:.\Generated_Source\PSoC4/USBFS_episr.c ****                 --USBFS_DmaEpBurstCnt[USBFS_EP6];
1262:.\Generated_Source\PSoC4/USBFS_episr.c ****             }
1263:.\Generated_Source\PSoC4/USBFS_episr.c ****             else
1264:.\Generated_Source\PSoC4/USBFS_episr.c ****             {
1265:.\Generated_Source\PSoC4/USBFS_episr.c ****                 /* Adjust length of last burst. */
1266:.\Generated_Source\PSoC4/USBFS_episr.c ****                 USBFS_CyDmaSetNumDataElements(USBFS_EP6_DMA_CH,
1267:.\Generated_Source\PSoC4/USBFS_episr.c ****                                                         ((uint32) USBFS_DmaEpLastBurstEl[USBFS_EP6]
1268:.\Generated_Source\PSoC4/USBFS_episr.c ****                                                         ((uint32) USBFS_DmaEpLastBurstEl[USBFS_EP6]
1269:.\Generated_Source\PSoC4/USBFS_episr.c ****             }
1270:.\Generated_Source\PSoC4/USBFS_episr.c **** 
1271:.\Generated_Source\PSoC4/USBFS_episr.c ****             /* Advance source for input endpoint or destination for output endpoint. */
1272:.\Generated_Source\PSoC4/USBFS_episr.c ****             if (0u != (USBFS_EP[USBFS_EP6].addr & USBFS_DIR_IN))
1273:.\Generated_Source\PSoC4/USBFS_episr.c ****             {
1274:.\Generated_Source\PSoC4/USBFS_episr.c ****                 /* Change source for descriptor 0. */
1275:.\Generated_Source\PSoC4/USBFS_episr.c ****                 nextAddr = (uint32) USBFS_CyDmaGetSrcAddress(USBFS_EP6_DMA_CH, USBFS_DMA_DESCR0);
1276:.\Generated_Source\PSoC4/USBFS_episr.c ****                 nextAddr += (2u * USBFS_DMA_BYTES_PER_BURST);
1277:.\Generated_Source\PSoC4/USBFS_episr.c ****                 USBFS_CyDmaSetSrcAddress(USBFS_EP6_DMA_CH, USBFS_DMA_DESCR0, (void *) nextAddr);
1278:.\Generated_Source\PSoC4/USBFS_episr.c **** 
1279:.\Generated_Source\PSoC4/USBFS_episr.c ****                 /* Change source for descriptor 1. */
1280:.\Generated_Source\PSoC4/USBFS_episr.c ****                 nextAddr += USBFS_DMA_BYTES_PER_BURST;
1281:.\Generated_Source\PSoC4/USBFS_episr.c ****                 USBFS_CyDmaSetSrcAddress(USBFS_EP6_DMA_CH, USBFS_DMA_DESCR1, (void *) nextAddr);
1282:.\Generated_Source\PSoC4/USBFS_episr.c ****             }
1283:.\Generated_Source\PSoC4/USBFS_episr.c ****             else
1284:.\Generated_Source\PSoC4/USBFS_episr.c ****             {
1285:.\Generated_Source\PSoC4/USBFS_episr.c ****                 /* Change destination for descriptor 0. */
1286:.\Generated_Source\PSoC4/USBFS_episr.c ****                 nextAddr  = (uint32) USBFS_CyDmaGetDstAddress(USBFS_EP6_DMA_CH, USBFS_DMA_DESCR0);
1287:.\Generated_Source\PSoC4/USBFS_episr.c ****                 nextAddr += (2u * USBFS_DMA_BYTES_PER_BURST);
1288:.\Generated_Source\PSoC4/USBFS_episr.c ****                 USBFS_CyDmaSetDstAddress(USBFS_EP6_DMA_CH, USBFS_DMA_DESCR0, (void *) nextAddr);
1289:.\Generated_Source\PSoC4/USBFS_episr.c **** 
1290:.\Generated_Source\PSoC4/USBFS_episr.c ****                 /* Change destination for descriptor 1. */
1291:.\Generated_Source\PSoC4/USBFS_episr.c ****                 nextAddr += USBFS_DMA_BYTES_PER_BURST;
1292:.\Generated_Source\PSoC4/USBFS_episr.c ****                 USBFS_CyDmaSetDstAddress(USBFS_EP6_DMA_CH, USBFS_DMA_DESCR1, (void *) nextAddr);
1293:.\Generated_Source\PSoC4/USBFS_episr.c ****             }
1294:.\Generated_Source\PSoC4/USBFS_episr.c **** 
1295:.\Generated_Source\PSoC4/USBFS_episr.c ****             /* Enable the DMA to execute transfer as it was disabled because there were no valid de
1296:.\Generated_Source\PSoC4/USBFS_episr.c ****             USBFS_CyDmaValidateDescriptor(USBFS_EP6_DMA_CH, USBFS_DMA_DESCR0);
1297:.\Generated_Source\PSoC4/USBFS_episr.c ****             USBFS_CyDmaChEnable (USBFS_EP6_DMA_CH);
1298:.\Generated_Source\PSoC4/USBFS_episr.c ****             USBFS_CyDmaTriggerIn(USBFS_DmaReqOut[USBFS_EP6]);
1299:.\Generated_Source\PSoC4/USBFS_episr.c ****         }
1300:.\Generated_Source\PSoC4/USBFS_episr.c ****     #endif /* (USBFS_DMA6_ACTIVE) */
1301:.\Generated_Source\PSoC4/USBFS_episr.c **** 
1302:.\Generated_Source\PSoC4/USBFS_episr.c **** 
1303:.\Generated_Source\PSoC4/USBFS_episr.c ****     #if (USBFS_DMA7_ACTIVE)
1304:.\Generated_Source\PSoC4/USBFS_episr.c ****         /******************************************************************************
1305:.\Generated_Source\PSoC4/USBFS_episr.c ****         * Function Name: USBFS_EP7_DMA_DONE_ISR
1306:.\Generated_Source\PSoC4/USBFS_episr.c ****         ***************************************************************************//**
1307:.\Generated_Source\PSoC4/USBFS_episr.c ****         *
1308:.\Generated_Source\PSoC4/USBFS_episr.c ****         *  Endpoint 7 DMA Done Interrupt Service Routine.
1309:.\Generated_Source\PSoC4/USBFS_episr.c ****         *
1310:.\Generated_Source\PSoC4/USBFS_episr.c ****         *
1311:.\Generated_Source\PSoC4/USBFS_episr.c ****         ******************************************************************************/
1312:.\Generated_Source\PSoC4/USBFS_episr.c ****         void USBFS_EP7_DMA_DONE_ISR(void)
1313:.\Generated_Source\PSoC4/USBFS_episr.c ****         {
1314:.\Generated_Source\PSoC4/USBFS_episr.c ****             uint32 nextAddr;
1315:.\Generated_Source\PSoC4/USBFS_episr.c **** 
ARM GAS  C:\Users\LAIR\AppData\Local\Temp\ccb9lIqg.s 			page 29


1316:.\Generated_Source\PSoC4/USBFS_episr.c ****             /* Manage data elements which remain to transfer. */
1317:.\Generated_Source\PSoC4/USBFS_episr.c ****             if (0u != USBFS_DmaEpBurstCnt[USBFS_EP7])
1318:.\Generated_Source\PSoC4/USBFS_episr.c ****             {
1319:.\Generated_Source\PSoC4/USBFS_episr.c ****                 /* Decrement burst counter. */
1320:.\Generated_Source\PSoC4/USBFS_episr.c ****                 --USBFS_DmaEpBurstCnt[USBFS_EP7];
1321:.\Generated_Source\PSoC4/USBFS_episr.c ****             }
1322:.\Generated_Source\PSoC4/USBFS_episr.c ****             else
1323:.\Generated_Source\PSoC4/USBFS_episr.c ****             {
1324:.\Generated_Source\PSoC4/USBFS_episr.c ****                 /* Adjust length of last burst. */
1325:.\Generated_Source\PSoC4/USBFS_episr.c ****                 USBFS_CyDmaSetNumDataElements(USBFS_EP7_DMA_CH,
1326:.\Generated_Source\PSoC4/USBFS_episr.c ****                                                         ((uint32) USBFS_DmaEpLastBurstEl[USBFS_EP7]
1327:.\Generated_Source\PSoC4/USBFS_episr.c ****                                                         ((uint32) USBFS_DmaEpLastBurstEl[USBFS_EP7]
1328:.\Generated_Source\PSoC4/USBFS_episr.c ****             }
1329:.\Generated_Source\PSoC4/USBFS_episr.c **** 
1330:.\Generated_Source\PSoC4/USBFS_episr.c ****             /* Advance source for input endpoint or destination for output endpoint. */
1331:.\Generated_Source\PSoC4/USBFS_episr.c ****             if (0u != (USBFS_EP[USBFS_EP7].addr & USBFS_DIR_IN))
1332:.\Generated_Source\PSoC4/USBFS_episr.c ****             {
1333:.\Generated_Source\PSoC4/USBFS_episr.c ****                 /* Change source for descriptor 0. */
1334:.\Generated_Source\PSoC4/USBFS_episr.c ****                 nextAddr = (uint32) USBFS_CyDmaGetSrcAddress(USBFS_EP7_DMA_CH, USBFS_DMA_DESCR0);
1335:.\Generated_Source\PSoC4/USBFS_episr.c ****                 nextAddr += (2u * USBFS_DMA_BYTES_PER_BURST);
1336:.\Generated_Source\PSoC4/USBFS_episr.c ****                 USBFS_CyDmaSetSrcAddress(USBFS_EP7_DMA_CH, USBFS_DMA_DESCR0, (void *) nextAddr);
1337:.\Generated_Source\PSoC4/USBFS_episr.c **** 
1338:.\Generated_Source\PSoC4/USBFS_episr.c ****                 /* Change source for descriptor 1. */
1339:.\Generated_Source\PSoC4/USBFS_episr.c ****                 nextAddr += USBFS_DMA_BYTES_PER_BURST;
1340:.\Generated_Source\PSoC4/USBFS_episr.c ****                 USBFS_CyDmaSetSrcAddress(USBFS_EP7_DMA_CH, USBFS_DMA_DESCR1, (void *) nextAddr);
1341:.\Generated_Source\PSoC4/USBFS_episr.c ****             }
1342:.\Generated_Source\PSoC4/USBFS_episr.c ****             else
1343:.\Generated_Source\PSoC4/USBFS_episr.c ****             {
1344:.\Generated_Source\PSoC4/USBFS_episr.c ****                 /* Change destination for descriptor 0. */
1345:.\Generated_Source\PSoC4/USBFS_episr.c ****                 nextAddr  = (uint32) USBFS_CyDmaGetDstAddress(USBFS_EP7_DMA_CH, USBFS_DMA_DESCR0);
1346:.\Generated_Source\PSoC4/USBFS_episr.c ****                 nextAddr += (2u * USBFS_DMA_BYTES_PER_BURST);
1347:.\Generated_Source\PSoC4/USBFS_episr.c ****                 USBFS_CyDmaSetDstAddress(USBFS_EP7_DMA_CH, USBFS_DMA_DESCR0, (void *) nextAddr);
1348:.\Generated_Source\PSoC4/USBFS_episr.c **** 
1349:.\Generated_Source\PSoC4/USBFS_episr.c ****                 /* Change destination for descriptor 1. */
1350:.\Generated_Source\PSoC4/USBFS_episr.c ****                 nextAddr += USBFS_DMA_BYTES_PER_BURST;
1351:.\Generated_Source\PSoC4/USBFS_episr.c ****                 USBFS_CyDmaSetDstAddress(USBFS_EP7_DMA_CH, USBFS_DMA_DESCR1, (void *) nextAddr);
1352:.\Generated_Source\PSoC4/USBFS_episr.c ****             }
1353:.\Generated_Source\PSoC4/USBFS_episr.c **** 
1354:.\Generated_Source\PSoC4/USBFS_episr.c ****             /* Enable DMA to execute transfer as it was disabled because there were no valid descri
1355:.\Generated_Source\PSoC4/USBFS_episr.c ****             USBFS_CyDmaValidateDescriptor(USBFS_EP7_DMA_CH, USBFS_DMA_DESCR0);
1356:.\Generated_Source\PSoC4/USBFS_episr.c ****             USBFS_CyDmaChEnable (USBFS_EP7_DMA_CH);
1357:.\Generated_Source\PSoC4/USBFS_episr.c ****             USBFS_CyDmaTriggerIn(USBFS_DmaReqOut[USBFS_EP7]);
1358:.\Generated_Source\PSoC4/USBFS_episr.c ****         }
1359:.\Generated_Source\PSoC4/USBFS_episr.c ****     #endif /* (USBFS_DMA7_ACTIVE) */
1360:.\Generated_Source\PSoC4/USBFS_episr.c **** 
1361:.\Generated_Source\PSoC4/USBFS_episr.c **** 
1362:.\Generated_Source\PSoC4/USBFS_episr.c ****     #if (USBFS_DMA8_ACTIVE)
1363:.\Generated_Source\PSoC4/USBFS_episr.c ****         /******************************************************************************
1364:.\Generated_Source\PSoC4/USBFS_episr.c ****         * Function Name: USBFS_EP8_DMA_DONE_ISR
1365:.\Generated_Source\PSoC4/USBFS_episr.c ****         ***************************************************************************//**
1366:.\Generated_Source\PSoC4/USBFS_episr.c ****         *
1367:.\Generated_Source\PSoC4/USBFS_episr.c ****         *  Endpoint 8 DMA Done Interrupt Service Routine.
1368:.\Generated_Source\PSoC4/USBFS_episr.c ****         *
1369:.\Generated_Source\PSoC4/USBFS_episr.c ****         *
1370:.\Generated_Source\PSoC4/USBFS_episr.c ****         ******************************************************************************/
1371:.\Generated_Source\PSoC4/USBFS_episr.c ****         void USBFS_EP8_DMA_DONE_ISR(void)
1372:.\Generated_Source\PSoC4/USBFS_episr.c ****         {
ARM GAS  C:\Users\LAIR\AppData\Local\Temp\ccb9lIqg.s 			page 30


1373:.\Generated_Source\PSoC4/USBFS_episr.c ****             uint32 nextAddr;
1374:.\Generated_Source\PSoC4/USBFS_episr.c **** 
1375:.\Generated_Source\PSoC4/USBFS_episr.c ****             /* Manage data elements which remain to transfer. */
1376:.\Generated_Source\PSoC4/USBFS_episr.c ****             if (0u != USBFS_DmaEpBurstCnt[USBFS_EP8])
1377:.\Generated_Source\PSoC4/USBFS_episr.c ****             {
1378:.\Generated_Source\PSoC4/USBFS_episr.c ****                 /* Decrement burst counter. */
1379:.\Generated_Source\PSoC4/USBFS_episr.c ****                 --USBFS_DmaEpBurstCnt[USBFS_EP8];
1380:.\Generated_Source\PSoC4/USBFS_episr.c ****             }
1381:.\Generated_Source\PSoC4/USBFS_episr.c ****             else
1382:.\Generated_Source\PSoC4/USBFS_episr.c ****             {
1383:.\Generated_Source\PSoC4/USBFS_episr.c ****                 /* Adjust length of last burst. */
1384:.\Generated_Source\PSoC4/USBFS_episr.c ****                 USBFS_CyDmaSetNumDataElements(USBFS_EP8_DMA_CH,
1385:.\Generated_Source\PSoC4/USBFS_episr.c ****                                                         ((uint32) USBFS_DmaEpLastBurstEl[USBFS_EP8]
1386:.\Generated_Source\PSoC4/USBFS_episr.c ****                                                         ((uint32) USBFS_DmaEpLastBurstEl[USBFS_EP8]
1387:.\Generated_Source\PSoC4/USBFS_episr.c ****             }
1388:.\Generated_Source\PSoC4/USBFS_episr.c **** 
1389:.\Generated_Source\PSoC4/USBFS_episr.c ****             /* Advance source for input endpoint or destination for output endpoint. */
1390:.\Generated_Source\PSoC4/USBFS_episr.c ****             if (0u != (USBFS_EP[USBFS_EP8].addr & USBFS_DIR_IN))
1391:.\Generated_Source\PSoC4/USBFS_episr.c ****             {
1392:.\Generated_Source\PSoC4/USBFS_episr.c ****                 /* Change source for descriptor 0. */
1393:.\Generated_Source\PSoC4/USBFS_episr.c ****                 nextAddr = (uint32) USBFS_CyDmaGetSrcAddress(USBFS_EP8_DMA_CH, USBFS_DMA_DESCR0);
1394:.\Generated_Source\PSoC4/USBFS_episr.c ****                 nextAddr += (2u * USBFS_DMA_BYTES_PER_BURST);
1395:.\Generated_Source\PSoC4/USBFS_episr.c ****                 USBFS_CyDmaSetSrcAddress(USBFS_EP8_DMA_CH, USBFS_DMA_DESCR0, (void *) nextAddr);
1396:.\Generated_Source\PSoC4/USBFS_episr.c **** 
1397:.\Generated_Source\PSoC4/USBFS_episr.c ****                 /* Change source for descriptor 1. */
1398:.\Generated_Source\PSoC4/USBFS_episr.c ****                 nextAddr += USBFS_DMA_BYTES_PER_BURST;
1399:.\Generated_Source\PSoC4/USBFS_episr.c ****                 USBFS_CyDmaSetSrcAddress(USBFS_EP8_DMA_CH, USBFS_DMA_DESCR1, (void *) nextAddr);
1400:.\Generated_Source\PSoC4/USBFS_episr.c ****             }
1401:.\Generated_Source\PSoC4/USBFS_episr.c ****             else
1402:.\Generated_Source\PSoC4/USBFS_episr.c ****             {
1403:.\Generated_Source\PSoC4/USBFS_episr.c ****                 /* Change destination for descriptor 0. */
1404:.\Generated_Source\PSoC4/USBFS_episr.c ****                 nextAddr  = (uint32) USBFS_CyDmaGetDstAddress(USBFS_EP8_DMA_CH, USBFS_DMA_DESCR0);
1405:.\Generated_Source\PSoC4/USBFS_episr.c ****                 nextAddr += (2u * USBFS_DMA_BYTES_PER_BURST);
1406:.\Generated_Source\PSoC4/USBFS_episr.c ****                 USBFS_CyDmaSetDstAddress(USBFS_EP8_DMA_CH, USBFS_DMA_DESCR0, (void *) nextAddr);
1407:.\Generated_Source\PSoC4/USBFS_episr.c **** 
1408:.\Generated_Source\PSoC4/USBFS_episr.c ****                 /* Change destination for descriptor 1. */
1409:.\Generated_Source\PSoC4/USBFS_episr.c ****                 nextAddr += USBFS_DMA_BYTES_PER_BURST;
1410:.\Generated_Source\PSoC4/USBFS_episr.c ****                 USBFS_CyDmaSetDstAddress(USBFS_EP8_DMA_CH, USBFS_DMA_DESCR1, (void *) nextAddr);
1411:.\Generated_Source\PSoC4/USBFS_episr.c ****             }
1412:.\Generated_Source\PSoC4/USBFS_episr.c **** 
1413:.\Generated_Source\PSoC4/USBFS_episr.c ****             /* Enable DMA to execute transfer as it was disabled because there were no valid descri
1414:.\Generated_Source\PSoC4/USBFS_episr.c ****             USBFS_CyDmaValidateDescriptor(USBFS_EP8_DMA_CH, USBFS_DMA_DESCR0);
1415:.\Generated_Source\PSoC4/USBFS_episr.c ****             USBFS_CyDmaChEnable (USBFS_EP8_DMA_CH);
1416:.\Generated_Source\PSoC4/USBFS_episr.c ****             USBFS_CyDmaTriggerIn(USBFS_DmaReqOut[USBFS_EP8]);
1417:.\Generated_Source\PSoC4/USBFS_episr.c ****         }
1418:.\Generated_Source\PSoC4/USBFS_episr.c ****     #endif /* (USBFS_DMA8_ACTIVE) */
1419:.\Generated_Source\PSoC4/USBFS_episr.c **** 
1420:.\Generated_Source\PSoC4/USBFS_episr.c **** #else
1421:.\Generated_Source\PSoC4/USBFS_episr.c ****     #if (USBFS_EP_DMA_AUTO_OPT == 0u)
1422:.\Generated_Source\PSoC4/USBFS_episr.c ****         /******************************************************************************
1423:.\Generated_Source\PSoC4/USBFS_episr.c ****         * Function Name: USBFS_EP_DMA_DONE_ISR
1424:.\Generated_Source\PSoC4/USBFS_episr.c ****         ***************************************************************************//**
1425:.\Generated_Source\PSoC4/USBFS_episr.c ****         *
1426:.\Generated_Source\PSoC4/USBFS_episr.c ****         *  DMA Done Interrupt Service Routine.
1427:.\Generated_Source\PSoC4/USBFS_episr.c ****         *
1428:.\Generated_Source\PSoC4/USBFS_episr.c ****         *
1429:.\Generated_Source\PSoC4/USBFS_episr.c ****         ******************************************************************************/
ARM GAS  C:\Users\LAIR\AppData\Local\Temp\ccb9lIqg.s 			page 31


1430:.\Generated_Source\PSoC4/USBFS_episr.c ****         CY_ISR(USBFS_EP_DMA_DONE_ISR)
1431:.\Generated_Source\PSoC4/USBFS_episr.c ****         {
1432:.\Generated_Source\PSoC4/USBFS_episr.c ****             uint8 int8Status;
1433:.\Generated_Source\PSoC4/USBFS_episr.c ****             uint8 int17Status;
1434:.\Generated_Source\PSoC4/USBFS_episr.c ****             uint8 ep_status;
1435:.\Generated_Source\PSoC4/USBFS_episr.c ****             uint8 ep = USBFS_EP1;
1436:.\Generated_Source\PSoC4/USBFS_episr.c **** 
1437:.\Generated_Source\PSoC4/USBFS_episr.c ****         #ifdef USBFS_EP_DMA_DONE_ISR_ENTRY_CALLBACK
1438:.\Generated_Source\PSoC4/USBFS_episr.c ****             USBFS_EP_DMA_DONE_ISR_EntryCallback();
1439:.\Generated_Source\PSoC4/USBFS_episr.c ****         #endif /* (USBFS_EP_DMA_DONE_ISR_ENTRY_CALLBACK) */
1440:.\Generated_Source\PSoC4/USBFS_episr.c **** 
1441:.\Generated_Source\PSoC4/USBFS_episr.c ****             /* `#START EP_DMA_DONE_BEGIN_USER_CODE` Place your code here */
1442:.\Generated_Source\PSoC4/USBFS_episr.c **** 
1443:.\Generated_Source\PSoC4/USBFS_episr.c ****             /* `#END` */
1444:.\Generated_Source\PSoC4/USBFS_episr.c **** 
1445:.\Generated_Source\PSoC4/USBFS_episr.c ****             /* Read clear on read status register with EP source of interrupt. */
1446:.\Generated_Source\PSoC4/USBFS_episr.c ****             int17Status = USBFS_EP17_DMA_Done_SR_Read() & USBFS_EP17_SR_MASK;
1447:.\Generated_Source\PSoC4/USBFS_episr.c ****             int8Status  = USBFS_EP8_DMA_Done_SR_Read()  & USBFS_EP8_SR_MASK;
1448:.\Generated_Source\PSoC4/USBFS_episr.c **** 
1449:.\Generated_Source\PSoC4/USBFS_episr.c ****             while (int8Status != 0u)
1450:.\Generated_Source\PSoC4/USBFS_episr.c ****             {
1451:.\Generated_Source\PSoC4/USBFS_episr.c ****                 while (int17Status != 0u)
1452:.\Generated_Source\PSoC4/USBFS_episr.c ****                 {
1453:.\Generated_Source\PSoC4/USBFS_episr.c ****                     if ((int17Status & 1u) != 0u)  /* If EpX interrupt present. */
1454:.\Generated_Source\PSoC4/USBFS_episr.c ****                     {
1455:.\Generated_Source\PSoC4/USBFS_episr.c ****                         /* Read Endpoint Status Register. */
1456:.\Generated_Source\PSoC4/USBFS_episr.c ****                         ep_status = USBFS_ARB_EP_BASE.arbEp[ep].epSr;
1457:.\Generated_Source\PSoC4/USBFS_episr.c **** 
1458:.\Generated_Source\PSoC4/USBFS_episr.c ****                         if ((0u == (ep_status & USBFS_ARB_EPX_SR_IN_BUF_FULL)) &&
1459:.\Generated_Source\PSoC4/USBFS_episr.c ****                             (0u ==USBFS_inBufFull[ep]))
1460:.\Generated_Source\PSoC4/USBFS_episr.c ****                         {
1461:.\Generated_Source\PSoC4/USBFS_episr.c ****                             /* `#START EP_DMA_DONE_USER_CODE` Place your code here */
1462:.\Generated_Source\PSoC4/USBFS_episr.c **** 
1463:.\Generated_Source\PSoC4/USBFS_episr.c ****                             /* `#END` */
1464:.\Generated_Source\PSoC4/USBFS_episr.c **** 
1465:.\Generated_Source\PSoC4/USBFS_episr.c ****                         #ifdef USBFS_EP_DMA_DONE_ISR_CALLBACK
1466:.\Generated_Source\PSoC4/USBFS_episr.c ****                             USBFS_EP_DMA_DONE_ISR_Callback();
1467:.\Generated_Source\PSoC4/USBFS_episr.c ****                         #endif /* (USBFS_EP_DMA_DONE_ISR_CALLBACK) */
1468:.\Generated_Source\PSoC4/USBFS_episr.c **** 
1469:.\Generated_Source\PSoC4/USBFS_episr.c ****                             /* Transfer again 2 last bytes into pre-fetch endpoint area. */
1470:.\Generated_Source\PSoC4/USBFS_episr.c ****                             USBFS_ARB_EP_BASE.arbEp[ep].rwWaMsb = 0u;
1471:.\Generated_Source\PSoC4/USBFS_episr.c ****                             USBFS_ARB_EP_BASE.arbEp[ep].rwWa = (USBFS_DMA_BYTES_PER_BURST * ep) - U
1472:.\Generated_Source\PSoC4/USBFS_episr.c ****                             USBFS_LoadNextInEP(ep, 1u);
1473:.\Generated_Source\PSoC4/USBFS_episr.c **** 
1474:.\Generated_Source\PSoC4/USBFS_episr.c ****                             /* Set Data ready status to generate DMA request. */
1475:.\Generated_Source\PSoC4/USBFS_episr.c ****                             USBFS_ARB_EP_BASE.arbEp[ep].epCfg |= USBFS_ARB_EPX_CFG_IN_DATA_RDY;
1476:.\Generated_Source\PSoC4/USBFS_episr.c ****                         }
1477:.\Generated_Source\PSoC4/USBFS_episr.c ****                     }
1478:.\Generated_Source\PSoC4/USBFS_episr.c **** 
1479:.\Generated_Source\PSoC4/USBFS_episr.c ****                     ep++;
1480:.\Generated_Source\PSoC4/USBFS_episr.c ****                     int17Status >>= 1u;
1481:.\Generated_Source\PSoC4/USBFS_episr.c ****                 }
1482:.\Generated_Source\PSoC4/USBFS_episr.c **** 
1483:.\Generated_Source\PSoC4/USBFS_episr.c ****                 int8Status >>= 1u;
1484:.\Generated_Source\PSoC4/USBFS_episr.c **** 
1485:.\Generated_Source\PSoC4/USBFS_episr.c ****                 if (int8Status != 0u)
1486:.\Generated_Source\PSoC4/USBFS_episr.c ****                 {
ARM GAS  C:\Users\LAIR\AppData\Local\Temp\ccb9lIqg.s 			page 32


1487:.\Generated_Source\PSoC4/USBFS_episr.c ****                     /* Prepare pointer for EP8. */
1488:.\Generated_Source\PSoC4/USBFS_episr.c ****                     ep = USBFS_EP8;
1489:.\Generated_Source\PSoC4/USBFS_episr.c ****                     int17Status = int8Status & 0x01u;
1490:.\Generated_Source\PSoC4/USBFS_episr.c ****                 }
1491:.\Generated_Source\PSoC4/USBFS_episr.c ****             }
1492:.\Generated_Source\PSoC4/USBFS_episr.c **** 
1493:.\Generated_Source\PSoC4/USBFS_episr.c ****             /* `#START EP_DMA_DONE_END_USER_CODE` Place your code here */
1494:.\Generated_Source\PSoC4/USBFS_episr.c **** 
1495:.\Generated_Source\PSoC4/USBFS_episr.c ****             /* `#END` */
1496:.\Generated_Source\PSoC4/USBFS_episr.c **** 
1497:.\Generated_Source\PSoC4/USBFS_episr.c ****     #ifdef USBFS_EP_DMA_DONE_ISR_EXIT_CALLBACK
1498:.\Generated_Source\PSoC4/USBFS_episr.c ****         USBFS_EP_DMA_DONE_ISR_ExitCallback();
1499:.\Generated_Source\PSoC4/USBFS_episr.c ****     #endif /* (USBFS_EP_DMA_DONE_ISR_EXIT_CALLBACK) */
1500:.\Generated_Source\PSoC4/USBFS_episr.c ****         }
1501:.\Generated_Source\PSoC4/USBFS_episr.c ****     #endif /* (USBFS_EP_DMA_AUTO_OPT == 0u) */
1502:.\Generated_Source\PSoC4/USBFS_episr.c **** #endif /* (CY_PSOC4) */
1503:.\Generated_Source\PSoC4/USBFS_episr.c **** #endif /* (USBFS_EP_MANAGEMENT_DMA_AUTO) */
1504:.\Generated_Source\PSoC4/USBFS_episr.c **** 
1505:.\Generated_Source\PSoC4/USBFS_episr.c **** 
1506:.\Generated_Source\PSoC4/USBFS_episr.c **** #if (CY_PSOC4)
1507:.\Generated_Source\PSoC4/USBFS_episr.c ****     /***************************************************************************
1508:.\Generated_Source\PSoC4/USBFS_episr.c ****     * Function Name: USBFS_IntrHandler
1509:.\Generated_Source\PSoC4/USBFS_episr.c ****     ************************************************************************//**
1510:.\Generated_Source\PSoC4/USBFS_episr.c ****     *
1511:.\Generated_Source\PSoC4/USBFS_episr.c ****     *   Interrupt handler for Hi/Mid/Low ISRs.
1512:.\Generated_Source\PSoC4/USBFS_episr.c ****     *
1513:.\Generated_Source\PSoC4/USBFS_episr.c ****     *  regCause - The cause register of interrupt. One of the three variants:
1514:.\Generated_Source\PSoC4/USBFS_episr.c ****     *       USBFS_INTR_CAUSE_LO_REG - Low interrupts.
1515:.\Generated_Source\PSoC4/USBFS_episr.c ****     *       USBFS_INTR_CAUSE_MED_REG - Med interrupts.
1516:.\Generated_Source\PSoC4/USBFS_episr.c ****     *       USBFS_INTR_CAUSE_HI_REG - - High interrupts.
1517:.\Generated_Source\PSoC4/USBFS_episr.c ****     *
1518:.\Generated_Source\PSoC4/USBFS_episr.c ****     *
1519:.\Generated_Source\PSoC4/USBFS_episr.c ****     ***************************************************************************/
1520:.\Generated_Source\PSoC4/USBFS_episr.c ****     CY_INLINE static void USBFS_IntrHandler(uint32 intrCause)
1521:.\Generated_Source\PSoC4/USBFS_episr.c ****     {
1522:.\Generated_Source\PSoC4/USBFS_episr.c ****         /* Array of pointers to component interrupt handlers. */
1523:.\Generated_Source\PSoC4/USBFS_episr.c ****         static const cyisraddress USBFS_isrCallbacks[] =
1524:.\Generated_Source\PSoC4/USBFS_episr.c ****         {
1525:.\Generated_Source\PSoC4/USBFS_episr.c ****             NULL,
1526:.\Generated_Source\PSoC4/USBFS_episr.c ****             &USBFS_BUS_RESET_ISR,
1527:.\Generated_Source\PSoC4/USBFS_episr.c ****             &USBFS_EP_0_ISR,
1528:.\Generated_Source\PSoC4/USBFS_episr.c ****             NULL,
1529:.\Generated_Source\PSoC4/USBFS_episr.c ****             &USBFS_ARB_ISR,
1530:.\Generated_Source\PSoC4/USBFS_episr.c ****             &USBFS_EP_1_ISR,
1531:.\Generated_Source\PSoC4/USBFS_episr.c ****             &USBFS_EP_2_ISR,
1532:.\Generated_Source\PSoC4/USBFS_episr.c ****             NULL,
1533:.\Generated_Source\PSoC4/USBFS_episr.c ****             NULL,
1534:.\Generated_Source\PSoC4/USBFS_episr.c ****             NULL,
1535:.\Generated_Source\PSoC4/USBFS_episr.c ****             NULL,
1536:.\Generated_Source\PSoC4/USBFS_episr.c ****             NULL,
1537:.\Generated_Source\PSoC4/USBFS_episr.c ****             NULL,
1538:.\Generated_Source\PSoC4/USBFS_episr.c ****         };
1539:.\Generated_Source\PSoC4/USBFS_episr.c **** 
1540:.\Generated_Source\PSoC4/USBFS_episr.c ****         uint32 cbIdx = 0u;
1541:.\Generated_Source\PSoC4/USBFS_episr.c **** 
1542:.\Generated_Source\PSoC4/USBFS_episr.c ****         /* Check arbiter interrupt source first. */
1543:.\Generated_Source\PSoC4/USBFS_episr.c ****         if (0u != (intrCause & USBFS_INTR_CAUSE_ARB_INTR))
ARM GAS  C:\Users\LAIR\AppData\Local\Temp\ccb9lIqg.s 			page 33


1544:.\Generated_Source\PSoC4/USBFS_episr.c ****         {
1545:.\Generated_Source\PSoC4/USBFS_episr.c ****             USBFS_isrCallbacks[USBFS_ARB_EP_INTR_NUM]();
1546:.\Generated_Source\PSoC4/USBFS_episr.c ****         }
1547:.\Generated_Source\PSoC4/USBFS_episr.c **** 
1548:.\Generated_Source\PSoC4/USBFS_episr.c ****         /* Check all other interrupt sources (except arbiter and resume). */
1549:.\Generated_Source\PSoC4/USBFS_episr.c ****         intrCause = (intrCause  & USBFS_INTR_CAUSE_CTRL_INTR_MASK) |
1550:.\Generated_Source\PSoC4/USBFS_episr.c ****                     ((intrCause & USBFS_INTR_CAUSE_EP1_8_INTR_MASK) >>
1551:.\Generated_Source\PSoC4/USBFS_episr.c ****                                   USBFS_INTR_CAUSE_EP_INTR_SHIFT);
1552:.\Generated_Source\PSoC4/USBFS_episr.c **** 
1553:.\Generated_Source\PSoC4/USBFS_episr.c ****         /* Call interrupt handlers for active interrupt sources. */
1554:.\Generated_Source\PSoC4/USBFS_episr.c ****         while (0u != intrCause)
1555:.\Generated_Source\PSoC4/USBFS_episr.c ****         {
1556:.\Generated_Source\PSoC4/USBFS_episr.c ****             if (0u != (intrCause & 0x1u))
1557:.\Generated_Source\PSoC4/USBFS_episr.c ****             {
1558:.\Generated_Source\PSoC4/USBFS_episr.c ****                  USBFS_isrCallbacks[cbIdx]();
1559:.\Generated_Source\PSoC4/USBFS_episr.c ****             }
1560:.\Generated_Source\PSoC4/USBFS_episr.c **** 
1561:.\Generated_Source\PSoC4/USBFS_episr.c ****             intrCause >>= 1u;
1562:.\Generated_Source\PSoC4/USBFS_episr.c ****             ++cbIdx;
1563:.\Generated_Source\PSoC4/USBFS_episr.c ****         }
1564:.\Generated_Source\PSoC4/USBFS_episr.c ****     }
1565:.\Generated_Source\PSoC4/USBFS_episr.c **** 
1566:.\Generated_Source\PSoC4/USBFS_episr.c **** 
1567:.\Generated_Source\PSoC4/USBFS_episr.c ****     /***************************************************************************
1568:.\Generated_Source\PSoC4/USBFS_episr.c ****     * Function Name: USBFS_INTR_HI_ISR
1569:.\Generated_Source\PSoC4/USBFS_episr.c ****     ************************************************************************//**
1570:.\Generated_Source\PSoC4/USBFS_episr.c ****     *
1571:.\Generated_Source\PSoC4/USBFS_episr.c ****     *   Interrupt Service Routine for the high group of the interrupt sources.
1572:.\Generated_Source\PSoC4/USBFS_episr.c ****     *
1573:.\Generated_Source\PSoC4/USBFS_episr.c ****     *
1574:.\Generated_Source\PSoC4/USBFS_episr.c ****     ***************************************************************************/
1575:.\Generated_Source\PSoC4/USBFS_episr.c ****     CY_ISR(USBFS_INTR_HI_ISR)
1576:.\Generated_Source\PSoC4/USBFS_episr.c ****     {
 276              		.loc 1 1576 0
 277              		.cfi_startproc
 278 0000 38B5     		push	{r3, r4, r5, lr}
 279              		.cfi_def_cfa_offset 16
 280              		.cfi_offset 3, -16
 281              		.cfi_offset 4, -12
 282              		.cfi_offset 5, -8
 283              		.cfi_offset 14, -4
1577:.\Generated_Source\PSoC4/USBFS_episr.c ****         USBFS_IntrHandler(USBFS_INTR_CAUSE_HI_REG);
 284              		.loc 1 1577 0
 285 0002 0D4B     		ldr	r3, .L25
 286 0004 1D68     		ldr	r5, [r3]
 287              	.LVL8:
 288              	.LBB4:
 289              	.LBB5:
1543:.\Generated_Source\PSoC4/USBFS_episr.c ****         {
 290              		.loc 1 1543 0
 291 0006 2B06     		lsl	r3, r5, #24
 292 0008 01D5     		bpl	.L21
1545:.\Generated_Source\PSoC4/USBFS_episr.c ****         }
 293              		.loc 1 1545 0
 294 000a FFF7FEFF 		bl	USBFS_ARB_ISR
 295              	.LVL9:
 296              	.L21:
ARM GAS  C:\Users\LAIR\AppData\Local\Temp\ccb9lIqg.s 			page 34


1549:.\Generated_Source\PSoC4/USBFS_episr.c ****                     ((intrCause & USBFS_INTR_CAUSE_EP1_8_INTR_MASK) >>
 297              		.loc 1 1549 0
 298 000e 0F24     		mov	r4, #15
 299 0010 2C40     		and	r4, r5
1550:.\Generated_Source\PSoC4/USBFS_episr.c ****                                   USBFS_INTR_CAUSE_EP_INTR_SHIFT);
 300              		.loc 1 1550 0
 301 0012 FF23     		mov	r3, #255
 302 0014 1B02     		lsl	r3, r3, #8
 303 0016 2B40     		and	r3, r5
 304 0018 DB08     		lsr	r3, r3, #3
1549:.\Generated_Source\PSoC4/USBFS_episr.c ****                     ((intrCause & USBFS_INTR_CAUSE_EP1_8_INTR_MASK) >>
 305              		.loc 1 1549 0
 306 001a 1C43     		orr	r4, r3
 307              	.LVL10:
1540:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 308              		.loc 1 1540 0
 309 001c 0025     		mov	r5, #0
 310 001e 07E0     		b	.L22
 311              	.LVL11:
 312              	.L24:
1556:.\Generated_Source\PSoC4/USBFS_episr.c ****             {
 313              		.loc 1 1556 0
 314 0020 E307     		lsl	r3, r4, #31
 315 0022 03D5     		bpl	.L23
1558:.\Generated_Source\PSoC4/USBFS_episr.c ****             }
 316              		.loc 1 1558 0
 317 0024 AB00     		lsl	r3, r5, #2
 318 0026 054A     		ldr	r2, .L25+4
 319 0028 9B58     		ldr	r3, [r3, r2]
 320 002a 9847     		blx	r3
 321              	.LVL12:
 322              	.L23:
1561:.\Generated_Source\PSoC4/USBFS_episr.c ****             ++cbIdx;
 323              		.loc 1 1561 0
 324 002c 6408     		lsr	r4, r4, #1
 325              	.LVL13:
1562:.\Generated_Source\PSoC4/USBFS_episr.c ****         }
 326              		.loc 1 1562 0
 327 002e 0135     		add	r5, r5, #1
 328              	.LVL14:
 329              	.L22:
1554:.\Generated_Source\PSoC4/USBFS_episr.c ****         {
 330              		.loc 1 1554 0
 331 0030 002C     		cmp	r4, #0
 332 0032 F5D1     		bne	.L24
 333              	.LBE5:
 334              	.LBE4:
1578:.\Generated_Source\PSoC4/USBFS_episr.c ****     }
 335              		.loc 1 1578 0
 336              		@ sp needed
 337              	.LVL15:
 338              	.LVL16:
 339 0034 38BD     		pop	{r3, r4, r5, pc}
 340              	.L26:
 341 0036 C046     		.align	2
 342              	.L25:
 343 0038 34202C40 		.word	1076633652
ARM GAS  C:\Users\LAIR\AppData\Local\Temp\ccb9lIqg.s 			page 35


 344 003c 00000000 		.word	.LANCHOR0
 345              		.cfi_endproc
 346              	.LFE70:
 347              		.size	USBFS_INTR_HI_ISR, .-USBFS_INTR_HI_ISR
 348              		.section	.text.USBFS_INTR_MED_ISR,"ax",%progbits
 349              		.align	2
 350              		.global	USBFS_INTR_MED_ISR
 351              		.code	16
 352              		.thumb_func
 353              		.type	USBFS_INTR_MED_ISR, %function
 354              	USBFS_INTR_MED_ISR:
 355              	.LFB71:
1579:.\Generated_Source\PSoC4/USBFS_episr.c **** 
1580:.\Generated_Source\PSoC4/USBFS_episr.c ****     /***************************************************************************
1581:.\Generated_Source\PSoC4/USBFS_episr.c ****     * Function Name: USBFS_INTR_MED_ISR
1582:.\Generated_Source\PSoC4/USBFS_episr.c ****     ************************************************************************//**
1583:.\Generated_Source\PSoC4/USBFS_episr.c ****     *
1584:.\Generated_Source\PSoC4/USBFS_episr.c ****     *   Interrupt Service Routine for the medium group of the interrupt sources.
1585:.\Generated_Source\PSoC4/USBFS_episr.c ****     *
1586:.\Generated_Source\PSoC4/USBFS_episr.c ****     *
1587:.\Generated_Source\PSoC4/USBFS_episr.c ****     ***************************************************************************/
1588:.\Generated_Source\PSoC4/USBFS_episr.c ****     CY_ISR(USBFS_INTR_MED_ISR)
1589:.\Generated_Source\PSoC4/USBFS_episr.c ****     {
 356              		.loc 1 1589 0
 357              		.cfi_startproc
 358 0000 38B5     		push	{r3, r4, r5, lr}
 359              		.cfi_def_cfa_offset 16
 360              		.cfi_offset 3, -16
 361              		.cfi_offset 4, -12
 362              		.cfi_offset 5, -8
 363              		.cfi_offset 14, -4
1590:.\Generated_Source\PSoC4/USBFS_episr.c ****        USBFS_IntrHandler(USBFS_INTR_CAUSE_MED_REG);
 364              		.loc 1 1590 0
 365 0002 0D4B     		ldr	r3, .L32
 366 0004 1D68     		ldr	r5, [r3]
 367              	.LVL17:
 368              	.LBB8:
 369              	.LBB9:
1543:.\Generated_Source\PSoC4/USBFS_episr.c ****         {
 370              		.loc 1 1543 0
 371 0006 2B06     		lsl	r3, r5, #24
 372 0008 01D5     		bpl	.L28
1545:.\Generated_Source\PSoC4/USBFS_episr.c ****         }
 373              		.loc 1 1545 0
 374 000a FFF7FEFF 		bl	USBFS_ARB_ISR
 375              	.LVL18:
 376              	.L28:
1549:.\Generated_Source\PSoC4/USBFS_episr.c ****                     ((intrCause & USBFS_INTR_CAUSE_EP1_8_INTR_MASK) >>
 377              		.loc 1 1549 0
 378 000e 0F24     		mov	r4, #15
 379 0010 2C40     		and	r4, r5
1550:.\Generated_Source\PSoC4/USBFS_episr.c ****                                   USBFS_INTR_CAUSE_EP_INTR_SHIFT);
 380              		.loc 1 1550 0
 381 0012 FF23     		mov	r3, #255
 382 0014 1B02     		lsl	r3, r3, #8
 383 0016 2B40     		and	r3, r5
 384 0018 DB08     		lsr	r3, r3, #3
ARM GAS  C:\Users\LAIR\AppData\Local\Temp\ccb9lIqg.s 			page 36


1549:.\Generated_Source\PSoC4/USBFS_episr.c ****                     ((intrCause & USBFS_INTR_CAUSE_EP1_8_INTR_MASK) >>
 385              		.loc 1 1549 0
 386 001a 1C43     		orr	r4, r3
 387              	.LVL19:
1540:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 388              		.loc 1 1540 0
 389 001c 0025     		mov	r5, #0
 390 001e 07E0     		b	.L29
 391              	.LVL20:
 392              	.L31:
1556:.\Generated_Source\PSoC4/USBFS_episr.c ****             {
 393              		.loc 1 1556 0
 394 0020 E307     		lsl	r3, r4, #31
 395 0022 03D5     		bpl	.L30
1558:.\Generated_Source\PSoC4/USBFS_episr.c ****             }
 396              		.loc 1 1558 0
 397 0024 AB00     		lsl	r3, r5, #2
 398 0026 054A     		ldr	r2, .L32+4
 399 0028 9B58     		ldr	r3, [r3, r2]
 400 002a 9847     		blx	r3
 401              	.LVL21:
 402              	.L30:
1561:.\Generated_Source\PSoC4/USBFS_episr.c ****             ++cbIdx;
 403              		.loc 1 1561 0
 404 002c 6408     		lsr	r4, r4, #1
 405              	.LVL22:
1562:.\Generated_Source\PSoC4/USBFS_episr.c ****         }
 406              		.loc 1 1562 0
 407 002e 0135     		add	r5, r5, #1
 408              	.LVL23:
 409              	.L29:
1554:.\Generated_Source\PSoC4/USBFS_episr.c ****         {
 410              		.loc 1 1554 0
 411 0030 002C     		cmp	r4, #0
 412 0032 F5D1     		bne	.L31
 413              	.LBE9:
 414              	.LBE8:
1591:.\Generated_Source\PSoC4/USBFS_episr.c ****     }
 415              		.loc 1 1591 0
 416              		@ sp needed
 417              	.LVL24:
 418              	.LVL25:
 419 0034 38BD     		pop	{r3, r4, r5, pc}
 420              	.L33:
 421 0036 C046     		.align	2
 422              	.L32:
 423 0038 38202C40 		.word	1076633656
 424 003c 00000000 		.word	.LANCHOR0
 425              		.cfi_endproc
 426              	.LFE71:
 427              		.size	USBFS_INTR_MED_ISR, .-USBFS_INTR_MED_ISR
 428              		.section	.text.USBFS_INTR_LO_ISR,"ax",%progbits
 429              		.align	2
 430              		.global	USBFS_INTR_LO_ISR
 431              		.code	16
 432              		.thumb_func
 433              		.type	USBFS_INTR_LO_ISR, %function
ARM GAS  C:\Users\LAIR\AppData\Local\Temp\ccb9lIqg.s 			page 37


 434              	USBFS_INTR_LO_ISR:
 435              	.LFB72:
1592:.\Generated_Source\PSoC4/USBFS_episr.c **** 
1593:.\Generated_Source\PSoC4/USBFS_episr.c ****     /***************************************************************************
1594:.\Generated_Source\PSoC4/USBFS_episr.c ****     * Function Name: USBFS_INTR_LO_ISR
1595:.\Generated_Source\PSoC4/USBFS_episr.c ****     ************************************************************************//**
1596:.\Generated_Source\PSoC4/USBFS_episr.c ****     *
1597:.\Generated_Source\PSoC4/USBFS_episr.c ****     *   Interrupt Service Routine for the low group of the interrupt sources.
1598:.\Generated_Source\PSoC4/USBFS_episr.c ****     *
1599:.\Generated_Source\PSoC4/USBFS_episr.c ****     *
1600:.\Generated_Source\PSoC4/USBFS_episr.c ****     ***************************************************************************/
1601:.\Generated_Source\PSoC4/USBFS_episr.c ****     CY_ISR(USBFS_INTR_LO_ISR)
1602:.\Generated_Source\PSoC4/USBFS_episr.c ****     {
 436              		.loc 1 1602 0
 437              		.cfi_startproc
 438 0000 38B5     		push	{r3, r4, r5, lr}
 439              		.cfi_def_cfa_offset 16
 440              		.cfi_offset 3, -16
 441              		.cfi_offset 4, -12
 442              		.cfi_offset 5, -8
 443              		.cfi_offset 14, -4
1603:.\Generated_Source\PSoC4/USBFS_episr.c ****         USBFS_IntrHandler(USBFS_INTR_CAUSE_LO_REG);
 444              		.loc 1 1603 0
 445 0002 0D4B     		ldr	r3, .L39
 446 0004 1D68     		ldr	r5, [r3]
 447              	.LVL26:
 448              	.LBB12:
 449              	.LBB13:
1543:.\Generated_Source\PSoC4/USBFS_episr.c ****         {
 450              		.loc 1 1543 0
 451 0006 2B06     		lsl	r3, r5, #24
 452 0008 01D5     		bpl	.L35
1545:.\Generated_Source\PSoC4/USBFS_episr.c ****         }
 453              		.loc 1 1545 0
 454 000a FFF7FEFF 		bl	USBFS_ARB_ISR
 455              	.LVL27:
 456              	.L35:
1549:.\Generated_Source\PSoC4/USBFS_episr.c ****                     ((intrCause & USBFS_INTR_CAUSE_EP1_8_INTR_MASK) >>
 457              		.loc 1 1549 0
 458 000e 0F24     		mov	r4, #15
 459 0010 2C40     		and	r4, r5
1550:.\Generated_Source\PSoC4/USBFS_episr.c ****                                   USBFS_INTR_CAUSE_EP_INTR_SHIFT);
 460              		.loc 1 1550 0
 461 0012 FF23     		mov	r3, #255
 462 0014 1B02     		lsl	r3, r3, #8
 463 0016 2B40     		and	r3, r5
 464 0018 DB08     		lsr	r3, r3, #3
1549:.\Generated_Source\PSoC4/USBFS_episr.c ****                     ((intrCause & USBFS_INTR_CAUSE_EP1_8_INTR_MASK) >>
 465              		.loc 1 1549 0
 466 001a 1C43     		orr	r4, r3
 467              	.LVL28:
1540:.\Generated_Source\PSoC4/USBFS_episr.c **** 
 468              		.loc 1 1540 0
 469 001c 0025     		mov	r5, #0
 470 001e 07E0     		b	.L36
 471              	.LVL29:
 472              	.L38:
ARM GAS  C:\Users\LAIR\AppData\Local\Temp\ccb9lIqg.s 			page 38


1556:.\Generated_Source\PSoC4/USBFS_episr.c ****             {
 473              		.loc 1 1556 0
 474 0020 E307     		lsl	r3, r4, #31
 475 0022 03D5     		bpl	.L37
1558:.\Generated_Source\PSoC4/USBFS_episr.c ****             }
 476              		.loc 1 1558 0
 477 0024 AB00     		lsl	r3, r5, #2
 478 0026 054A     		ldr	r2, .L39+4
 479 0028 9B58     		ldr	r3, [r3, r2]
 480 002a 9847     		blx	r3
 481              	.LVL30:
 482              	.L37:
1561:.\Generated_Source\PSoC4/USBFS_episr.c ****             ++cbIdx;
 483              		.loc 1 1561 0
 484 002c 6408     		lsr	r4, r4, #1
 485              	.LVL31:
1562:.\Generated_Source\PSoC4/USBFS_episr.c ****         }
 486              		.loc 1 1562 0
 487 002e 0135     		add	r5, r5, #1
 488              	.LVL32:
 489              	.L36:
1554:.\Generated_Source\PSoC4/USBFS_episr.c ****         {
 490              		.loc 1 1554 0
 491 0030 002C     		cmp	r4, #0
 492 0032 F5D1     		bne	.L38
 493              	.LBE13:
 494              	.LBE12:
1604:.\Generated_Source\PSoC4/USBFS_episr.c ****     }
 495              		.loc 1 1604 0
 496              		@ sp needed
 497              	.LVL33:
 498              	.LVL34:
 499 0034 38BD     		pop	{r3, r4, r5, pc}
 500              	.L40:
 501 0036 C046     		.align	2
 502              	.L39:
 503 0038 3C202C40 		.word	1076633660
 504 003c 00000000 		.word	.LANCHOR0
 505              		.cfi_endproc
 506              	.LFE72:
 507              		.size	USBFS_INTR_LO_ISR, .-USBFS_INTR_LO_ISR
 508              		.section	.rodata
 509              		.align	2
 510              		.set	.LANCHOR0,. + 0
 511              		.type	USBFS_isrCallbacks.5594, %object
 512              		.size	USBFS_isrCallbacks.5594, 52
 513              	USBFS_isrCallbacks.5594:
 514 0000 00000000 		.word	0
 515 0004 00000000 		.word	USBFS_BUS_RESET_ISR
 516 0008 00000000 		.word	USBFS_EP_0_ISR
 517 000c 00000000 		.word	0
 518 0010 00000000 		.word	USBFS_ARB_ISR
 519 0014 00000000 		.word	USBFS_EP_1_ISR
 520 0018 00000000 		.word	USBFS_EP_2_ISR
 521 001c 00000000 		.word	0
 522 0020 00000000 		.word	0
 523 0024 00000000 		.word	0
ARM GAS  C:\Users\LAIR\AppData\Local\Temp\ccb9lIqg.s 			page 39


 524 0028 00000000 		.word	0
 525 002c 00000000 		.word	0
 526 0030 00000000 		.word	0
 527              		.text
 528              	.Letext0:
 529              		.file 2 ".\\Generated_Source\\PSoC4\\cytypes.h"
 530              		.file 3 ".\\Generated_Source\\PSoC4\\USBFS.h"
 531              		.file 4 ".\\Generated_Source\\PSoC4\\USBFS_pvt.h"
 532              		.section	.debug_info,"",%progbits
 533              	.Ldebug_info0:
 534 0000 D3040000 		.4byte	0x4d3
 535 0004 0400     		.2byte	0x4
 536 0006 00000000 		.4byte	.Ldebug_abbrev0
 537 000a 04       		.byte	0x4
 538 000b 01       		.uleb128 0x1
 539 000c D5010000 		.4byte	.LASF57
 540 0010 01       		.byte	0x1
 541 0011 32010000 		.4byte	.LASF58
 542 0015 77020000 		.4byte	.LASF59
 543 0019 00000000 		.4byte	.Ldebug_ranges0+0
 544 001d 00000000 		.4byte	0
 545 0021 00000000 		.4byte	.Ldebug_line0
 546 0025 02       		.uleb128 0x2
 547 0026 01       		.byte	0x1
 548 0027 06       		.byte	0x6
 549 0028 67000000 		.4byte	.LASF0
 550 002c 02       		.uleb128 0x2
 551 002d 01       		.byte	0x1
 552 002e 08       		.byte	0x8
 553 002f E8020000 		.4byte	.LASF1
 554 0033 02       		.uleb128 0x2
 555 0034 02       		.byte	0x2
 556 0035 05       		.byte	0x5
 557 0036 F6020000 		.4byte	.LASF2
 558 003a 02       		.uleb128 0x2
 559 003b 02       		.byte	0x2
 560 003c 07       		.byte	0x7
 561 003d 1F010000 		.4byte	.LASF3
 562 0041 02       		.uleb128 0x2
 563 0042 04       		.byte	0x4
 564 0043 05       		.byte	0x5
 565 0044 99000000 		.4byte	.LASF4
 566 0048 02       		.uleb128 0x2
 567 0049 04       		.byte	0x4
 568 004a 07       		.byte	0x7
 569 004b 0D010000 		.4byte	.LASF5
 570 004f 02       		.uleb128 0x2
 571 0050 08       		.byte	0x8
 572 0051 05       		.byte	0x5
 573 0052 59000000 		.4byte	.LASF6
 574 0056 02       		.uleb128 0x2
 575 0057 08       		.byte	0x8
 576 0058 07       		.byte	0x7
 577 0059 0D000000 		.4byte	.LASF7
 578 005d 03       		.uleb128 0x3
 579 005e 04       		.byte	0x4
 580 005f 05       		.byte	0x5
ARM GAS  C:\Users\LAIR\AppData\Local\Temp\ccb9lIqg.s 			page 40


 581 0060 696E7400 		.ascii	"int\000"
 582 0064 02       		.uleb128 0x2
 583 0065 04       		.byte	0x4
 584 0066 07       		.byte	0x7
 585 0067 00010000 		.4byte	.LASF8
 586 006b 04       		.uleb128 0x4
 587 006c A2000000 		.4byte	.LASF9
 588 0070 02       		.byte	0x2
 589 0071 9801     		.2byte	0x198
 590 0073 2C000000 		.4byte	0x2c
 591 0077 04       		.uleb128 0x4
 592 0078 00000000 		.4byte	.LASF10
 593 007c 02       		.byte	0x2
 594 007d 9901     		.2byte	0x199
 595 007f 3A000000 		.4byte	0x3a
 596 0083 04       		.uleb128 0x4
 597 0084 E9000000 		.4byte	.LASF11
 598 0088 02       		.byte	0x2
 599 0089 9A01     		.2byte	0x19a
 600 008b 48000000 		.4byte	0x48
 601 008f 02       		.uleb128 0x2
 602 0090 04       		.byte	0x4
 603 0091 04       		.byte	0x4
 604 0092 BF020000 		.4byte	.LASF12
 605 0096 02       		.uleb128 0x2
 606 0097 08       		.byte	0x8
 607 0098 04       		.byte	0x4
 608 0099 B6000000 		.4byte	.LASF13
 609 009d 02       		.uleb128 0x2
 610 009e 01       		.byte	0x1
 611 009f 08       		.byte	0x8
 612 00a0 4E030000 		.4byte	.LASF14
 613 00a4 04       		.uleb128 0x4
 614 00a5 87010000 		.4byte	.LASF15
 615 00a9 02       		.byte	0x2
 616 00aa 4402     		.2byte	0x244
 617 00ac B0000000 		.4byte	0xb0
 618 00b0 05       		.uleb128 0x5
 619 00b1 83000000 		.4byte	0x83
 620 00b5 04       		.uleb128 0x4
 621 00b6 53030000 		.4byte	.LASF16
 622 00ba 02       		.byte	0x2
 623 00bb 5402     		.2byte	0x254
 624 00bd C1000000 		.4byte	0xc1
 625 00c1 06       		.uleb128 0x6
 626 00c2 04       		.byte	0x4
 627 00c3 C7000000 		.4byte	0xc7
 628 00c7 07       		.uleb128 0x7
 629 00c8 02       		.uleb128 0x2
 630 00c9 04       		.byte	0x4
 631 00ca 07       		.byte	0x7
 632 00cb 97010000 		.4byte	.LASF17
 633 00cf 08       		.uleb128 0x8
 634 00d0 0C       		.byte	0xc
 635 00d1 03       		.byte	0x3
 636 00d2 8E       		.byte	0x8e
 637 00d3 44010000 		.4byte	0x144
ARM GAS  C:\Users\LAIR\AppData\Local\Temp\ccb9lIqg.s 			page 41


 638 00d7 09       		.uleb128 0x9
 639 00d8 B4010000 		.4byte	.LASF18
 640 00dc 03       		.byte	0x3
 641 00dd 90       		.byte	0x90
 642 00de 6B000000 		.4byte	0x6b
 643 00e2 00       		.byte	0
 644 00e3 09       		.uleb128 0x9
 645 00e4 D4020000 		.4byte	.LASF19
 646 00e8 03       		.byte	0x3
 647 00e9 91       		.byte	0x91
 648 00ea 6B000000 		.4byte	0x6b
 649 00ee 01       		.byte	0x1
 650 00ef 09       		.uleb128 0x9
 651 00f0 8D010000 		.4byte	.LASF20
 652 00f4 03       		.byte	0x3
 653 00f5 92       		.byte	0x92
 654 00f6 6B000000 		.4byte	0x6b
 655 00fa 02       		.byte	0x2
 656 00fb 09       		.uleb128 0x9
 657 00fc A8000000 		.4byte	.LASF21
 658 0100 03       		.byte	0x3
 659 0101 93       		.byte	0x93
 660 0102 6B000000 		.4byte	0x6b
 661 0106 03       		.byte	0x3
 662 0107 09       		.uleb128 0x9
 663 0108 24000000 		.4byte	.LASF22
 664 010c 03       		.byte	0x3
 665 010d 94       		.byte	0x94
 666 010e 6B000000 		.4byte	0x6b
 667 0112 04       		.byte	0x4
 668 0113 09       		.uleb128 0x9
 669 0114 F0000000 		.4byte	.LASF23
 670 0118 03       		.byte	0x3
 671 0119 95       		.byte	0x95
 672 011a 6B000000 		.4byte	0x6b
 673 011e 05       		.byte	0x5
 674 011f 09       		.uleb128 0x9
 675 0120 74030000 		.4byte	.LASF24
 676 0124 03       		.byte	0x3
 677 0125 96       		.byte	0x96
 678 0126 77000000 		.4byte	0x77
 679 012a 06       		.byte	0x6
 680 012b 09       		.uleb128 0x9
 681 012c 69030000 		.4byte	.LASF25
 682 0130 03       		.byte	0x3
 683 0131 97       		.byte	0x97
 684 0132 77000000 		.4byte	0x77
 685 0136 08       		.byte	0x8
 686 0137 09       		.uleb128 0x9
 687 0138 7D010000 		.4byte	.LASF26
 688 013c 03       		.byte	0x3
 689 013d 98       		.byte	0x98
 690 013e 6B000000 		.4byte	0x6b
 691 0142 0A       		.byte	0xa
 692 0143 00       		.byte	0
 693 0144 0A       		.uleb128 0xa
 694 0145 14030000 		.4byte	.LASF27
ARM GAS  C:\Users\LAIR\AppData\Local\Temp\ccb9lIqg.s 			page 42


 695 0149 03       		.byte	0x3
 696 014a 99       		.byte	0x99
 697 014b CF000000 		.4byte	0xcf
 698 014f 08       		.uleb128 0x8
 699 0150 40       		.byte	0x40
 700 0151 03       		.byte	0x3
 701 0152 D5       		.byte	0xd5
 702 0153 88010000 		.4byte	0x188
 703 0157 09       		.uleb128 0x9
 704 0158 63020000 		.4byte	.LASF28
 705 015c 03       		.byte	0x3
 706 015d D7       		.byte	0xd7
 707 015e 83000000 		.4byte	0x83
 708 0162 00       		.byte	0
 709 0163 09       		.uleb128 0x9
 710 0164 6A020000 		.4byte	.LASF29
 711 0168 03       		.byte	0x3
 712 0169 D8       		.byte	0xd8
 713 016a 83000000 		.4byte	0x83
 714 016e 04       		.byte	0x4
 715 016f 09       		.uleb128 0x9
 716 0170 71020000 		.4byte	.LASF30
 717 0174 03       		.byte	0x3
 718 0175 D9       		.byte	0xd9
 719 0176 83000000 		.4byte	0x83
 720 017a 08       		.byte	0x8
 721 017b 0B       		.uleb128 0xb
 722 017c 67617000 		.ascii	"gap\000"
 723 0180 03       		.byte	0x3
 724 0181 DA       		.byte	0xda
 725 0182 88010000 		.4byte	0x188
 726 0186 0C       		.byte	0xc
 727 0187 00       		.byte	0
 728 0188 0C       		.uleb128 0xc
 729 0189 83000000 		.4byte	0x83
 730 018d 98010000 		.4byte	0x198
 731 0191 0D       		.uleb128 0xd
 732 0192 C8000000 		.4byte	0xc8
 733 0196 0C       		.byte	0xc
 734 0197 00       		.byte	0
 735 0198 0A       		.uleb128 0xa
 736 0199 59010000 		.4byte	.LASF31
 737 019d 03       		.byte	0x3
 738 019e DB       		.byte	0xdb
 739 019f 4F010000 		.4byte	0x14f
 740 01a3 08       		.uleb128 0x8
 741 01a4 40       		.byte	0x40
 742 01a5 03       		.byte	0x3
 743 01a6 E7       		.byte	0xe7
 744 01a7 24020000 		.4byte	0x224
 745 01ab 09       		.uleb128 0x9
 746 01ac 29000000 		.4byte	.LASF32
 747 01b0 03       		.byte	0x3
 748 01b1 E9       		.byte	0xe9
 749 01b2 83000000 		.4byte	0x83
 750 01b6 00       		.byte	0
 751 01b7 09       		.uleb128 0x9
ARM GAS  C:\Users\LAIR\AppData\Local\Temp\ccb9lIqg.s 			page 43


 752 01b8 A2030000 		.4byte	.LASF33
 753 01bc 03       		.byte	0x3
 754 01bd EA       		.byte	0xea
 755 01be 83000000 		.4byte	0x83
 756 01c2 04       		.byte	0x4
 757 01c3 09       		.uleb128 0x9
 758 01c4 BD000000 		.4byte	.LASF34
 759 01c8 03       		.byte	0x3
 760 01c9 EB       		.byte	0xeb
 761 01ca 83000000 		.4byte	0x83
 762 01ce 08       		.byte	0x8
 763 01cf 09       		.uleb128 0x9
 764 01d0 F7000000 		.4byte	.LASF35
 765 01d4 03       		.byte	0x3
 766 01d5 EC       		.byte	0xec
 767 01d6 83000000 		.4byte	0x83
 768 01da 0C       		.byte	0xc
 769 01db 09       		.uleb128 0x9
 770 01dc B1000000 		.4byte	.LASF36
 771 01e0 03       		.byte	0x3
 772 01e1 ED       		.byte	0xed
 773 01e2 83000000 		.4byte	0x83
 774 01e6 10       		.byte	0x10
 775 01e7 09       		.uleb128 0x9
 776 01e8 9A030000 		.4byte	.LASF37
 777 01ec 03       		.byte	0x3
 778 01ed EE       		.byte	0xee
 779 01ee 83000000 		.4byte	0x83
 780 01f2 14       		.byte	0x14
 781 01f3 09       		.uleb128 0x9
 782 01f4 0F030000 		.4byte	.LASF38
 783 01f8 03       		.byte	0x3
 784 01f9 EF       		.byte	0xef
 785 01fa 83000000 		.4byte	0x83
 786 01fe 18       		.byte	0x18
 787 01ff 09       		.uleb128 0x9
 788 0200 CD010000 		.4byte	.LASF39
 789 0204 03       		.byte	0x3
 790 0205 F0       		.byte	0xf0
 791 0206 83000000 		.4byte	0x83
 792 020a 1C       		.byte	0x1c
 793 020b 09       		.uleb128 0x9
 794 020c 95030000 		.4byte	.LASF40
 795 0210 03       		.byte	0x3
 796 0211 F1       		.byte	0xf1
 797 0212 83000000 		.4byte	0x83
 798 0216 20       		.byte	0x20
 799 0217 0B       		.uleb128 0xb
 800 0218 67617000 		.ascii	"gap\000"
 801 021c 03       		.byte	0x3
 802 021d F2       		.byte	0xf2
 803 021e 24020000 		.4byte	0x224
 804 0222 24       		.byte	0x24
 805 0223 00       		.byte	0
 806 0224 0C       		.uleb128 0xc
 807 0225 83000000 		.4byte	0x83
 808 0229 34020000 		.4byte	0x234
ARM GAS  C:\Users\LAIR\AppData\Local\Temp\ccb9lIqg.s 			page 44


 809 022d 0D       		.uleb128 0xd
 810 022e C8000000 		.4byte	0xc8
 811 0232 06       		.byte	0x6
 812 0233 00       		.byte	0
 813 0234 0A       		.uleb128 0xa
 814 0235 85000000 		.4byte	.LASF41
 815 0239 03       		.byte	0x3
 816 023a F3       		.byte	0xf3
 817 023b A3010000 		.4byte	0x1a3
 818 023f 0E       		.uleb128 0xe
 819 0240 4002     		.2byte	0x240
 820 0242 03       		.byte	0x3
 821 0243 0F01     		.2byte	0x10f
 822 0245 57020000 		.4byte	0x257
 823 0249 0F       		.uleb128 0xf
 824 024a A0010000 		.4byte	.LASF42
 825 024e 03       		.byte	0x3
 826 024f 1101     		.2byte	0x111
 827 0251 57020000 		.4byte	0x257
 828 0255 00       		.byte	0
 829 0256 00       		.byte	0
 830 0257 0C       		.uleb128 0xc
 831 0258 98010000 		.4byte	0x198
 832 025c 67020000 		.4byte	0x267
 833 0260 0D       		.uleb128 0xd
 834 0261 C8000000 		.4byte	0xc8
 835 0265 08       		.byte	0x8
 836 0266 00       		.byte	0
 837 0267 04       		.uleb128 0x4
 838 0268 2F000000 		.4byte	.LASF43
 839 026c 03       		.byte	0x3
 840 026d 1201     		.2byte	0x112
 841 026f 3F020000 		.4byte	0x23f
 842 0273 0E       		.uleb128 0xe
 843 0274 4002     		.2byte	0x240
 844 0276 03       		.byte	0x3
 845 0277 1501     		.2byte	0x115
 846 0279 8B020000 		.4byte	0x28b
 847 027d 0F       		.uleb128 0xf
 848 027e 77010000 		.4byte	.LASF44
 849 0282 03       		.byte	0x3
 850 0283 1701     		.2byte	0x117
 851 0285 8B020000 		.4byte	0x28b
 852 0289 00       		.byte	0
 853 028a 00       		.byte	0
 854 028b 0C       		.uleb128 0xc
 855 028c 34020000 		.4byte	0x234
 856 0290 9B020000 		.4byte	0x29b
 857 0294 0D       		.uleb128 0xd
 858 0295 C8000000 		.4byte	0xc8
 859 0299 08       		.byte	0x8
 860 029a 00       		.byte	0
 861 029b 04       		.uleb128 0x4
 862 029c 44000000 		.4byte	.LASF45
 863 02a0 03       		.byte	0x3
 864 02a1 1801     		.2byte	0x118
 865 02a3 73020000 		.4byte	0x273
ARM GAS  C:\Users\LAIR\AppData\Local\Temp\ccb9lIqg.s 			page 45


 866 02a7 10       		.uleb128 0x10
 867 02a8 00030000 		.4byte	.LASF46
 868 02ac 01       		.byte	0x1
 869 02ad 25       		.byte	0x25
 870 02ae 00000000 		.4byte	.LFB65
 871 02b2 34000000 		.4byte	.LFE65-.LFB65
 872 02b6 01       		.uleb128 0x1
 873 02b7 9C       		.byte	0x9c
 874 02b8 10       		.uleb128 0x10
 875 02b9 C5020000 		.4byte	.LASF47
 876 02bd 01       		.byte	0x1
 877 02be 78       		.byte	0x78
 878 02bf 00000000 		.4byte	.LFB66
 879 02c3 38000000 		.4byte	.LFE66-.LFB66
 880 02c7 01       		.uleb128 0x1
 881 02c8 9C       		.byte	0x9c
 882 02c9 11       		.uleb128 0x11
 883 02ca AA030000 		.4byte	.LASF50
 884 02ce 01       		.byte	0x1
 885 02cf 1003     		.2byte	0x310
 886 02d1 00000000 		.4byte	.LFB68
 887 02d5 9C000000 		.4byte	.LFE68-.LFB68
 888 02d9 01       		.uleb128 0x1
 889 02da 9C       		.byte	0x9c
 890 02db 0D030000 		.4byte	0x30d
 891 02df 12       		.uleb128 0x12
 892 02e0 A6010000 		.4byte	.LASF48
 893 02e4 01       		.byte	0x1
 894 02e5 1203     		.2byte	0x312
 895 02e7 83000000 		.4byte	0x83
 896 02eb 01       		.uleb128 0x1
 897 02ec 52       		.byte	0x52
 898 02ed 13       		.uleb128 0x13
 899 02ee 60030000 		.4byte	.LASF49
 900 02f2 01       		.byte	0x1
 901 02f3 1303     		.2byte	0x313
 902 02f5 83000000 		.4byte	0x83
 903 02f9 00000000 		.4byte	.LLST0
 904 02fd 14       		.uleb128 0x14
 905 02fe 657000   		.ascii	"ep\000"
 906 0301 01       		.byte	0x1
 907 0302 1403     		.2byte	0x314
 908 0304 83000000 		.4byte	0x83
 909 0308 13000000 		.4byte	.LLST1
 910 030c 00       		.byte	0
 911 030d 11       		.uleb128 0x11
 912 030e C2000000 		.4byte	.LASF51
 913 0312 01       		.byte	0x1
 914 0313 D202     		.2byte	0x2d2
 915 0315 00000000 		.4byte	.LFB67
 916 0319 14000000 		.4byte	.LFE67-.LFB67
 917 031d 01       		.uleb128 0x1
 918 031e 9C       		.byte	0x9c
 919 031f 2D030000 		.4byte	0x32d
 920 0323 15       		.uleb128 0x15
 921 0324 0C000000 		.4byte	.LVL7
 922 0328 CF040000 		.4byte	0x4cf
ARM GAS  C:\Users\LAIR\AppData\Local\Temp\ccb9lIqg.s 			page 46


 923 032c 00       		.byte	0
 924 032d 16       		.uleb128 0x16
 925 032e BB010000 		.4byte	.LASF60
 926 0332 01       		.byte	0x1
 927 0333 F005     		.2byte	0x5f0
 928 0335 03       		.byte	0x3
 929 0336 5F030000 		.4byte	0x35f
 930 033a 17       		.uleb128 0x17
 931 033b 6D010000 		.4byte	.LASF61
 932 033f 01       		.byte	0x1
 933 0340 F005     		.2byte	0x5f0
 934 0342 83000000 		.4byte	0x83
 935 0346 18       		.uleb128 0x18
 936 0347 D6000000 		.4byte	.LASF52
 937 034b 01       		.byte	0x1
 938 034c F305     		.2byte	0x5f3
 939 034e 6F030000 		.4byte	0x36f
 940 0352 18       		.uleb128 0x18
 941 0353 07000000 		.4byte	.LASF53
 942 0357 01       		.byte	0x1
 943 0358 0406     		.2byte	0x604
 944 035a 83000000 		.4byte	0x83
 945 035e 00       		.byte	0
 946 035f 0C       		.uleb128 0xc
 947 0360 B5000000 		.4byte	0xb5
 948 0364 6F030000 		.4byte	0x36f
 949 0368 0D       		.uleb128 0xd
 950 0369 C8000000 		.4byte	0xc8
 951 036d 0C       		.byte	0xc
 952 036e 00       		.byte	0
 953 036f 19       		.uleb128 0x19
 954 0370 5F030000 		.4byte	0x35f
 955 0374 11       		.uleb128 0x11
 956 0375 73000000 		.4byte	.LASF54
 957 0379 01       		.byte	0x1
 958 037a 2706     		.2byte	0x627
 959 037c 00000000 		.4byte	.LFB70
 960 0380 40000000 		.4byte	.LFE70-.LFB70
 961 0384 01       		.uleb128 0x1
 962 0385 9C       		.byte	0x9c
 963 0386 DD030000 		.4byte	0x3dd
 964 038a 1A       		.uleb128 0x1a
 965 038b 2D030000 		.4byte	0x32d
 966 038f 06000000 		.4byte	.LBB4
 967 0393 2E000000 		.4byte	.LBE4-.LBB4
 968 0397 01       		.byte	0x1
 969 0398 2906     		.2byte	0x629
 970 039a 1B       		.uleb128 0x1b
 971 039b 3A030000 		.4byte	0x33a
 972 039f 32000000 		.4byte	.LLST2
 973 03a3 1C       		.uleb128 0x1c
 974 03a4 06000000 		.4byte	.LBB5
 975 03a8 2E000000 		.4byte	.LBE5-.LBB5
 976 03ac 1D       		.uleb128 0x1d
 977 03ad 52030000 		.4byte	0x352
 978 03b1 50000000 		.4byte	.LLST3
 979 03b5 1E       		.uleb128 0x1e
ARM GAS  C:\Users\LAIR\AppData\Local\Temp\ccb9lIqg.s 			page 47


 980 03b6 46030000 		.4byte	0x346
 981 03ba 05       		.uleb128 0x5
 982 03bb 03       		.byte	0x3
 983 03bc 00000000 		.4byte	USBFS_isrCallbacks.5594
 984 03c0 15       		.uleb128 0x15
 985 03c1 0E000000 		.4byte	.LVL9
 986 03c5 C9020000 		.4byte	0x2c9
 987 03c9 1F       		.uleb128 0x1f
 988 03ca 2C000000 		.4byte	.LVL12
 989 03ce 0B       		.uleb128 0xb
 990 03cf 75       		.byte	0x75
 991 03d0 00       		.sleb128 0
 992 03d1 32       		.byte	0x32
 993 03d2 24       		.byte	0x24
 994 03d3 03       		.byte	0x3
 995 03d4 00000000 		.4byte	.LANCHOR0
 996 03d8 22       		.byte	0x22
 997 03d9 06       		.byte	0x6
 998 03da 00       		.byte	0
 999 03db 00       		.byte	0
 1000 03dc 00       		.byte	0
 1001 03dd 11       		.uleb128 0x11
 1002 03de 29030000 		.4byte	.LASF55
 1003 03e2 01       		.byte	0x1
 1004 03e3 3406     		.2byte	0x634
 1005 03e5 00000000 		.4byte	.LFB71
 1006 03e9 40000000 		.4byte	.LFE71-.LFB71
 1007 03ed 01       		.uleb128 0x1
 1008 03ee 9C       		.byte	0x9c
 1009 03ef 46040000 		.4byte	0x446
 1010 03f3 1A       		.uleb128 0x1a
 1011 03f4 2D030000 		.4byte	0x32d
 1012 03f8 06000000 		.4byte	.LBB8
 1013 03fc 2E000000 		.4byte	.LBE8-.LBB8
 1014 0400 01       		.byte	0x1
 1015 0401 3606     		.2byte	0x636
 1016 0403 1B       		.uleb128 0x1b
 1017 0404 3A030000 		.4byte	0x33a
 1018 0408 6F000000 		.4byte	.LLST4
 1019 040c 1C       		.uleb128 0x1c
 1020 040d 06000000 		.4byte	.LBB9
 1021 0411 2E000000 		.4byte	.LBE9-.LBB9
 1022 0415 1D       		.uleb128 0x1d
 1023 0416 52030000 		.4byte	0x352
 1024 041a 8D000000 		.4byte	.LLST5
 1025 041e 1E       		.uleb128 0x1e
 1026 041f 46030000 		.4byte	0x346
 1027 0423 05       		.uleb128 0x5
 1028 0424 03       		.byte	0x3
 1029 0425 00000000 		.4byte	USBFS_isrCallbacks.5594
 1030 0429 15       		.uleb128 0x15
 1031 042a 0E000000 		.4byte	.LVL18
 1032 042e C9020000 		.4byte	0x2c9
 1033 0432 1F       		.uleb128 0x1f
 1034 0433 2C000000 		.4byte	.LVL21
 1035 0437 0B       		.uleb128 0xb
 1036 0438 75       		.byte	0x75
ARM GAS  C:\Users\LAIR\AppData\Local\Temp\ccb9lIqg.s 			page 48


 1037 0439 00       		.sleb128 0
 1038 043a 32       		.byte	0x32
 1039 043b 24       		.byte	0x24
 1040 043c 03       		.byte	0x3
 1041 043d 00000000 		.4byte	.LANCHOR0
 1042 0441 22       		.byte	0x22
 1043 0442 06       		.byte	0x6
 1044 0443 00       		.byte	0
 1045 0444 00       		.byte	0
 1046 0445 00       		.byte	0
 1047 0446 11       		.uleb128 0x11
 1048 0447 3C030000 		.4byte	.LASF56
 1049 044b 01       		.byte	0x1
 1050 044c 4106     		.2byte	0x641
 1051 044e 00000000 		.4byte	.LFB72
 1052 0452 40000000 		.4byte	.LFE72-.LFB72
 1053 0456 01       		.uleb128 0x1
 1054 0457 9C       		.byte	0x9c
 1055 0458 AF040000 		.4byte	0x4af
 1056 045c 1A       		.uleb128 0x1a
 1057 045d 2D030000 		.4byte	0x32d
 1058 0461 06000000 		.4byte	.LBB12
 1059 0465 2E000000 		.4byte	.LBE12-.LBB12
 1060 0469 01       		.byte	0x1
 1061 046a 4306     		.2byte	0x643
 1062 046c 1B       		.uleb128 0x1b
 1063 046d 3A030000 		.4byte	0x33a
 1064 0471 AC000000 		.4byte	.LLST6
 1065 0475 1C       		.uleb128 0x1c
 1066 0476 06000000 		.4byte	.LBB13
 1067 047a 2E000000 		.4byte	.LBE13-.LBB13
 1068 047e 1D       		.uleb128 0x1d
 1069 047f 52030000 		.4byte	0x352
 1070 0483 CA000000 		.4byte	.LLST7
 1071 0487 1E       		.uleb128 0x1e
 1072 0488 46030000 		.4byte	0x346
 1073 048c 05       		.uleb128 0x5
 1074 048d 03       		.byte	0x3
 1075 048e 00000000 		.4byte	USBFS_isrCallbacks.5594
 1076 0492 15       		.uleb128 0x15
 1077 0493 0E000000 		.4byte	.LVL27
 1078 0497 C9020000 		.4byte	0x2c9
 1079 049b 1F       		.uleb128 0x1f
 1080 049c 2C000000 		.4byte	.LVL30
 1081 04a0 0B       		.uleb128 0xb
 1082 04a1 75       		.byte	0x75
 1083 04a2 00       		.sleb128 0
 1084 04a3 32       		.byte	0x32
 1085 04a4 24       		.byte	0x24
 1086 04a5 03       		.byte	0x3
 1087 04a6 00000000 		.4byte	.LANCHOR0
 1088 04aa 22       		.byte	0x22
 1089 04ab 06       		.byte	0x6
 1090 04ac 00       		.byte	0
 1091 04ad 00       		.byte	0
 1092 04ae 00       		.byte	0
 1093 04af 0C       		.uleb128 0xc
ARM GAS  C:\Users\LAIR\AppData\Local\Temp\ccb9lIqg.s 			page 49


 1094 04b0 44010000 		.4byte	0x144
 1095 04b4 BF040000 		.4byte	0x4bf
 1096 04b8 0D       		.uleb128 0xd
 1097 04b9 C8000000 		.4byte	0xc8
 1098 04bd 08       		.byte	0x8
 1099 04be 00       		.byte	0
 1100 04bf 20       		.uleb128 0x20
 1101 04c0 DF020000 		.4byte	.LASF62
 1102 04c4 04       		.byte	0x4
 1103 04c5 79       		.byte	0x79
 1104 04c6 CA040000 		.4byte	0x4ca
 1105 04ca 05       		.uleb128 0x5
 1106 04cb AF040000 		.4byte	0x4af
 1107 04cf 21       		.uleb128 0x21
 1108 04d0 7F030000 		.4byte	.LASF63
 1109 04d4 04       		.byte	0x4
 1110 04d5 A4       		.byte	0xa4
 1111 04d6 00       		.byte	0
 1112              		.section	.debug_abbrev,"",%progbits
 1113              	.Ldebug_abbrev0:
 1114 0000 01       		.uleb128 0x1
 1115 0001 11       		.uleb128 0x11
 1116 0002 01       		.byte	0x1
 1117 0003 25       		.uleb128 0x25
 1118 0004 0E       		.uleb128 0xe
 1119 0005 13       		.uleb128 0x13
 1120 0006 0B       		.uleb128 0xb
 1121 0007 03       		.uleb128 0x3
 1122 0008 0E       		.uleb128 0xe
 1123 0009 1B       		.uleb128 0x1b
 1124 000a 0E       		.uleb128 0xe
 1125 000b 55       		.uleb128 0x55
 1126 000c 17       		.uleb128 0x17
 1127 000d 11       		.uleb128 0x11
 1128 000e 01       		.uleb128 0x1
 1129 000f 10       		.uleb128 0x10
 1130 0010 17       		.uleb128 0x17
 1131 0011 00       		.byte	0
 1132 0012 00       		.byte	0
 1133 0013 02       		.uleb128 0x2
 1134 0014 24       		.uleb128 0x24
 1135 0015 00       		.byte	0
 1136 0016 0B       		.uleb128 0xb
 1137 0017 0B       		.uleb128 0xb
 1138 0018 3E       		.uleb128 0x3e
 1139 0019 0B       		.uleb128 0xb
 1140 001a 03       		.uleb128 0x3
 1141 001b 0E       		.uleb128 0xe
 1142 001c 00       		.byte	0
 1143 001d 00       		.byte	0
 1144 001e 03       		.uleb128 0x3
 1145 001f 24       		.uleb128 0x24
 1146 0020 00       		.byte	0
 1147 0021 0B       		.uleb128 0xb
 1148 0022 0B       		.uleb128 0xb
 1149 0023 3E       		.uleb128 0x3e
 1150 0024 0B       		.uleb128 0xb
ARM GAS  C:\Users\LAIR\AppData\Local\Temp\ccb9lIqg.s 			page 50


 1151 0025 03       		.uleb128 0x3
 1152 0026 08       		.uleb128 0x8
 1153 0027 00       		.byte	0
 1154 0028 00       		.byte	0
 1155 0029 04       		.uleb128 0x4
 1156 002a 16       		.uleb128 0x16
 1157 002b 00       		.byte	0
 1158 002c 03       		.uleb128 0x3
 1159 002d 0E       		.uleb128 0xe
 1160 002e 3A       		.uleb128 0x3a
 1161 002f 0B       		.uleb128 0xb
 1162 0030 3B       		.uleb128 0x3b
 1163 0031 05       		.uleb128 0x5
 1164 0032 49       		.uleb128 0x49
 1165 0033 13       		.uleb128 0x13
 1166 0034 00       		.byte	0
 1167 0035 00       		.byte	0
 1168 0036 05       		.uleb128 0x5
 1169 0037 35       		.uleb128 0x35
 1170 0038 00       		.byte	0
 1171 0039 49       		.uleb128 0x49
 1172 003a 13       		.uleb128 0x13
 1173 003b 00       		.byte	0
 1174 003c 00       		.byte	0
 1175 003d 06       		.uleb128 0x6
 1176 003e 0F       		.uleb128 0xf
 1177 003f 00       		.byte	0
 1178 0040 0B       		.uleb128 0xb
 1179 0041 0B       		.uleb128 0xb
 1180 0042 49       		.uleb128 0x49
 1181 0043 13       		.uleb128 0x13
 1182 0044 00       		.byte	0
 1183 0045 00       		.byte	0
 1184 0046 07       		.uleb128 0x7
 1185 0047 15       		.uleb128 0x15
 1186 0048 00       		.byte	0
 1187 0049 27       		.uleb128 0x27
 1188 004a 19       		.uleb128 0x19
 1189 004b 00       		.byte	0
 1190 004c 00       		.byte	0
 1191 004d 08       		.uleb128 0x8
 1192 004e 13       		.uleb128 0x13
 1193 004f 01       		.byte	0x1
 1194 0050 0B       		.uleb128 0xb
 1195 0051 0B       		.uleb128 0xb
 1196 0052 3A       		.uleb128 0x3a
 1197 0053 0B       		.uleb128 0xb
 1198 0054 3B       		.uleb128 0x3b
 1199 0055 0B       		.uleb128 0xb
 1200 0056 01       		.uleb128 0x1
 1201 0057 13       		.uleb128 0x13
 1202 0058 00       		.byte	0
 1203 0059 00       		.byte	0
 1204 005a 09       		.uleb128 0x9
 1205 005b 0D       		.uleb128 0xd
 1206 005c 00       		.byte	0
 1207 005d 03       		.uleb128 0x3
ARM GAS  C:\Users\LAIR\AppData\Local\Temp\ccb9lIqg.s 			page 51


 1208 005e 0E       		.uleb128 0xe
 1209 005f 3A       		.uleb128 0x3a
 1210 0060 0B       		.uleb128 0xb
 1211 0061 3B       		.uleb128 0x3b
 1212 0062 0B       		.uleb128 0xb
 1213 0063 49       		.uleb128 0x49
 1214 0064 13       		.uleb128 0x13
 1215 0065 38       		.uleb128 0x38
 1216 0066 0B       		.uleb128 0xb
 1217 0067 00       		.byte	0
 1218 0068 00       		.byte	0
 1219 0069 0A       		.uleb128 0xa
 1220 006a 16       		.uleb128 0x16
 1221 006b 00       		.byte	0
 1222 006c 03       		.uleb128 0x3
 1223 006d 0E       		.uleb128 0xe
 1224 006e 3A       		.uleb128 0x3a
 1225 006f 0B       		.uleb128 0xb
 1226 0070 3B       		.uleb128 0x3b
 1227 0071 0B       		.uleb128 0xb
 1228 0072 49       		.uleb128 0x49
 1229 0073 13       		.uleb128 0x13
 1230 0074 00       		.byte	0
 1231 0075 00       		.byte	0
 1232 0076 0B       		.uleb128 0xb
 1233 0077 0D       		.uleb128 0xd
 1234 0078 00       		.byte	0
 1235 0079 03       		.uleb128 0x3
 1236 007a 08       		.uleb128 0x8
 1237 007b 3A       		.uleb128 0x3a
 1238 007c 0B       		.uleb128 0xb
 1239 007d 3B       		.uleb128 0x3b
 1240 007e 0B       		.uleb128 0xb
 1241 007f 49       		.uleb128 0x49
 1242 0080 13       		.uleb128 0x13
 1243 0081 38       		.uleb128 0x38
 1244 0082 0B       		.uleb128 0xb
 1245 0083 00       		.byte	0
 1246 0084 00       		.byte	0
 1247 0085 0C       		.uleb128 0xc
 1248 0086 01       		.uleb128 0x1
 1249 0087 01       		.byte	0x1
 1250 0088 49       		.uleb128 0x49
 1251 0089 13       		.uleb128 0x13
 1252 008a 01       		.uleb128 0x1
 1253 008b 13       		.uleb128 0x13
 1254 008c 00       		.byte	0
 1255 008d 00       		.byte	0
 1256 008e 0D       		.uleb128 0xd
 1257 008f 21       		.uleb128 0x21
 1258 0090 00       		.byte	0
 1259 0091 49       		.uleb128 0x49
 1260 0092 13       		.uleb128 0x13
 1261 0093 2F       		.uleb128 0x2f
 1262 0094 0B       		.uleb128 0xb
 1263 0095 00       		.byte	0
 1264 0096 00       		.byte	0
ARM GAS  C:\Users\LAIR\AppData\Local\Temp\ccb9lIqg.s 			page 52


 1265 0097 0E       		.uleb128 0xe
 1266 0098 13       		.uleb128 0x13
 1267 0099 01       		.byte	0x1
 1268 009a 0B       		.uleb128 0xb
 1269 009b 05       		.uleb128 0x5
 1270 009c 3A       		.uleb128 0x3a
 1271 009d 0B       		.uleb128 0xb
 1272 009e 3B       		.uleb128 0x3b
 1273 009f 05       		.uleb128 0x5
 1274 00a0 01       		.uleb128 0x1
 1275 00a1 13       		.uleb128 0x13
 1276 00a2 00       		.byte	0
 1277 00a3 00       		.byte	0
 1278 00a4 0F       		.uleb128 0xf
 1279 00a5 0D       		.uleb128 0xd
 1280 00a6 00       		.byte	0
 1281 00a7 03       		.uleb128 0x3
 1282 00a8 0E       		.uleb128 0xe
 1283 00a9 3A       		.uleb128 0x3a
 1284 00aa 0B       		.uleb128 0xb
 1285 00ab 3B       		.uleb128 0x3b
 1286 00ac 05       		.uleb128 0x5
 1287 00ad 49       		.uleb128 0x49
 1288 00ae 13       		.uleb128 0x13
 1289 00af 38       		.uleb128 0x38
 1290 00b0 0B       		.uleb128 0xb
 1291 00b1 00       		.byte	0
 1292 00b2 00       		.byte	0
 1293 00b3 10       		.uleb128 0x10
 1294 00b4 2E       		.uleb128 0x2e
 1295 00b5 00       		.byte	0
 1296 00b6 3F       		.uleb128 0x3f
 1297 00b7 19       		.uleb128 0x19
 1298 00b8 03       		.uleb128 0x3
 1299 00b9 0E       		.uleb128 0xe
 1300 00ba 3A       		.uleb128 0x3a
 1301 00bb 0B       		.uleb128 0xb
 1302 00bc 3B       		.uleb128 0x3b
 1303 00bd 0B       		.uleb128 0xb
 1304 00be 27       		.uleb128 0x27
 1305 00bf 19       		.uleb128 0x19
 1306 00c0 11       		.uleb128 0x11
 1307 00c1 01       		.uleb128 0x1
 1308 00c2 12       		.uleb128 0x12
 1309 00c3 06       		.uleb128 0x6
 1310 00c4 40       		.uleb128 0x40
 1311 00c5 18       		.uleb128 0x18
 1312 00c6 9742     		.uleb128 0x2117
 1313 00c8 19       		.uleb128 0x19
 1314 00c9 00       		.byte	0
 1315 00ca 00       		.byte	0
 1316 00cb 11       		.uleb128 0x11
 1317 00cc 2E       		.uleb128 0x2e
 1318 00cd 01       		.byte	0x1
 1319 00ce 3F       		.uleb128 0x3f
 1320 00cf 19       		.uleb128 0x19
 1321 00d0 03       		.uleb128 0x3
ARM GAS  C:\Users\LAIR\AppData\Local\Temp\ccb9lIqg.s 			page 53


 1322 00d1 0E       		.uleb128 0xe
 1323 00d2 3A       		.uleb128 0x3a
 1324 00d3 0B       		.uleb128 0xb
 1325 00d4 3B       		.uleb128 0x3b
 1326 00d5 05       		.uleb128 0x5
 1327 00d6 27       		.uleb128 0x27
 1328 00d7 19       		.uleb128 0x19
 1329 00d8 11       		.uleb128 0x11
 1330 00d9 01       		.uleb128 0x1
 1331 00da 12       		.uleb128 0x12
 1332 00db 06       		.uleb128 0x6
 1333 00dc 40       		.uleb128 0x40
 1334 00dd 18       		.uleb128 0x18
 1335 00de 9742     		.uleb128 0x2117
 1336 00e0 19       		.uleb128 0x19
 1337 00e1 01       		.uleb128 0x1
 1338 00e2 13       		.uleb128 0x13
 1339 00e3 00       		.byte	0
 1340 00e4 00       		.byte	0
 1341 00e5 12       		.uleb128 0x12
 1342 00e6 34       		.uleb128 0x34
 1343 00e7 00       		.byte	0
 1344 00e8 03       		.uleb128 0x3
 1345 00e9 0E       		.uleb128 0xe
 1346 00ea 3A       		.uleb128 0x3a
 1347 00eb 0B       		.uleb128 0xb
 1348 00ec 3B       		.uleb128 0x3b
 1349 00ed 05       		.uleb128 0x5
 1350 00ee 49       		.uleb128 0x49
 1351 00ef 13       		.uleb128 0x13
 1352 00f0 02       		.uleb128 0x2
 1353 00f1 18       		.uleb128 0x18
 1354 00f2 00       		.byte	0
 1355 00f3 00       		.byte	0
 1356 00f4 13       		.uleb128 0x13
 1357 00f5 34       		.uleb128 0x34
 1358 00f6 00       		.byte	0
 1359 00f7 03       		.uleb128 0x3
 1360 00f8 0E       		.uleb128 0xe
 1361 00f9 3A       		.uleb128 0x3a
 1362 00fa 0B       		.uleb128 0xb
 1363 00fb 3B       		.uleb128 0x3b
 1364 00fc 05       		.uleb128 0x5
 1365 00fd 49       		.uleb128 0x49
 1366 00fe 13       		.uleb128 0x13
 1367 00ff 02       		.uleb128 0x2
 1368 0100 17       		.uleb128 0x17
 1369 0101 00       		.byte	0
 1370 0102 00       		.byte	0
 1371 0103 14       		.uleb128 0x14
 1372 0104 34       		.uleb128 0x34
 1373 0105 00       		.byte	0
 1374 0106 03       		.uleb128 0x3
 1375 0107 08       		.uleb128 0x8
 1376 0108 3A       		.uleb128 0x3a
 1377 0109 0B       		.uleb128 0xb
 1378 010a 3B       		.uleb128 0x3b
ARM GAS  C:\Users\LAIR\AppData\Local\Temp\ccb9lIqg.s 			page 54


 1379 010b 05       		.uleb128 0x5
 1380 010c 49       		.uleb128 0x49
 1381 010d 13       		.uleb128 0x13
 1382 010e 02       		.uleb128 0x2
 1383 010f 17       		.uleb128 0x17
 1384 0110 00       		.byte	0
 1385 0111 00       		.byte	0
 1386 0112 15       		.uleb128 0x15
 1387 0113 898201   		.uleb128 0x4109
 1388 0116 00       		.byte	0
 1389 0117 11       		.uleb128 0x11
 1390 0118 01       		.uleb128 0x1
 1391 0119 31       		.uleb128 0x31
 1392 011a 13       		.uleb128 0x13
 1393 011b 00       		.byte	0
 1394 011c 00       		.byte	0
 1395 011d 16       		.uleb128 0x16
 1396 011e 2E       		.uleb128 0x2e
 1397 011f 01       		.byte	0x1
 1398 0120 03       		.uleb128 0x3
 1399 0121 0E       		.uleb128 0xe
 1400 0122 3A       		.uleb128 0x3a
 1401 0123 0B       		.uleb128 0xb
 1402 0124 3B       		.uleb128 0x3b
 1403 0125 05       		.uleb128 0x5
 1404 0126 27       		.uleb128 0x27
 1405 0127 19       		.uleb128 0x19
 1406 0128 20       		.uleb128 0x20
 1407 0129 0B       		.uleb128 0xb
 1408 012a 01       		.uleb128 0x1
 1409 012b 13       		.uleb128 0x13
 1410 012c 00       		.byte	0
 1411 012d 00       		.byte	0
 1412 012e 17       		.uleb128 0x17
 1413 012f 05       		.uleb128 0x5
 1414 0130 00       		.byte	0
 1415 0131 03       		.uleb128 0x3
 1416 0132 0E       		.uleb128 0xe
 1417 0133 3A       		.uleb128 0x3a
 1418 0134 0B       		.uleb128 0xb
 1419 0135 3B       		.uleb128 0x3b
 1420 0136 05       		.uleb128 0x5
 1421 0137 49       		.uleb128 0x49
 1422 0138 13       		.uleb128 0x13
 1423 0139 00       		.byte	0
 1424 013a 00       		.byte	0
 1425 013b 18       		.uleb128 0x18
 1426 013c 34       		.uleb128 0x34
 1427 013d 00       		.byte	0
 1428 013e 03       		.uleb128 0x3
 1429 013f 0E       		.uleb128 0xe
 1430 0140 3A       		.uleb128 0x3a
 1431 0141 0B       		.uleb128 0xb
 1432 0142 3B       		.uleb128 0x3b
 1433 0143 05       		.uleb128 0x5
 1434 0144 49       		.uleb128 0x49
 1435 0145 13       		.uleb128 0x13
ARM GAS  C:\Users\LAIR\AppData\Local\Temp\ccb9lIqg.s 			page 55


 1436 0146 00       		.byte	0
 1437 0147 00       		.byte	0
 1438 0148 19       		.uleb128 0x19
 1439 0149 26       		.uleb128 0x26
 1440 014a 00       		.byte	0
 1441 014b 49       		.uleb128 0x49
 1442 014c 13       		.uleb128 0x13
 1443 014d 00       		.byte	0
 1444 014e 00       		.byte	0
 1445 014f 1A       		.uleb128 0x1a
 1446 0150 1D       		.uleb128 0x1d
 1447 0151 01       		.byte	0x1
 1448 0152 31       		.uleb128 0x31
 1449 0153 13       		.uleb128 0x13
 1450 0154 11       		.uleb128 0x11
 1451 0155 01       		.uleb128 0x1
 1452 0156 12       		.uleb128 0x12
 1453 0157 06       		.uleb128 0x6
 1454 0158 58       		.uleb128 0x58
 1455 0159 0B       		.uleb128 0xb
 1456 015a 59       		.uleb128 0x59
 1457 015b 05       		.uleb128 0x5
 1458 015c 00       		.byte	0
 1459 015d 00       		.byte	0
 1460 015e 1B       		.uleb128 0x1b
 1461 015f 05       		.uleb128 0x5
 1462 0160 00       		.byte	0
 1463 0161 31       		.uleb128 0x31
 1464 0162 13       		.uleb128 0x13
 1465 0163 02       		.uleb128 0x2
 1466 0164 17       		.uleb128 0x17
 1467 0165 00       		.byte	0
 1468 0166 00       		.byte	0
 1469 0167 1C       		.uleb128 0x1c
 1470 0168 0B       		.uleb128 0xb
 1471 0169 01       		.byte	0x1
 1472 016a 11       		.uleb128 0x11
 1473 016b 01       		.uleb128 0x1
 1474 016c 12       		.uleb128 0x12
 1475 016d 06       		.uleb128 0x6
 1476 016e 00       		.byte	0
 1477 016f 00       		.byte	0
 1478 0170 1D       		.uleb128 0x1d
 1479 0171 34       		.uleb128 0x34
 1480 0172 00       		.byte	0
 1481 0173 31       		.uleb128 0x31
 1482 0174 13       		.uleb128 0x13
 1483 0175 02       		.uleb128 0x2
 1484 0176 17       		.uleb128 0x17
 1485 0177 00       		.byte	0
 1486 0178 00       		.byte	0
 1487 0179 1E       		.uleb128 0x1e
 1488 017a 34       		.uleb128 0x34
 1489 017b 00       		.byte	0
 1490 017c 31       		.uleb128 0x31
 1491 017d 13       		.uleb128 0x13
 1492 017e 02       		.uleb128 0x2
ARM GAS  C:\Users\LAIR\AppData\Local\Temp\ccb9lIqg.s 			page 56


 1493 017f 18       		.uleb128 0x18
 1494 0180 00       		.byte	0
 1495 0181 00       		.byte	0
 1496 0182 1F       		.uleb128 0x1f
 1497 0183 898201   		.uleb128 0x4109
 1498 0186 00       		.byte	0
 1499 0187 11       		.uleb128 0x11
 1500 0188 01       		.uleb128 0x1
 1501 0189 9342     		.uleb128 0x2113
 1502 018b 18       		.uleb128 0x18
 1503 018c 00       		.byte	0
 1504 018d 00       		.byte	0
 1505 018e 20       		.uleb128 0x20
 1506 018f 34       		.uleb128 0x34
 1507 0190 00       		.byte	0
 1508 0191 03       		.uleb128 0x3
 1509 0192 0E       		.uleb128 0xe
 1510 0193 3A       		.uleb128 0x3a
 1511 0194 0B       		.uleb128 0xb
 1512 0195 3B       		.uleb128 0x3b
 1513 0196 0B       		.uleb128 0xb
 1514 0197 49       		.uleb128 0x49
 1515 0198 13       		.uleb128 0x13
 1516 0199 3F       		.uleb128 0x3f
 1517 019a 19       		.uleb128 0x19
 1518 019b 3C       		.uleb128 0x3c
 1519 019c 19       		.uleb128 0x19
 1520 019d 00       		.byte	0
 1521 019e 00       		.byte	0
 1522 019f 21       		.uleb128 0x21
 1523 01a0 2E       		.uleb128 0x2e
 1524 01a1 00       		.byte	0
 1525 01a2 3F       		.uleb128 0x3f
 1526 01a3 19       		.uleb128 0x19
 1527 01a4 03       		.uleb128 0x3
 1528 01a5 0E       		.uleb128 0xe
 1529 01a6 3A       		.uleb128 0x3a
 1530 01a7 0B       		.uleb128 0xb
 1531 01a8 3B       		.uleb128 0x3b
 1532 01a9 0B       		.uleb128 0xb
 1533 01aa 27       		.uleb128 0x27
 1534 01ab 19       		.uleb128 0x19
 1535 01ac 3C       		.uleb128 0x3c
 1536 01ad 19       		.uleb128 0x19
 1537 01ae 00       		.byte	0
 1538 01af 00       		.byte	0
 1539 01b0 00       		.byte	0
 1540              		.section	.debug_loc,"",%progbits
 1541              	.Ldebug_loc0:
 1542              	.LLST0:
 1543 0000 1C000000 		.4byte	.LVL3
 1544 0004 80000000 		.4byte	.LVL4
 1545 0008 0100     		.2byte	0x1
 1546 000a 51       		.byte	0x51
 1547 000b 00000000 		.4byte	0
 1548 000f 00000000 		.4byte	0
 1549              	.LLST1:
ARM GAS  C:\Users\LAIR\AppData\Local\Temp\ccb9lIqg.s 			page 57


 1550 0013 02000000 		.4byte	.LVL0
 1551 0017 0A000000 		.4byte	.LVL2
 1552 001b 0200     		.2byte	0x2
 1553 001d 31       		.byte	0x31
 1554 001e 9F       		.byte	0x9f
 1555 001f 0A000000 		.4byte	.LVL2
 1556 0023 9C000000 		.4byte	.LFE68
 1557 0027 0100     		.2byte	0x1
 1558 0029 53       		.byte	0x53
 1559 002a 00000000 		.4byte	0
 1560 002e 00000000 		.4byte	0
 1561              	.LLST2:
 1562 0032 06000000 		.4byte	.LVL8
 1563 0036 1C000000 		.4byte	.LVL10
 1564 003a 0100     		.2byte	0x1
 1565 003c 55       		.byte	0x55
 1566 003d 1C000000 		.4byte	.LVL10
 1567 0041 34000000 		.4byte	.LVL15
 1568 0045 0100     		.2byte	0x1
 1569 0047 54       		.byte	0x54
 1570 0048 00000000 		.4byte	0
 1571 004c 00000000 		.4byte	0
 1572              	.LLST3:
 1573 0050 06000000 		.4byte	.LVL8
 1574 0054 20000000 		.4byte	.LVL11
 1575 0058 0200     		.2byte	0x2
 1576 005a 30       		.byte	0x30
 1577 005b 9F       		.byte	0x9f
 1578 005c 20000000 		.4byte	.LVL11
 1579 0060 34000000 		.4byte	.LVL16
 1580 0064 0100     		.2byte	0x1
 1581 0066 55       		.byte	0x55
 1582 0067 00000000 		.4byte	0
 1583 006b 00000000 		.4byte	0
 1584              	.LLST4:
 1585 006f 06000000 		.4byte	.LVL17
 1586 0073 1C000000 		.4byte	.LVL19
 1587 0077 0100     		.2byte	0x1
 1588 0079 55       		.byte	0x55
 1589 007a 1C000000 		.4byte	.LVL19
 1590 007e 34000000 		.4byte	.LVL24
 1591 0082 0100     		.2byte	0x1
 1592 0084 54       		.byte	0x54
 1593 0085 00000000 		.4byte	0
 1594 0089 00000000 		.4byte	0
 1595              	.LLST5:
 1596 008d 06000000 		.4byte	.LVL17
 1597 0091 20000000 		.4byte	.LVL20
 1598 0095 0200     		.2byte	0x2
 1599 0097 30       		.byte	0x30
 1600 0098 9F       		.byte	0x9f
 1601 0099 20000000 		.4byte	.LVL20
 1602 009d 34000000 		.4byte	.LVL25
 1603 00a1 0100     		.2byte	0x1
 1604 00a3 55       		.byte	0x55
 1605 00a4 00000000 		.4byte	0
 1606 00a8 00000000 		.4byte	0
ARM GAS  C:\Users\LAIR\AppData\Local\Temp\ccb9lIqg.s 			page 58


 1607              	.LLST6:
 1608 00ac 06000000 		.4byte	.LVL26
 1609 00b0 1C000000 		.4byte	.LVL28
 1610 00b4 0100     		.2byte	0x1
 1611 00b6 55       		.byte	0x55
 1612 00b7 1C000000 		.4byte	.LVL28
 1613 00bb 34000000 		.4byte	.LVL33
 1614 00bf 0100     		.2byte	0x1
 1615 00c1 54       		.byte	0x54
 1616 00c2 00000000 		.4byte	0
 1617 00c6 00000000 		.4byte	0
 1618              	.LLST7:
 1619 00ca 06000000 		.4byte	.LVL26
 1620 00ce 20000000 		.4byte	.LVL29
 1621 00d2 0200     		.2byte	0x2
 1622 00d4 30       		.byte	0x30
 1623 00d5 9F       		.byte	0x9f
 1624 00d6 20000000 		.4byte	.LVL29
 1625 00da 34000000 		.4byte	.LVL34
 1626 00de 0100     		.2byte	0x1
 1627 00e0 55       		.byte	0x55
 1628 00e1 00000000 		.4byte	0
 1629 00e5 00000000 		.4byte	0
 1630              		.section	.debug_aranges,"",%progbits
 1631 0000 4C000000 		.4byte	0x4c
 1632 0004 0200     		.2byte	0x2
 1633 0006 00000000 		.4byte	.Ldebug_info0
 1634 000a 04       		.byte	0x4
 1635 000b 00       		.byte	0
 1636 000c 0000     		.2byte	0
 1637 000e 0000     		.2byte	0
 1638 0010 00000000 		.4byte	.LFB65
 1639 0014 34000000 		.4byte	.LFE65-.LFB65
 1640 0018 00000000 		.4byte	.LFB66
 1641 001c 38000000 		.4byte	.LFE66-.LFB66
 1642 0020 00000000 		.4byte	.LFB68
 1643 0024 9C000000 		.4byte	.LFE68-.LFB68
 1644 0028 00000000 		.4byte	.LFB67
 1645 002c 14000000 		.4byte	.LFE67-.LFB67
 1646 0030 00000000 		.4byte	.LFB70
 1647 0034 40000000 		.4byte	.LFE70-.LFB70
 1648 0038 00000000 		.4byte	.LFB71
 1649 003c 40000000 		.4byte	.LFE71-.LFB71
 1650 0040 00000000 		.4byte	.LFB72
 1651 0044 40000000 		.4byte	.LFE72-.LFB72
 1652 0048 00000000 		.4byte	0
 1653 004c 00000000 		.4byte	0
 1654              		.section	.debug_ranges,"",%progbits
 1655              	.Ldebug_ranges0:
 1656 0000 00000000 		.4byte	.LFB65
 1657 0004 34000000 		.4byte	.LFE65
 1658 0008 00000000 		.4byte	.LFB66
 1659 000c 38000000 		.4byte	.LFE66
 1660 0010 00000000 		.4byte	.LFB68
 1661 0014 9C000000 		.4byte	.LFE68
 1662 0018 00000000 		.4byte	.LFB67
 1663 001c 14000000 		.4byte	.LFE67
ARM GAS  C:\Users\LAIR\AppData\Local\Temp\ccb9lIqg.s 			page 59


 1664 0020 00000000 		.4byte	.LFB70
 1665 0024 40000000 		.4byte	.LFE70
 1666 0028 00000000 		.4byte	.LFB71
 1667 002c 40000000 		.4byte	.LFE71
 1668 0030 00000000 		.4byte	.LFB72
 1669 0034 40000000 		.4byte	.LFE72
 1670 0038 00000000 		.4byte	0
 1671 003c 00000000 		.4byte	0
 1672              		.section	.debug_line,"",%progbits
 1673              	.Ldebug_line0:
 1674 0000 63010000 		.section	.debug_str,"MS",%progbits,1
 1674      02006400 
 1674      00000201 
 1674      FB0E0D00 
 1674      01010101 
 1675              	.LASF10:
 1676 0000 75696E74 		.ascii	"uint16\000"
 1676      313600
 1677              	.LASF53:
 1678 0007 63624964 		.ascii	"cbIdx\000"
 1678      7800
 1679              	.LASF7:
 1680 000d 6C6F6E67 		.ascii	"long long unsigned int\000"
 1680      206C6F6E 
 1680      6720756E 
 1680      7369676E 
 1680      65642069 
 1681              	.LASF22:
 1682 0024 61646472 		.ascii	"addr\000"
 1682      00
 1683              	.LASF32:
 1684 0029 65704366 		.ascii	"epCfg\000"
 1684      6700
 1685              	.LASF43:
 1686 002f 55534246 		.ascii	"USBFS_sie_eps_struct\000"
 1686      535F7369 
 1686      655F6570 
 1686      735F7374 
 1686      72756374 
 1687              	.LASF45:
 1688 0044 55534246 		.ascii	"USBFS_arb_eps_struct\000"
 1688      535F6172 
 1688      625F6570 
 1688      735F7374 
 1688      72756374 
 1689              	.LASF6:
 1690 0059 6C6F6E67 		.ascii	"long long int\000"
 1690      206C6F6E 
 1690      6720696E 
 1690      7400
 1691              	.LASF0:
 1692 0067 7369676E 		.ascii	"signed char\000"
 1692      65642063 
 1692      68617200 
 1693              	.LASF54:
 1694 0073 55534246 		.ascii	"USBFS_INTR_HI_ISR\000"
 1694      535F494E 
ARM GAS  C:\Users\LAIR\AppData\Local\Temp\ccb9lIqg.s 			page 60


 1694      54525F48 
 1694      495F4953 
 1694      5200
 1695              	.LASF41:
 1696 0085 55534246 		.ascii	"USBFS_arb_ep_struct\000"
 1696      535F6172 
 1696      625F6570 
 1696      5F737472 
 1696      75637400 
 1697              	.LASF4:
 1698 0099 6C6F6E67 		.ascii	"long int\000"
 1698      20696E74 
 1698      00
 1699              	.LASF9:
 1700 00a2 75696E74 		.ascii	"uint8\000"
 1700      3800
 1701              	.LASF21:
 1702 00a8 6570546F 		.ascii	"epToggle\000"
 1702      67676C65 
 1702      00
 1703              	.LASF36:
 1704 00b1 72775761 		.ascii	"rwWa\000"
 1704      00
 1705              	.LASF13:
 1706 00b6 646F7562 		.ascii	"double\000"
 1706      6C6500
 1707              	.LASF34:
 1708 00bd 65705372 		.ascii	"epSr\000"
 1708      00
 1709              	.LASF51:
 1710 00c2 55534246 		.ascii	"USBFS_BUS_RESET_ISR\000"
 1710      535F4255 
 1710      535F5245 
 1710      5345545F 
 1710      49535200 
 1711              	.LASF52:
 1712 00d6 55534246 		.ascii	"USBFS_isrCallbacks\000"
 1712      535F6973 
 1712      7243616C 
 1712      6C626163 
 1712      6B7300
 1713              	.LASF11:
 1714 00e9 75696E74 		.ascii	"uint32\000"
 1714      333200
 1715              	.LASF23:
 1716 00f0 65704D6F 		.ascii	"epMode\000"
 1716      646500
 1717              	.LASF35:
 1718 00f7 72657365 		.ascii	"reserved\000"
 1718      72766564 
 1718      00
 1719              	.LASF8:
 1720 0100 756E7369 		.ascii	"unsigned int\000"
 1720      676E6564 
 1720      20696E74 
 1720      00
 1721              	.LASF5:
ARM GAS  C:\Users\LAIR\AppData\Local\Temp\ccb9lIqg.s 			page 61


 1722 010d 6C6F6E67 		.ascii	"long unsigned int\000"
 1722      20756E73 
 1722      69676E65 
 1722      6420696E 
 1722      7400
 1723              	.LASF3:
 1724 011f 73686F72 		.ascii	"short unsigned int\000"
 1724      7420756E 
 1724      7369676E 
 1724      65642069 
 1724      6E7400
 1725              	.LASF58:
 1726 0132 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\USBFS_episr.c\000"
 1726      6E657261 
 1726      7465645F 
 1726      536F7572 
 1726      63655C50 
 1727              	.LASF31:
 1728 0159 55534246 		.ascii	"USBFS_sie_ep_struct\000"
 1728      535F7369 
 1728      655F6570 
 1728      5F737472 
 1728      75637400 
 1729              	.LASF61:
 1730 016d 696E7472 		.ascii	"intrCause\000"
 1730      43617573 
 1730      6500
 1731              	.LASF44:
 1732 0177 61726245 		.ascii	"arbEp\000"
 1732      7000
 1733              	.LASF26:
 1734 017d 696E7465 		.ascii	"interface\000"
 1734      72666163 
 1734      6500
 1735              	.LASF15:
 1736 0187 72656733 		.ascii	"reg32\000"
 1736      3200
 1737              	.LASF20:
 1738 018d 68774570 		.ascii	"hwEpState\000"
 1738      53746174 
 1738      6500
 1739              	.LASF17:
 1740 0197 73697A65 		.ascii	"sizetype\000"
 1740      74797065 
 1740      00
 1741              	.LASF42:
 1742 01a0 73696545 		.ascii	"sieEp\000"
 1742      7000
 1743              	.LASF48:
 1744 01a6 61726249 		.ascii	"arbIntrStatus\000"
 1744      6E747253 
 1744      74617475 
 1744      7300
 1745              	.LASF18:
 1746 01b4 61747472 		.ascii	"attrib\000"
 1746      696200
 1747              	.LASF60:
ARM GAS  C:\Users\LAIR\AppData\Local\Temp\ccb9lIqg.s 			page 62


 1748 01bb 55534246 		.ascii	"USBFS_IntrHandler\000"
 1748      535F496E 
 1748      74724861 
 1748      6E646C65 
 1748      7200
 1749              	.LASF39:
 1750 01cd 72775261 		.ascii	"rwRaMsb\000"
 1750      4D736200 
 1751              	.LASF57:
 1752 01d5 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 1752      4320342E 
 1752      392E3320 
 1752      32303135 
 1752      30333033 
 1753 0208 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 1753      20726576 
 1753      6973696F 
 1753      6E203232 
 1753      31323230 
 1754 023b 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 1754      66756E63 
 1754      74696F6E 
 1754      2D736563 
 1754      74696F6E 
 1755              	.LASF28:
 1756 0263 6570436E 		.ascii	"epCnt0\000"
 1756      743000
 1757              	.LASF29:
 1758 026a 6570436E 		.ascii	"epCnt1\000"
 1758      743100
 1759              	.LASF30:
 1760 0271 65704372 		.ascii	"epCr0\000"
 1760      3000
 1761              	.LASF59:
 1762 0277 433A5C55 		.ascii	"C:\\Users\\LAIR\\Documents\\GitHub\\ARC-Controller\\"
 1762      73657273 
 1762      5C4C4149 
 1762      525C446F 
 1762      63756D65 
 1763 02a5 50536F43 		.ascii	"PSoC-Code\\ARC-EMBED.cydsn\000"
 1763      2D436F64 
 1763      655C4152 
 1763      432D454D 
 1763      4245442E 
 1764              	.LASF12:
 1765 02bf 666C6F61 		.ascii	"float\000"
 1765      7400
 1766              	.LASF47:
 1767 02c5 55534246 		.ascii	"USBFS_EP_2_ISR\000"
 1767      535F4550 
 1767      5F325F49 
 1767      535200
 1768              	.LASF19:
 1769 02d4 61706945 		.ascii	"apiEpState\000"
 1769      70537461 
 1769      746500
 1770              	.LASF62:
ARM GAS  C:\Users\LAIR\AppData\Local\Temp\ccb9lIqg.s 			page 63


 1771 02df 55534246 		.ascii	"USBFS_EP\000"
 1771      535F4550 
 1771      00
 1772              	.LASF1:
 1773 02e8 756E7369 		.ascii	"unsigned char\000"
 1773      676E6564 
 1773      20636861 
 1773      7200
 1774              	.LASF2:
 1775 02f6 73686F72 		.ascii	"short int\000"
 1775      7420696E 
 1775      7400
 1776              	.LASF46:
 1777 0300 55534246 		.ascii	"USBFS_EP_1_ISR\000"
 1777      535F4550 
 1777      5F315F49 
 1777      535200
 1778              	.LASF38:
 1779 030f 72775261 		.ascii	"rwRa\000"
 1779      00
 1780              	.LASF27:
 1781 0314 545F5553 		.ascii	"T_USBFS_EP_CTL_BLOCK\000"
 1781      4246535F 
 1781      45505F43 
 1781      544C5F42 
 1781      4C4F434B 
 1782              	.LASF55:
 1783 0329 55534246 		.ascii	"USBFS_INTR_MED_ISR\000"
 1783      535F494E 
 1783      54525F4D 
 1783      45445F49 
 1783      535200
 1784              	.LASF56:
 1785 033c 55534246 		.ascii	"USBFS_INTR_LO_ISR\000"
 1785      535F494E 
 1785      54525F4C 
 1785      4F5F4953 
 1785      5200
 1786              	.LASF14:
 1787 034e 63686172 		.ascii	"char\000"
 1787      00
 1788              	.LASF16:
 1789 0353 63796973 		.ascii	"cyisraddress\000"
 1789      72616464 
 1789      72657373 
 1789      00
 1790              	.LASF49:
 1791 0360 65705374 		.ascii	"epStatus\000"
 1791      61747573 
 1791      00
 1792              	.LASF25:
 1793 0369 62756666 		.ascii	"bufferSize\000"
 1793      65725369 
 1793      7A6500
 1794              	.LASF24:
 1795 0374 62756666 		.ascii	"buffOffset\000"
 1795      4F666673 
ARM GAS  C:\Users\LAIR\AppData\Local\Temp\ccb9lIqg.s 			page 64


 1795      657400
 1796              	.LASF63:
 1797 037f 55534246 		.ascii	"USBFS_ReInitComponent\000"
 1797      535F5265 
 1797      496E6974 
 1797      436F6D70 
 1797      6F6E656E 
 1798              	.LASF40:
 1799 0395 72774472 		.ascii	"rwDr\000"
 1799      00
 1800              	.LASF37:
 1801 039a 72775761 		.ascii	"rwWaMsb\000"
 1801      4D736200 
 1802              	.LASF33:
 1803 03a2 6570496E 		.ascii	"epIntEn\000"
 1803      74456E00 
 1804              	.LASF50:
 1805 03aa 55534246 		.ascii	"USBFS_ARB_ISR\000"
 1805      535F4152 
 1805      425F4953 
 1805      5200
 1806              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
